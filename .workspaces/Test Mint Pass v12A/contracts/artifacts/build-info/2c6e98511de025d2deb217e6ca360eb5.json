{
	"id": "2c6e98511de025d2deb217e6ca360eb5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Test Mint Pass v12A.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.11;\n\n\nerror NoEthBalance();\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./ERC1155.sol\";\nimport \"./Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./SafeTransferLib.sol\";\n\n\n// import {SafeTransferLib} from \"./SafeTransferLib.sol\";\n\n\n/// @title TestMintPassv12A\n/// @author \n\ncontract TestMintPassv12A is ERC1155, Ownable {\n\n    /*///////////////////////////////////////////////////////////////\n                            TOKEN METADATA\n    //////////////////////////////////////////////////////////////*/\n    string public name;\n    string public symbol;\n    address public vaultAddress;\n\n    /*///////////////////////////////////////////////////////////////\n                            TOKEN DATA\n    //////////////////////////////////////////////////////////////*/\n    uint256 public immutable Test_Mint_Pass_BlackMaxSupply = 166;\n    uint256 public immutable Test_Mint_Pass_BlueMaxSupply = 330;\n    uint256 public immutable Test_Mint_Pass_BlackScholarshipTotal = 17;\n    uint256 public immutable Test_Mint_Pass_BlueScholarshipTotal = 33;\n\n    uint256 public immutable Test_Mint_Pass_BlackTokenId = 1;\n    uint256 public immutable Test_Mint_Pass_BlueTokenId = 2;\n    uint256 public constant Test_Mint_Pass_Black = 1;\n    uint256 public constant Test_Mint_Pass_Blue = 2;\n\n    /*///////////////////////////////////////////////////////////////\n                            STORAGE\n    //////////////////////////////////////////////////////////////*/\n    mapping(uint256 => uint256) private _totalSupply;\n    mapping(uint256 => string) public tokenURI;\n    mapping(address => uint256) public TestMintPassBlueMinted;\n    mapping(address => uint256) public TestMintPassBlackMinted;\n\n    /*///////////////////////////////////////////////////////////////\n                            CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        address _vaultAddress,\n        string memory _TestMintPassBlackTokenUri,\n        string memory _TestMintPassBlueTokenUri\n    ) {\n        _name = \"Test Mint Pass v12A\";\n        _symbol = \"&#10047;TMPV10I\";\n//        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n//        _setupRole(DEFAULT_ADMIN_ROLE, 0x4E322A20eD891fF77De2F774d2824F55B7152C73);\n        _vaultAddress = 0xC83BeBa473Dd6Bd1890519Ee0EEe2aC4Fa5836B5;\n        _TestMintPassBlueTokenUri = \"ipfs://QmcF3UrWPvyn95QW1Bu92Zj6UvFZ9SJGU8FmpFXFd6exeH\";\n        _TestMintPassBlackTokenUri = \"ipfs://QmQPHEhnjtRGo2mhuGVpUhUqzpqZM773baiCRt6AYVn8yk\";\n    }\n\n    /// @notice totalSupply of a token ID\n    /// @param id is the ID, either generalTokenId or blackTokenId\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n\n    /*///////////////////////////////////////////////////////////////\n                        ownerOnly FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n\n    /// @notice function to change the tokenURI\n    /// @param _newTokenURI this is the new token uri\n    /// @param tokenId this is the token ID that will be set\n    function setTokenURI(string memory _newTokenURI, uint256 tokenId)\n        public onlyOwner\n    {\n        tokenURI[tokenId] = _newTokenURI;\n    }\n\n    /// @notice function for owner to mint (LC)\n    /// @param to address to mint it to.\n    function mintScholarship(address to) public onlyOwner {\n        // mint black\n        _mint(to, Test_Mint_Pass_BlackTokenId, Test_Mint_Pass_BlackScholarshipTotal, \"\");\n        // mint general\n        _mint(to, Test_Mint_Pass_BlueTokenId, Test_Mint_Pass_BlueScholarshipTotal, \"\");\n    }\n\n    /// @notice function for owner to mint the token,\n    /// just in case it's needed, mintScholarship() will be used to mint all the scholarships\n    /// @param to address to mint it to.\n    /// @param amount the amount that the owner wants to mint.\n    /// @param tokenId which token ID 1 for black 2 for general\n    function ownerMint(\n        address to,\n        uint256 amount,\n        uint256 tokenId\n    ) public onlyOwner {\n        require(\n            tokenId == Test_Mint_Pass_BlueTokenId || tokenId == Test_Mint_Pass_BlackTokenId,\n            \"TMPV12A: Nonexistent token ID.\"\n        );\n\n        if (tokenId == Test_Mint_Pass_BlueTokenId) {\n            require(\n                amount + totalSupply(Test_Mint_Pass_BlueTokenId) <= Test_Mint_Pass_BlueMaxSupply,\n                \"TMPV12A: Amount is larger than totalSupply.\"\n            );\n            _mint(to, tokenId, amount, \"\");\n        } else {\n            require(\n                amount + totalSupply(Test_Mint_Pass_BlackTokenId) <= Test_Mint_Pass_BlackMaxSupply,\n                \"TMPV12A: Amount is larger than totalSupply.\"\n            );\n            _mint(to, tokenId, amount, \"\");\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                            ETH WITHDRAWAL\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Withdraw all ETH from the contract to the vault address.\n    function withdraw() public onlyOwner {\n        if (address(this).balance == 0) revert NoEthBalance();\n        SafeTransferLib.safeTransferETH(vaultAddress, address(this).balance);\n    }\n\n    /// @notice changing vault address\n    /// @param _vaultAddress is the new vaultAddress\n    function setVault(address _vaultAddress) public onlyOwner {\n        vaultAddress = _vaultAddress;\n    }\n\n    /// @notice returns the token URI\n    /// @param tokenId which token ID to return 1 or 2.\n    function uri(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        if (bytes(tokenURI[tokenId]).length == 0) {\n            return \"\";\n        }\n\n        return tokenURI[tokenId];\n    }\n\n\n}\n"
			},
			"contracts/SafeTransferLib.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\nimport \"./ERC20.sol\";\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\n/// @dev Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.\n\nlibrary SafeTransferLib {\n    event Debug(bool one, bool two, uint256 retsize);\n\n    /*//////////////////////////////////////////////////////////////\n                             ETH OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferETH(address to, uint256 amount) internal {\n        bool success;\n\n        assembly {\n            // Transfer the ETH and store if it succeeded or not.\n            success := call(gas(), to, amount, 0, 0, 0, 0)\n        }\n\n        require(success, \"ETH_TRANSFER_FAILED\");\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            ERC20 OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferFrom(\n        ERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), from) // Append the \"from\" argument.\n            mstore(add(freeMemoryPointer, 36), to) // Append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 68), amount) // Append the \"amount\" argument.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 100 because the length of our calldata totals up like so: 4 + 32 * 3.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 100, 0, 32)\n            )\n        }\n\n        require(success, \"TRANSFER_FROM_FAILED\");\n    }\n\n    function safeTransfer(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), to) // Append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Append the \"amount\" argument.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 68, 0, 32)\n            )\n        }\n\n        require(success, \"TRANSFER_FAILED\");\n    }\n\n    function safeApprove(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), to) // Append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Append the \"amount\" argument.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 68, 0, 32)\n            )\n        }\n\n        require(success, \"APPROVE_FAILED\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Minimalist and gas efficient standard ERC1155 implementation.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\nabstract contract ERC1155 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event TransferSingle(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 id,\n        uint256 amount\n    );\n\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] amounts\n    );\n\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    event URI(string value, uint256 indexed id);\n\n    /*//////////////////////////////////////////////////////////////\n                             ERC1155 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    mapping(address => mapping(uint256 => uint256)) public balanceOf;\n\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\n\n    /*//////////////////////////////////////////////////////////////\n                             METADATA LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function uri(uint256 id) public view virtual returns (string memory);\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC1155 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        isApprovedForAll[msg.sender][operator] = approved;\n\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual {\n        require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\");\n\n        balanceOf[from][id] -= amount;\n        balanceOf[to][id] += amount;\n\n        emit TransferSingle(msg.sender, from, to, id, amount);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155Received(msg.sender, from, id, amount, data) ==\n                    ERC1155TokenReceiver.onERC1155Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual {\n        require(ids.length == amounts.length, \"LENGTH_MISMATCH\");\n\n        require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\");\n\n        // Storing these outside the loop saves ~15 gas per iteration.\n        uint256 id;\n        uint256 amount;\n\n        for (uint256 i = 0; i < ids.length; ) {\n            id = ids[i];\n            amount = amounts[i];\n\n            balanceOf[from][id] -= amount;\n            balanceOf[to][id] += amount;\n\n            // An array can't have a total length\n            // larger than the max uint256 value.\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit TransferBatch(msg.sender, from, to, ids, amounts);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, from, ids, amounts, data) ==\n                    ERC1155TokenReceiver.onERC1155BatchReceived.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function balanceOfBatch(address[] calldata owners, uint256[] calldata ids)\n        public\n        view\n        virtual\n        returns (uint256[] memory balances)\n    {\n        require(owners.length == ids.length, \"LENGTH_MISMATCH\");\n\n        balances = new uint256[](owners.length);\n\n        // Unchecked because the only math done is incrementing\n        // the array index counter which cannot possibly overflow.\n        unchecked {\n            for (uint256 i = 0; i < owners.length; ++i) {\n                balances[i] = balanceOf[owners[i]][ids[i]];\n            }\n        }\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC165 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\n            interfaceId == 0xd9b67a26 || // ERC165 Interface ID for ERC1155\n            interfaceId == 0x0e89341c; // ERC165 Interface ID for ERC1155MetadataURI\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        balanceOf[to][id] += amount;\n\n        emit TransferSingle(msg.sender, address(0), to, id, amount);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155Received(msg.sender, address(0), id, amount, data) ==\n                    ERC1155TokenReceiver.onERC1155Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function _batchMint(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        uint256 idsLength = ids.length; // Saves MLOADs.\n\n        require(idsLength == amounts.length, \"LENGTH_MISMATCH\");\n\n        for (uint256 i = 0; i < idsLength; ) {\n            balanceOf[to][ids[i]] += amounts[i];\n\n            // An array can't have a total length\n            // larger than the max uint256 value.\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit TransferBatch(msg.sender, address(0), to, ids, amounts);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, address(0), ids, amounts, data) ==\n                    ERC1155TokenReceiver.onERC1155BatchReceived.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function _batchBurn(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        uint256 idsLength = ids.length; // Saves MLOADs.\n\n        require(idsLength == amounts.length, \"LENGTH_MISMATCH\");\n\n        for (uint256 i = 0; i < idsLength; ) {\n            balanceOf[from][ids[i]] -= amounts[i];\n\n            // An array can't have a total length\n            // larger than the max uint256 value.\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit TransferBatch(msg.sender, from, address(0), ids, amounts);\n    }\n\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        balanceOf[from][id] -= amount;\n\n        emit TransferSingle(msg.sender, from, address(0), id, amount);\n    }\n}\n\n/// @notice A generic interface for a contract which properly accepts ERC1155 tokens.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\nabstract contract ERC1155TokenReceiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) external virtual returns (bytes4) {\n        return ERC1155TokenReceiver.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) external virtual returns (bytes4) {\n        return ERC1155TokenReceiver.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122023510280639f1987959a3a3f8fd335c3ebdb9e1a5eec465f08f1e0b67a895eeb64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023510280639f1987959a3a3f8fd335c3ebdb9e1a5eec465f08f1e0b67a895eeb64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 MLOAD MUL DUP1 PUSH4 0x9F198795 SWAP11 GASPRICE EXTCODEHASH DUP16 0xD3 CALLDATALOAD 0xC3 0xEB 0xDB SWAP15 BYTE 0x5E 0xEC CHAINID 0x5F ADDMOD CALL 0xE0 0xB6 PUSH27 0x895EEB64736F6C634300080B003300000000000000000000000000 ",
							"sourceMap": "424:971:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023510280639f1987959a3a3f8fd335c3ebdb9e1a5eec465f08f1e0b67a895eeb64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 MLOAD MUL DUP1 PUSH4 0x9F198795 SWAP11 GASPRICE EXTCODEHASH DUP16 0xD3 CALLDATALOAD 0xC3 0xEB 0xDB SWAP15 BYTE 0x5E 0xEC CHAINID 0x5F ADDMOD CALL 0xE0 0xB6 PUSH27 0x895EEB64736F6C634300080B003300000000000000000000000000 ",
							"sourceMap": "424:971:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122023510280639f1987959a3a3f8fd335c3ebdb9e1a5eec465f08f1e0b67a895eeb64736f6c634300080b0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b963d1eeac13be6eb13274bc7c24aaef659bce068306f3218f2ec8001937574464736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b963d1eeac13be6eb13274bc7c24aaef659bce068306f3218f2ec8001937574464736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH4 0xD1EEAC13 0xBE PUSH15 0xB13274BC7C24AAEF659BCE068306F3 0x21 DUP16 0x2E 0xC8 STOP NOT CALLDATACOPY JUMPI DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "146:1885:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b963d1eeac13be6eb13274bc7c24aaef659bce068306f3218f2ec8001937574464736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH4 0xD1EEAC13 0xBE PUSH15 0xB13274BC7C24AAEF659BCE068306F3 0x21 DUP16 0x2E 0xC8 STOP NOT CALLDATACOPY JUMPI DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "146:1885:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b963d1eeac13be6eb13274bc7c24aaef659bce068306f3218f2ec8001937574464736f6c634300080b0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "balances",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimalist and gas efficient standard ERC1155 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155.sol\":{\"keccak256\":\"0x0ed909c57d26645a267388dcec3ba5b8ce7510afb9ed9561da45b0d386f90ab8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b61980aba128f354f0dbdb8ccf7fa5b56ab680ecb45ba988c113c3e7885e9418\",\"dweb:/ipfs/QmUBnfQ6Wg5MjoEpjem3zFeZFWiwKXuL6oufxmTyk22sNx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 816,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 822,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimalist and gas efficient standard ERC1155 implementation.",
						"version": 1
					}
				},
				"ERC1155TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A generic interface for a contract which properly accepts ERC1155 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155.sol\":\"ERC1155TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155.sol\":{\"keccak256\":\"0x0ed909c57d26645a267388dcec3ba5b8ce7510afb9ed9561da45b0d386f90ab8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b61980aba128f354f0dbdb8ccf7fa5b56ab680ecb45ba988c113c3e7885e9418\",\"dweb:/ipfs/QmUBnfQ6Wg5MjoEpjem3zFeZFWiwKXuL6oufxmTyk22sNx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A generic interface for a contract which properly accepts ERC1155 tokens.",
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)",
						"details": "Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1467,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1469,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1473,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1477,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1483,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1491,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Modern and gas efficient ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x66ff87e92b16b128d2971cc4a459666e00faad67e95e69a4f3860fb45b09504b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ff210c813294070976680c1405cec00c710b8c040fad34e29e0164b6e8f0a18\",\"dweb:/ipfs/QmVyP53zS2gfjn97Q7rPn2bPa6jn1Vgq96ZBzrLzXk14yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1842,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeTransferLib.sol": {
				"SafeTransferLib": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "one",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "two",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "retsize",
									"type": "uint256"
								}
							],
							"name": "Debug",
							"type": "event"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)",
						"details": "Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeTransferLib.sol\":563:5814  library SafeTransferLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeTransferLib.sol\":563:5814  library SafeTransferLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220720c0cc562dd8feab93c2a935f95d31192d567736dacafa736b0a8500d98c4d164736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220720c0cc562dd8feab93c2a935f95d31192d567736dacafa736b0a8500d98c4d164736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC0CC562DD8FEAB93C2A935F95D31192D56773 PUSH14 0xACAFA736B0A8500D98C4D164736F PUSH13 0x634300080B0033000000000000 ",
							"sourceMap": "563:5251:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;563:5251:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220720c0cc562dd8feab93c2a935f95d31192d567736dacafa736b0a8500d98c4d164736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC0CC562DD8FEAB93C2A935F95D31192D56773 PUSH14 0xACAFA736B0A8500D98C4D164736F PUSH13 0x634300080B0033000000000000 ",
							"sourceMap": "563:5251:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(contract ERC20,address,uint256)": "infinite",
								"safeTransfer(contract ERC20,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(contract ERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 563,
									"end": 5814,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220720c0cc562dd8feab93c2a935f95d31192d567736dacafa736b0a8500d98c4d164736f6c634300080b0033",
									".code": [
										{
											"begin": 563,
											"end": 5814,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 563,
											"end": 5814,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"one\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"two\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"retsize\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\",\"details\":\"Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]},\"contracts/SafeTransferLib.sol\":{\"keccak256\":\"0x970dffa8267c7c5c11b102a248ee2ee1cba8518b0b45253254c08115fd8c4497\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4f8cbda583f0ddbb509d99dd752cc4d90d8591dc08ec250bae3ae899c9816d3c\",\"dweb:/ipfs/QmcGSCg9hhtF5qgGGhQenvV21fRNEhE93HNLW3RNJxUJdR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe ETH and ERC20 transfer library that gracefully handles missing return values.",
						"version": 1
					}
				}
			},
			"contracts/Test Mint Pass v12A.sol": {
				"TestMintPassv12A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_vaultAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_TestMintPassBlackTokenUri",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_TestMintPassBlueTokenUri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NoEthBalance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "TestMintPassBlackMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "TestMintPassBlueMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_Black",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_BlackMaxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_BlackScholarshipTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_BlackTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_Blue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_BlueMaxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_BlueScholarshipTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Test_Mint_Pass_BlueTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "balances",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mintScholarship",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newTokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "setTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultAddress",
									"type": "address"
								}
							],
							"name": "setVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"mintScholarship(address)": {
								"params": {
									"to": "address to mint it to."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerMint(address,uint256,uint256)": {
								"params": {
									"amount": "the amount that the owner wants to mint.",
									"to": "address to mint it to.",
									"tokenId": "which token ID 1 for black 2 for general"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setTokenURI(string,uint256)": {
								"params": {
									"_newTokenURI": "this is the new token uri",
									"tokenId": "this is the token ID that will be set"
								}
							},
							"setVault(address)": {
								"params": {
									"_vaultAddress": "is the new vaultAddress"
								}
							},
							"totalSupply(uint256)": {
								"params": {
									"id": "is the ID, either generalTokenId or blackTokenId"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"params": {
									"tokenId": "which token ID to return 1 or 2."
								}
							}
						},
						"title": "TestMintPassv12A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test Mint Pass v12A.sol\":502:6055  contract TestMintPassv12A is ERC1155, Ownable {... */\n  mstore(0x40, 0x0140)\n    /* \"contracts/Test Mint Pass v12A.sol\":1056:1059  166 */\n  0xa6\n    /* \"contracts/Test Mint Pass v12A.sol\":999:1059  uint256 public immutable Test_Mint_Pass_BlackMaxSupply = 166 */\n  0x80\n  mstore\n    /* \"contracts/Test Mint Pass v12A.sol\":1121:1124  330 */\n  0x014a\n    /* \"contracts/Test Mint Pass v12A.sol\":1065:1124  uint256 public immutable Test_Mint_Pass_BlueMaxSupply = 330 */\n  0xa0\n  mstore\n    /* \"contracts/Test Mint Pass v12A.sol\":1194:1196  17 */\n  0x11\n    /* \"contracts/Test Mint Pass v12A.sol\":1130:1196  uint256 public immutable Test_Mint_Pass_BlackScholarshipTotal = 17 */\n  0xc0\n  mstore\n    /* \"contracts/Test Mint Pass v12A.sol\":1265:1267  33 */\n  0x21\n    /* \"contracts/Test Mint Pass v12A.sol\":1202:1267  uint256 public immutable Test_Mint_Pass_BlueScholarshipTotal = 33 */\n  0xe0\n  mstore\n    /* \"contracts/Test Mint Pass v12A.sol\":1329:1330  1 */\n  0x01\n    /* \"contracts/Test Mint Pass v12A.sol\":1274:1330  uint256 public immutable Test_Mint_Pass_BlackTokenId = 1 */\n  0x0100\n  mstore\n    /* \"contracts/Test Mint Pass v12A.sol\":1390:1391  2 */\n  0x02\n    /* \"contracts/Test Mint Pass v12A.sol\":1336:1391  uint256 public immutable Test_Mint_Pass_BlueTokenId = 2 */\n  0x0120\n  mstore\n    /* \"contracts/Test Mint Pass v12A.sol\":2089:2775  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":942:960  _transferOwnership */\n  tag_10\n    /* \"contracts/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Test Mint Pass v12A.sol\":2307:2336  _name = \"Test Mint Pass v12A\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x13\n  dup2\n  mstore\n  0x20\n  add\n  0x54657374204d696e742050617373207631324100000000000000000000000000\n  dup2\n  mstore\n  pop\n  swap5\n  pop\n    /* \"contracts/Test Mint Pass v12A.sol\":2346:2373  _symbol = \"&#10047;TMPV10I\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x88, 0x262331303034373b544d5056313049)\n  dup2\n  mstore\n  pop\n  swap4\n  pop\n    /* \"contracts/Test Mint Pass v12A.sol\":2539:2581  0xC83BeBa473Dd6Bd1890519Ee0EEe2aC4Fa5836B5 */\n  0xc83beba473dd6bd1890519ee0eee2ac4fa5836b5\n    /* \"contracts/Test Mint Pass v12A.sol\":2523:2581  _vaultAddress = 0xC83BeBa473Dd6Bd1890519Ee0EEe2aC4Fa5836B5 */\n  swap3\n  pop\n    /* \"contracts/Test Mint Pass v12A.sol\":2591:2674  _TestMintPassBlueTokenUri = \"ipfs://QmcF3UrWPvyn95QW1Bu92Zj6UvFZ9SJGU8FmpFXFd6exeH\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x35\n  dup2\n  mstore\n  0x20\n  add\n  data_81e3e779d26b52f3b70cf1f316856bf926a1e9c7fa506456d5d886df98517a32\n  0x35\n  swap2\n  codecopy\n  swap1\n  pop\n    /* \"contracts/Test Mint Pass v12A.sol\":2684:2768  _TestMintPassBlackTokenUri = \"ipfs://QmQPHEhnjtRGo2mhuGVpUhUqzpqZM773baiCRt6AYVn8yk\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x35\n  dup2\n  mstore\n  0x20\n  add\n  data_013979db04d5eaac7dba88b615b122267c4942f2d42bac3828de122531ec347e\n  0x35\n  swap2\n  codecopy\n  swap2\n  pop\n    /* \"contracts/Test Mint Pass v12A.sol\":2089:2775  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Test Mint Pass v12A.sol\":502:6055  contract TestMintPassv12A is ERC1155, Ownable {... */\n  jump(tag_17)\n    /* \"contracts/Ownable.sol\":2291:2478  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/Ownable.sol\":2383:2389  _owner */\n  0x02\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Ownable.sol\":2399:2416  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Ownable.sol\":2431:2471  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/Ownable.sol\":2383:2389  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/Ownable.sol\":2399:2416  _owner = newOwner */\n  swap1\n    /* \"contracts/Ownable.sol\":2383:2389  _owner */\n  dup3\n  swap1\n    /* \"contracts/Ownable.sol\":2431:2471  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/Ownable.sol\":2364:2380  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/Ownable.sol\":2431:2471  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/Ownable.sol\":2354:2478  {... */\n  pop\n    /* \"contracts/Ownable.sol\":2291:2478  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_15:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_16:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_20:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_22\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_24\n  tag_15\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_25:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_26:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_26)\ntag_28:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_29:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:2175   */\ntag_3:\n    /* \"#utility.yul\":1182:1188   */\n  0x00\n    /* \"#utility.yul\":1190:1196   */\n  dup1\n    /* \"#utility.yul\":1198:1204   */\n  0x00\n    /* \"#utility.yul\":1206:1212   */\n  dup1\n    /* \"#utility.yul\":1214:1220   */\n  0x00\n    /* \"#utility.yul\":1267:1270   */\n  0xa0\n    /* \"#utility.yul\":1255:1264   */\n  dup7\n    /* \"#utility.yul\":1246:1253   */\n  dup9\n    /* \"#utility.yul\":1242:1265   */\n  sub\n    /* \"#utility.yul\":1238:1271   */\n  slt\n    /* \"#utility.yul\":1235:1288   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1284:1285   */\n  0x00\n    /* \"#utility.yul\":1281:1282   */\n  dup1\n    /* \"#utility.yul\":1274:1286   */\n  revert\n    /* \"#utility.yul\":1235:1288   */\ntag_31:\n    /* \"#utility.yul\":1311:1327   */\n  dup6\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1376:1390   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1373:1407   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1403:1404   */\n  0x00\n    /* \"#utility.yul\":1400:1401   */\n  dup1\n    /* \"#utility.yul\":1393:1405   */\n  revert\n    /* \"#utility.yul\":1373:1407   */\ntag_32:\n    /* \"#utility.yul\":1426:1487   */\n  tag_33\n    /* \"#utility.yul\":1479:1486   */\n  dup10\n    /* \"#utility.yul\":1470:1476   */\n  dup4\n    /* \"#utility.yul\":1459:1468   */\n  dup11\n    /* \"#utility.yul\":1455:1477   */\n  add\n    /* \"#utility.yul\":1426:1487   */\n  tag_16\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1416:1487   */\n  swap7\n  pop\n    /* \"#utility.yul\":1533:1535   */\n  0x20\n    /* \"#utility.yul\":1522:1531   */\n  dup9\n    /* \"#utility.yul\":1518:1536   */\n  add\n    /* \"#utility.yul\":1512:1537   */\n  mload\n    /* \"#utility.yul\":1496:1537   */\n  swap2\n  pop\n    /* \"#utility.yul\":1562:1564   */\n  dup1\n    /* \"#utility.yul\":1552:1560   */\n  dup3\n    /* \"#utility.yul\":1549:1565   */\n  gt\n    /* \"#utility.yul\":1546:1582   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1578:1579   */\n  0x00\n    /* \"#utility.yul\":1575:1576   */\n  dup1\n    /* \"#utility.yul\":1568:1580   */\n  revert\n    /* \"#utility.yul\":1546:1582   */\ntag_34:\n    /* \"#utility.yul\":1601:1664   */\n  tag_35\n    /* \"#utility.yul\":1656:1663   */\n  dup10\n    /* \"#utility.yul\":1645:1653   */\n  dup4\n    /* \"#utility.yul\":1634:1643   */\n  dup11\n    /* \"#utility.yul\":1630:1654   */\n  add\n    /* \"#utility.yul\":1601:1664   */\n  tag_16\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1707:1709   */\n  0x40\n    /* \"#utility.yul\":1692:1710   */\n  dup10\n  add\n    /* \"#utility.yul\":1686:1711   */\n  mload\n    /* \"#utility.yul\":1591:1664   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":1686:1711   */\n  swap2\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1740:1771   */\n  dup3\n  and\n    /* \"#utility.yul\":1730:1772   */\n  dup3\n  eq\n    /* \"#utility.yul\":1720:1790   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1786:1787   */\n  0x00\n    /* \"#utility.yul\":1783:1784   */\n  dup1\n    /* \"#utility.yul\":1776:1788   */\n  revert\n    /* \"#utility.yul\":1720:1790   */\ntag_36:\n    /* \"#utility.yul\":1860:1862   */\n  0x60\n    /* \"#utility.yul\":1845:1863   */\n  dup9\n  add\n    /* \"#utility.yul\":1839:1864   */\n  mload\n    /* \"#utility.yul\":1809:1814   */\n  swap2\n  swap5\n  pop\n    /* \"#utility.yul\":1876:1892   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1873:1909   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1902:1903   */\n  dup1\n    /* \"#utility.yul\":1895:1907   */\n  revert\n    /* \"#utility.yul\":1873:1909   */\ntag_37:\n    /* \"#utility.yul\":1928:1991   */\n  tag_38\n    /* \"#utility.yul\":1983:1990   */\n  dup10\n    /* \"#utility.yul\":1972:1980   */\n  dup4\n    /* \"#utility.yul\":1961:1970   */\n  dup11\n    /* \"#utility.yul\":1957:1981   */\n  add\n    /* \"#utility.yul\":1928:1991   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1918:1991   */\n  swap4\n  pop\n    /* \"#utility.yul\":2037:2040   */\n  0x80\n    /* \"#utility.yul\":2026:2035   */\n  dup9\n    /* \"#utility.yul\":2022:2041   */\n  add\n    /* \"#utility.yul\":2016:2042   */\n  mload\n    /* \"#utility.yul\":2000:2042   */\n  swap2\n  pop\n    /* \"#utility.yul\":2067:2069   */\n  dup1\n    /* \"#utility.yul\":2057:2065   */\n  dup3\n    /* \"#utility.yul\":2054:2070   */\n  gt\n    /* \"#utility.yul\":2051:2087   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2083:2084   */\n  0x00\n    /* \"#utility.yul\":2080:2081   */\n  dup1\n    /* \"#utility.yul\":2073:2085   */\n  revert\n    /* \"#utility.yul\":2051:2087   */\ntag_39:\n  pop\n    /* \"#utility.yul\":2106:2169   */\n  tag_40\n    /* \"#utility.yul\":2161:2168   */\n  dup9\n    /* \"#utility.yul\":2150:2158   */\n  dup3\n    /* \"#utility.yul\":2139:2148   */\n  dup10\n    /* \"#utility.yul\":2135:2159   */\n  add\n    /* \"#utility.yul\":2106:2169   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":2096:2169   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:2175   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/Test Mint Pass v12A.sol\":502:6055  contract TestMintPassv12A is ERC1155, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xdd6ebedecc3782991b040722d05346ae76115706b237b0f241066a60ee7c2169\")\n  0x00\n  assignImmutable(\"0xf598d05e51facafddb4666a870ba9c91ee31463df052628aed50dc3216257420\")\n  0x00\n  assignImmutable(\"0xd188a1da6d6dfc972f5d1614b9a5ea681202f643e26bdaa8898fb08d79dc84fc\")\n  0x00\n  assignImmutable(\"0x14502941cdfbd1b140f463b7c0eceb6872b4ceed672dc2d6c10bcedbce3171c9\")\n  0x00\n  assignImmutable(\"0x1cecd53757ff41334b0aac95136e45c28b8f0c7557fa90afd0025eaeb7956e02\")\n  0x00\n  assignImmutable(\"0x54d74a311c644ec85dcac6b0313416846d72906b540389d43ad99715f0c32312\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_013979db04d5eaac7dba88b615b122267c4942f2d42bac3828de122531ec347e 697066733a2f2f516d51504845686e6a7452476f326d6875475670556855717a70715a4d373733626169435274364159566e38796b\ndata_81e3e779d26b52f3b70cf1f316856bf926a1e9c7fa506456d5d886df98517a32 697066733a2f2f516d6346335572575076796e3935515731427539325a6a365576465a39534a475538466d70465846643665786548\n\nsub_0: assembly {\n        /* \"contracts/Test Mint Pass v12A.sol\":502:6055  contract TestMintPassv12A is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71d05aec\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xcbf99084\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf48deaaa\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xcbf99084\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcc2851c6\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdec125ba\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdf52fa84\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x9fa3cda1\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x9fa3cda1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x71d05aec\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9e3cf643\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x45114990\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x45114990\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6817031b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x388b9fe0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x430bf08a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x09a3beef\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x09a3beef\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0b22f540\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x16473cf7\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC1155.sol\":1116:1180  mapping(address => mapping(uint256 => uint256)) public balanceOf */\n    tag_3:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      0x00\n      0x20\n      dup2\n      dup2\n      mstore\n      swap3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      mstore\n      swap1\n      dup2\n      mstore\n      keccak256\n      sload\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"contracts/ERC1155.sol\":1116:1180  mapping(address => mapping(uint256 => uint256)) public balanceOf */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":4603:4943  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_4:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/ERC1155.sol\":4603:4943  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      tag_45\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":737:755  string public name */\n    tag_5:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":3356:3500  function setTokenURI(string memory _newTokenURI, uint256 tokenId)... */\n    tag_6:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/Test Mint Pass v12A.sol\":1845:1903  mapping(address => uint256) public TestMintPassBlackMinted */\n    tag_7:\n      tag_41\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":5797:6051  function uri(uint256 tokenId)... */\n    tag_8:\n      tag_53\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":3595:3880  function mintScholarship(address to) public onlyOwner {... */\n    tag_9:\n      tag_57\n      tag_72\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":2617:3826  function safeBatchTransferFrom(... */\n    tag_10:\n      tag_57\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":4202:5049  function ownerMint(... */\n    tag_11:\n      tag_57\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":5311:5496  function withdraw() public onlyOwner {... */\n    tag_12:\n      tag_57\n      tag_83\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":787:814  address public vaultAddress */\n    tag_13:\n      sload(0x05)\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_84:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5856:5888   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5838:5889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5826:5828   */\n      0x20\n        /* \"#utility.yul\":5811:5829   */\n      add\n        /* \"contracts/Test Mint Pass v12A.sol\":787:814  address public vaultAddress */\n      tag_45\n        /* \"#utility.yul\":5692:5895   */\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":1065:1124  uint256 public immutable Test_Mint_Pass_BlueMaxSupply = 330 */\n    tag_14:\n      tag_41\n      immutable(\"0x1cecd53757ff41334b0aac95136e45c28b8f0c7557fa90afd0025eaeb7956e02\")\n      dup2\n      jump\n        /* \"contracts/ERC1155.sol\":3832:4415  function balanceOfBatch(address[] calldata owners, uint256[] calldata ids)... */\n    tag_15:\n      tag_91\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":5594:5697  function setVault(address _vaultAddress) public onlyOwner {... */\n    tag_16:\n      tag_57\n      tag_98\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1689:1790  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_57\n      tag_101\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":1336:1391  uint256 public immutable Test_Mint_Pass_BlueTokenId = 2 */\n    tag_18:\n      tag_41\n      immutable(\"0xdd6ebedecc3782991b040722d05346ae76115706b237b0f241066a60ee7c2169\")\n      dup2\n      jump\n        /* \"contracts/Ownable.sol\":1057:1142  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Ownable.sol\":1057:1142  function owner() public view virtual returns (address) {... */\n      jump(tag_84)\n        /* \"contracts/Test Mint Pass v12A.sol\":761:781  string public symbol */\n    tag_20:\n      tag_53\n      tag_109\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":1274:1330  uint256 public immutable Test_Mint_Pass_BlackTokenId = 1 */\n    tag_21:\n      tag_41\n      immutable(\"0xf598d05e51facafddb4666a870ba9c91ee31463df052628aed50dc3216257420\")\n      dup2\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":1782:1839  mapping(address => uint256) public TestMintPassBlueMinted */\n    tag_22:\n      tag_41\n      tag_115\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_115:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/ERC1155.sol\":1703:1906  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_23:\n      tag_57\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":2890:3001  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_41\n      tag_123\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_123:\n        /* \"contracts/Test Mint Pass v12A.sol\":2952:2959  uint256 */\n      0x00\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2994  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2990  _totalSupply */\n      0x06\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2994  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Test Mint Pass v12A.sol\":2890:3001  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":1734:1776  mapping(uint256 => string) public tokenURI */\n    tag_25:\n      tag_53\n      tag_127\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":1397:1445  uint256 public constant Test_Mint_Pass_Black = 1 */\n    tag_26:\n      tag_41\n        /* \"contracts/Test Mint Pass v12A.sol\":1444:1445  1 */\n      0x01\n        /* \"contracts/Test Mint Pass v12A.sol\":1397:1445  uint256 public constant Test_Mint_Pass_Black = 1 */\n      dup2\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":1451:1498  uint256 public constant Test_Mint_Pass_Blue = 2 */\n    tag_27:\n      tag_41\n        /* \"contracts/Test Mint Pass v12A.sol\":1497:1498  2 */\n      0x02\n        /* \"contracts/Test Mint Pass v12A.sol\":1451:1498  uint256 public constant Test_Mint_Pass_Blue = 2 */\n      dup2\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":1130:1196  uint256 public immutable Test_Mint_Pass_BlackScholarshipTotal = 17 */\n    tag_28:\n      tag_41\n      immutable(\"0x14502941cdfbd1b140f463b7c0eceb6872b4ceed672dc2d6c10bcedbce3171c9\")\n      dup2\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":1202:1267  uint256 public immutable Test_Mint_Pass_BlueScholarshipTotal = 33 */\n    tag_29:\n      tag_41\n      immutable(\"0xd188a1da6d6dfc972f5d1614b9a5ea681202f643e26bdaa8898fb08d79dc84fc\")\n      dup2\n      jump\n        /* \"contracts/ERC1155.sol\":1187:1255  mapping(address => mapping(address => bool)) public isApprovedForAll */\n    tag_30:\n      tag_47\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/ERC1155.sol\":1912:2611  function safeTransferFrom(... */\n    tag_31:\n      tag_57\n      tag_148\n      calldatasize\n      0x04\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1939:2137  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_57\n      tag_152\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":999:1059  uint256 public immutable Test_Mint_Pass_BlackMaxSupply = 166 */\n    tag_33:\n      tag_41\n      immutable(\"0x54d74a311c644ec85dcac6b0313416846d72906b540389d43ad99715f0c32312\")\n      dup2\n      jump\n        /* \"contracts/ERC1155.sol\":4603:4943  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_50:\n        /* \"contracts/ERC1155.sol\":4679:4683  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":4714:4739  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":4714:4814  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n      tag_158\n      jumpi\n      pop\n      shl(0xe1, 0x6cdb3d13)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":4789:4814  interfaceId == 0xd9b67a26 */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":4714:4814  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n    tag_158:\n        /* \"contracts/ERC1155.sol\":4714:4890  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n      dup1\n      tag_159\n      jumpi\n      pop\n      shl(0xe2, 0x03a24d07)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":4865:4890  interfaceId == 0x0e89341c */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":4714:4890  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n    tag_159:\n        /* \"contracts/ERC1155.sol\":4695:4890  return... */\n      swap3\n        /* \"contracts/ERC1155.sol\":4603:4943  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":737:755  string public name */\n    tag_54:\n      0x03\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_161\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":3356:3500  function setTokenURI(string memory _newTokenURI, uint256 tokenId)... */\n    tag_60:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1269:1292  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1261:1329  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Test Mint Pass v12A.sol\":3461:3478  tokenURI[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Test Mint Pass v12A.sol\":3461:3469  tokenURI */\n      0x07\n        /* \"contracts/Test Mint Pass v12A.sol\":3461:3478  tokenURI[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Test Mint Pass v12A.sol\":3461:3493  tokenURI[tokenId] = _newTokenURI */\n      dup4\n      mload\n      tag_174\n      swap3\n      dup6\n      add\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      pop\n        /* \"contracts/Test Mint Pass v12A.sol\":3356:3500  function setTokenURI(string memory _newTokenURI, uint256 tokenId)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":5797:6051  function uri(uint256 tokenId)... */\n    tag_69:\n        /* \"contracts/Test Mint Pass v12A.sol\":5944:5961  tokenURI[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Test Mint Pass v12A.sol\":5944:5952  tokenURI */\n      0x07\n        /* \"contracts/Test Mint Pass v12A.sol\":5944:5961  tokenURI[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Test Mint Pass v12A.sol\":5938:5969  bytes(tokenURI[tokenId]).length */\n      dup1\n      sload\n        /* \"contracts/Test Mint Pass v12A.sol\":5905:5918  string memory */\n      0x60\n      swap2\n        /* \"contracts/Test Mint Pass v12A.sol\":5944:5961  tokenURI[tokenId] */\n      swap1\n        /* \"contracts/Test Mint Pass v12A.sol\":5938:5969  bytes(tokenURI[tokenId]).length */\n      tag_177\n      swap1\n      tag_161\n      jump\t// in\n    tag_177:\n        /* \"contracts/Test Mint Pass v12A.sol\":5938:5974  bytes(tokenURI[tokenId]).length == 0 */\n      iszero\n        /* \"contracts/Test Mint Pass v12A.sol\":5934:6010  if (bytes(tokenURI[tokenId]).length == 0) {... */\n      iszero\n      swap1\n      pop\n      tag_178\n      jumpi\n      pop\n      pop\n        /* \"contracts/Test Mint Pass v12A.sol\":5990:5999  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/Test Mint Pass v12A.sol\":5797:6051  function uri(uint256 tokenId)... */\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":5934:6010  if (bytes(tokenURI[tokenId]).length == 0) {... */\n    tag_178:\n        /* \"contracts/Test Mint Pass v12A.sol\":6027:6044  tokenURI[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Test Mint Pass v12A.sol\":6027:6035  tokenURI */\n      0x07\n        /* \"contracts/Test Mint Pass v12A.sol\":6027:6044  tokenURI[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Test Mint Pass v12A.sol\":6020:6044  return tokenURI[tokenId] */\n      dup1\n      sload\n      tag_179\n      swap1\n      tag_161\n      jump\t// in\n    tag_179:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_161\n      jump\t// in\n    tag_180:\n      dup1\n      iszero\n      tag_181\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_182\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_181)\n    tag_182:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_183:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_183\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Test Mint Pass v12A.sol\":5797:6051  function uri(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":3595:3880  function mintScholarship(address to) public onlyOwner {... */\n    tag_73:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1269:1292  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1261:1329  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_187:\n        /* \"contracts/Test Mint Pass v12A.sol\":3681:3761  _mint(to, Test_Mint_Pass_BlackTokenId, Test_Mint_Pass_BlackScholarshipTotal, \"\") */\n      tag_190\n        /* \"contracts/Test Mint Pass v12A.sol\":3687:3689  to */\n      dup2\n        /* \"contracts/Test Mint Pass v12A.sol\":3691:3718  Test_Mint_Pass_BlackTokenId */\n      immutable(\"0xf598d05e51facafddb4666a870ba9c91ee31463df052628aed50dc3216257420\")\n        /* \"contracts/Test Mint Pass v12A.sol\":3720:3756  Test_Mint_Pass_BlackScholarshipTotal */\n      immutable(\"0x14502941cdfbd1b140f463b7c0eceb6872b4ceed672dc2d6c10bcedbce3171c9\")\n        /* \"contracts/Test Mint Pass v12A.sol\":3681:3761  _mint(to, Test_Mint_Pass_BlackTokenId, Test_Mint_Pass_BlackScholarshipTotal, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/Test Mint Pass v12A.sol\":3681:3686  _mint */\n      tag_191\n        /* \"contracts/Test Mint Pass v12A.sol\":3681:3761  _mint(to, Test_Mint_Pass_BlackTokenId, Test_Mint_Pass_BlackScholarshipTotal, \"\") */\n      jump\t// in\n    tag_190:\n        /* \"contracts/Test Mint Pass v12A.sol\":3795:3873  _mint(to, Test_Mint_Pass_BlueTokenId, Test_Mint_Pass_BlueScholarshipTotal, \"\") */\n      tag_192\n        /* \"contracts/Test Mint Pass v12A.sol\":3801:3803  to */\n      dup2\n        /* \"contracts/Test Mint Pass v12A.sol\":3805:3831  Test_Mint_Pass_BlueTokenId */\n      immutable(\"0xdd6ebedecc3782991b040722d05346ae76115706b237b0f241066a60ee7c2169\")\n        /* \"contracts/Test Mint Pass v12A.sol\":3833:3868  Test_Mint_Pass_BlueScholarshipTotal */\n      immutable(\"0xd188a1da6d6dfc972f5d1614b9a5ea681202f643e26bdaa8898fb08d79dc84fc\")\n        /* \"contracts/Test Mint Pass v12A.sol\":3795:3873  _mint(to, Test_Mint_Pass_BlueTokenId, Test_Mint_Pass_BlueScholarshipTotal, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/Test Mint Pass v12A.sol\":3795:3800  _mint */\n      tag_191\n        /* \"contracts/Test Mint Pass v12A.sol\":3795:3873  _mint(to, Test_Mint_Pass_BlueTokenId, Test_Mint_Pass_BlueScholarshipTotal, \"\") */\n      jump\t// in\n    tag_192:\n        /* \"contracts/Test Mint Pass v12A.sol\":3595:3880  function mintScholarship(address to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":2617:3826  function safeBatchTransferFrom(... */\n    tag_77:\n        /* \"contracts/ERC1155.sol\":2826:2854  ids.length == amounts.length */\n      dup5\n      dup4\n      eq\n        /* \"contracts/ERC1155.sol\":2818:2874  require(ids.length == amounts.length, \"LENGTH_MISMATCH\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9580:9582   */\n      0x20\n        /* \"contracts/ERC1155.sol\":2818:2874  require(ids.length == amounts.length, \"LENGTH_MISMATCH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9562:9583   */\n      mstore\n        /* \"#utility.yul\":9619:9621   */\n      0x0f\n        /* \"#utility.yul\":9599:9617   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9592:9622   */\n      mstore\n      shl(0x8b, 0x0988a9c8ea890be9a92a69a82a8869)\n        /* \"#utility.yul\":9638:9656   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9631:9676   */\n      mstore\n        /* \"#utility.yul\":9693:9711   */\n      0x64\n      add\n        /* \"contracts/ERC1155.sol\":2818:2874  require(ids.length == amounts.length, \"LENGTH_MISMATCH\") */\n      tag_171\n        /* \"#utility.yul\":9378:9717   */\n      jump\n        /* \"contracts/ERC1155.sol\":2818:2874  require(ids.length == amounts.length, \"LENGTH_MISMATCH\") */\n    tag_194:\n        /* \"contracts/ERC1155.sol\":2893:2903  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2893:2911  msg.sender == from */\n      dup10\n      and\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":2893:2949  msg.sender == from || isApprovedForAll[from][msg.sender] */\n      tag_197\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2915:2937  isApprovedForAll[from] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":2915:2931  isApprovedForAll */\n      0x01\n        /* \"contracts/ERC1155.sol\":2915:2937  isApprovedForAll[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":2938:2948  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":2915:2949  isApprovedForAll[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC1155.sol\":2893:2949  msg.sender == from || isApprovedForAll[from][msg.sender] */\n    tag_197:\n        /* \"contracts/ERC1155.sol\":2885:2968  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9924:9926   */\n      0x20\n        /* \"contracts/ERC1155.sol\":2885:2968  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9906:9927   */\n      mstore\n        /* \"#utility.yul\":9963:9965   */\n      0x0e\n        /* \"#utility.yul\":9943:9961   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9936:9966   */\n      mstore\n      shl(0x92, 0x1393d517d055551213d492569151)\n        /* \"#utility.yul\":9982:10000   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9975:10019   */\n      mstore\n        /* \"#utility.yul\":10036:10054   */\n      0x64\n      add\n        /* \"contracts/ERC1155.sol\":2885:2968  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n      tag_171\n        /* \"#utility.yul\":9722:10060   */\n      jump\n        /* \"contracts/ERC1155.sol\":2885:2968  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n    tag_198:\n        /* \"contracts/ERC1155.sol\":3050:3060  uint256 id */\n      0x00\n        /* \"contracts/ERC1155.sol\":3070:3084  uint256 amount */\n      dup1\n        /* \"contracts/ERC1155.sol\":3100:3109  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":3095:3447  for (uint256 i = 0; i < ids.length; ) {... */\n    tag_201:\n        /* \"contracts/ERC1155.sol\":3115:3129  i < ids.length */\n      dup8\n      dup2\n      lt\n        /* \"contracts/ERC1155.sol\":3095:3447  for (uint256 i = 0; i < ids.length; ) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/ERC1155.sol\":3152:3155  ids */\n      dup9\n      dup9\n        /* \"contracts/ERC1155.sol\":3156:3157  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":3152:3158  ids[i] */\n      dup2\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155.sol\":3147:3158  id = ids[i] */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":3181:3188  amounts */\n      dup7\n      dup7\n        /* \"contracts/ERC1155.sol\":3189:3190  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":3181:3191  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_208\n      tag_206\n      jump\t// in\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3206:3221  balanceOf[from] */\n      dup15\n      and\n        /* \"contracts/ERC1155.sol\":3206:3215  balanceOf */\n      0x00\n        /* \"contracts/ERC1155.sol\":3206:3221  balanceOf[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":3181:3191  amounts[i] */\n      0x20\n        /* \"contracts/ERC1155.sol\":3206:3221  balanceOf[from] */\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":3206:3225  balanceOf[from][id] */\n      dup10\n      dup5\n      mstore\n      dup3\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/ERC1155.sol\":3206:3235  balanceOf[from][id] -= amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":3181:3191  amounts[i] */\n      swap4\n      swap1\n      swap2\n      mul\n      swap5\n      swap1\n      swap5\n      add\n      calldataload\n      swap6\n      pop\n      dup6\n      swap4\n        /* \"contracts/ERC1155.sol\":3206:3225  balanceOf[from][id] */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":3206:3215  balanceOf */\n      swap1\n        /* \"contracts/ERC1155.sol\":3206:3235  balanceOf[from][id] -= amount */\n      tag_209\n      swap1\n        /* \"contracts/ERC1155.sol\":3181:3191  amounts[i] */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":3206:3235  balanceOf[from][id] -= amount */\n      tag_210\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3249:3262  balanceOf[to] */\n      dup11\n      and\n        /* \"contracts/ERC1155.sol\":3249:3258  balanceOf */\n      0x00\n        /* \"contracts/ERC1155.sol\":3249:3262  balanceOf[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":3249:3266  balanceOf[to][id] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":3249:3276  balanceOf[to][id] += amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":3270:3276  amount */\n      dup5\n      swap3\n        /* \"contracts/ERC1155.sol\":3249:3258  balanceOf */\n      swap1\n        /* \"contracts/ERC1155.sol\":3249:3276  balanceOf[to][id] += amount */\n      tag_211\n      swap1\n        /* \"contracts/ERC1155.sol\":3270:3276  amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":3249:3276  balanceOf[to][id] += amount */\n      tag_212\n      jump\t// in\n    tag_211:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":3419:3422  ++i */\n      0x01\n      add\n        /* \"contracts/ERC1155.sol\":3095:3447  for (uint256 i = 0; i < ids.length; ) {... */\n      jump(tag_201)\n    tag_202:\n      pop\n        /* \"contracts/ERC1155.sol\":3494:3496  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3462:3511  TransferBatch(msg.sender, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC1155.sol\":3488:3492  from */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3462:3511  TransferBatch(msg.sender, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC1155.sol\":3476:3486  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3462:3511  TransferBatch(msg.sender, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC1155.sol\":3498:3501  ids */\n      dup12\n      dup12\n        /* \"contracts/ERC1155.sol\":3503:3510  amounts */\n      dup12\n      dup12\n        /* \"contracts/ERC1155.sol\":3462:3511  TransferBatch(msg.sender, from, to, ids, amounts) */\n      mload(0x40)\n      tag_213\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3543:3557  to.code.length */\n      dup10\n      and\n      extcodesize\n        /* \"contracts/ERC1155.sol\":3543:3562  to.code.length == 0 */\n      iszero\n        /* \"contracts/ERC1155.sol\":3543:3777  to.code.length == 0... */\n      tag_215\n      jumpi\n        /* \"contracts/ERC1155.sol\":3616:3701  ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup1\n      dup3\n      mstore\n        /* \"contracts/ERC1155.sol\":3725:3777  ERC1155TokenReceiver.onERC1155BatchReceived.selector */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3616:3663  ERC1155TokenReceiver(to).onERC1155BatchReceived */\n      dup12\n      and\n      swap1\n        /* \"contracts/ERC1155.sol\":3725:3777  ERC1155TokenReceiver.onERC1155BatchReceived.selector */\n      0xbc197c81\n      swap1\n        /* \"contracts/ERC1155.sol\":3616:3701  ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, from, ids, amounts, data) */\n      tag_216\n      swap1\n        /* \"contracts/ERC1155.sol\":3664:3674  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC1155.sol\":3676:3680  from */\n      dup16\n      swap1\n        /* \"contracts/ERC1155.sol\":3682:3685  ids */\n      dup15\n      swap1\n      dup15\n      swap1\n        /* \"contracts/ERC1155.sol\":3687:3694  amounts */\n      dup15\n      swap1\n      dup15\n      swap1\n        /* \"contracts/ERC1155.sol\":3696:3700  data */\n      dup15\n      swap1\n      dup15\n      swap1\n        /* \"contracts/ERC1155.sol\":3616:3701  ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, from, ids, amounts, data) */\n      0x04\n      add\n      tag_217\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":3616:3777  ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, from, ids, amounts, data) ==... */\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":3543:3777  to.code.length == 0... */\n      jump(tag_222)\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3581:3597  to != address(0) */\n      dup10\n      and\n      iszero\n      iszero\n        /* \"contracts/ERC1155.sol\":3543:3777  to.code.length == 0... */\n    tag_222:\n        /* \"contracts/ERC1155.sol\":3522:3819  require(... */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_225\n      jump\t// in\n    tag_223:\n        /* \"contracts/ERC1155.sol\":2808:3826  {... */\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":2617:3826  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":4202:5049  function ownerMint(... */\n    tag_81:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1269:1292  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1261:1329  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_229:\n        /* \"contracts/Test Mint Pass v12A.sol\":4355:4381  Test_Mint_Pass_BlueTokenId */\n      immutable(\"0xdd6ebedecc3782991b040722d05346ae76115706b237b0f241066a60ee7c2169\")\n        /* \"contracts/Test Mint Pass v12A.sol\":4344:4351  tokenId */\n      dup2\n        /* \"contracts/Test Mint Pass v12A.sol\":4344:4381  tokenId == Test_Mint_Pass_BlueTokenId */\n      eq\n        /* \"contracts/Test Mint Pass v12A.sol\":4344:4423  tokenId == Test_Mint_Pass_BlueTokenId || tokenId == Test_Mint_Pass_BlackTokenId */\n      dup1\n      tag_232\n      jumpi\n      pop\n        /* \"contracts/Test Mint Pass v12A.sol\":4396:4423  Test_Mint_Pass_BlackTokenId */\n      immutable(\"0xf598d05e51facafddb4666a870ba9c91ee31463df052628aed50dc3216257420\")\n        /* \"contracts/Test Mint Pass v12A.sol\":4385:4392  tokenId */\n      dup2\n        /* \"contracts/Test Mint Pass v12A.sol\":4385:4423  tokenId == Test_Mint_Pass_BlackTokenId */\n      eq\n        /* \"contracts/Test Mint Pass v12A.sol\":4344:4423  tokenId == Test_Mint_Pass_BlueTokenId || tokenId == Test_Mint_Pass_BlackTokenId */\n    tag_232:\n        /* \"contracts/Test Mint Pass v12A.sol\":4323:4479  require(... */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13459:13461   */\n      0x20\n        /* \"contracts/Test Mint Pass v12A.sol\":4323:4479  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13441:13462   */\n      mstore\n        /* \"#utility.yul\":13498:13500   */\n      0x1e\n        /* \"#utility.yul\":13478:13496   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13471:13501   */\n      mstore\n        /* \"#utility.yul\":13537:13569   */\n      0x544d50563132413a204e6f6e6578697374656e7420746f6b656e2049442e0000\n        /* \"#utility.yul\":13517:13535   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13510:13570   */\n      mstore\n        /* \"#utility.yul\":13587:13605   */\n      0x64\n      add\n        /* \"contracts/Test Mint Pass v12A.sol\":4323:4479  require(... */\n      tag_171\n        /* \"#utility.yul\":13257:13611   */\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":4323:4479  require(... */\n    tag_233:\n        /* \"contracts/Test Mint Pass v12A.sol\":4505:4531  Test_Mint_Pass_BlueTokenId */\n      immutable(\"0xdd6ebedecc3782991b040722d05346ae76115706b237b0f241066a60ee7c2169\")\n        /* \"contracts/Test Mint Pass v12A.sol\":4494:4501  tokenId */\n      dup2\n        /* \"contracts/Test Mint Pass v12A.sol\":4494:4531  tokenId == Test_Mint_Pass_BlueTokenId */\n      eq\n        /* \"contracts/Test Mint Pass v12A.sol\":4490:5043  if (tokenId == Test_Mint_Pass_BlueTokenId) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/Test Mint Pass v12A.sol\":4624:4652  Test_Mint_Pass_BlueMaxSupply */\n      immutable(\"0x1cecd53757ff41334b0aac95136e45c28b8f0c7557fa90afd0025eaeb7956e02\")\n        /* \"contracts/Test Mint Pass v12A.sol\":4581:4620  totalSupply(Test_Mint_Pass_BlueTokenId) */\n      tag_237\n        /* \"contracts/Test Mint Pass v12A.sol\":4593:4619  Test_Mint_Pass_BlueTokenId */\n      immutable(\"0xdd6ebedecc3782991b040722d05346ae76115706b237b0f241066a60ee7c2169\")\n        /* \"contracts/Test Mint Pass v12A.sol\":2952:2959  uint256 */\n      0x00\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2994  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2990  _totalSupply */\n      0x06\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2994  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Test Mint Pass v12A.sol\":2890:3001  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":4581:4620  totalSupply(Test_Mint_Pass_BlueTokenId) */\n    tag_237:\n        /* \"contracts/Test Mint Pass v12A.sol\":4572:4620  amount + totalSupply(Test_Mint_Pass_BlueTokenId) */\n      tag_238\n      swap1\n        /* \"contracts/Test Mint Pass v12A.sol\":4572:4578  amount */\n      dup5\n        /* \"contracts/Test Mint Pass v12A.sol\":4572:4620  amount + totalSupply(Test_Mint_Pass_BlueTokenId) */\n      tag_212\n      jump\t// in\n    tag_238:\n        /* \"contracts/Test Mint Pass v12A.sol\":4572:4652  amount + totalSupply(Test_Mint_Pass_BlueTokenId) <= Test_Mint_Pass_BlueMaxSupply */\n      gt\n      iszero\n        /* \"contracts/Test Mint Pass v12A.sol\":4547:4729  require(... */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13818:13820   */\n      0x20\n        /* \"contracts/Test Mint Pass v12A.sol\":4547:4729  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13800:13821   */\n      mstore\n        /* \"#utility.yul\":13857:13859   */\n      0x2b\n        /* \"#utility.yul\":13837:13855   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13830:13860   */\n      mstore\n        /* \"#utility.yul\":13896:13930   */\n      0x544d50563132413a20416d6f756e74206973206c6172676572207468616e2074\n        /* \"#utility.yul\":13876:13894   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13869:13931   */\n      mstore\n      shl(0xa9, 0x37ba30b629bab838363c97)\n        /* \"#utility.yul\":13947:13965   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13940:13981   */\n      mstore\n        /* \"#utility.yul\":13998:14017   */\n      0x84\n      add\n        /* \"contracts/Test Mint Pass v12A.sol\":4547:4729  require(... */\n      tag_171\n        /* \"#utility.yul\":13616:14023   */\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":4547:4729  require(... */\n    tag_239:\n        /* \"contracts/Test Mint Pass v12A.sol\":4743:4773  _mint(to, tokenId, amount, \"\") */\n      tag_174\n        /* \"contracts/Test Mint Pass v12A.sol\":4749:4751  to */\n      dup4\n        /* \"contracts/Test Mint Pass v12A.sol\":4753:4760  tokenId */\n      dup3\n        /* \"contracts/Test Mint Pass v12A.sol\":4762:4768  amount */\n      dup5\n        /* \"contracts/Test Mint Pass v12A.sol\":4743:4773  _mint(to, tokenId, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/Test Mint Pass v12A.sol\":4743:4748  _mint */\n      tag_191\n        /* \"contracts/Test Mint Pass v12A.sol\":4743:4773  _mint(to, tokenId, amount, \"\") */\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":4490:5043  if (tokenId == Test_Mint_Pass_BlueTokenId) {... */\n    tag_236:\n        /* \"contracts/Test Mint Pass v12A.sol\":4882:4911  Test_Mint_Pass_BlackMaxSupply */\n      immutable(\"0x54d74a311c644ec85dcac6b0313416846d72906b540389d43ad99715f0c32312\")\n        /* \"contracts/Test Mint Pass v12A.sol\":4838:4878  totalSupply(Test_Mint_Pass_BlackTokenId) */\n      tag_237\n        /* \"contracts/Test Mint Pass v12A.sol\":4850:4877  Test_Mint_Pass_BlackTokenId */\n      immutable(\"0xf598d05e51facafddb4666a870ba9c91ee31463df052628aed50dc3216257420\")\n        /* \"contracts/Test Mint Pass v12A.sol\":2952:2959  uint256 */\n      0x00\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2994  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2990  _totalSupply */\n      0x06\n        /* \"contracts/Test Mint Pass v12A.sol\":2978:2994  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Test Mint Pass v12A.sol\":2890:3001  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Test Mint Pass v12A.sol\":5311:5496  function withdraw() public onlyOwner {... */\n    tag_83:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1269:1292  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1261:1329  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_252:\n        /* \"contracts/Test Mint Pass v12A.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"contracts/Test Mint Pass v12A.sol\":5358:5411  if (address(this).balance == 0) revert NoEthBalance() */\n      tag_255\n      jumpi\n        /* \"contracts/Test Mint Pass v12A.sol\":5397:5411  NoEthBalance() */\n      mload(0x40)\n      shl(0xe3, 0x150111e7)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test Mint Pass v12A.sol\":5358:5411  if (address(this).balance == 0) revert NoEthBalance() */\n    tag_255:\n        /* \"contracts/Test Mint Pass v12A.sol\":5453:5465  vaultAddress */\n      sload(0x05)\n        /* \"contracts/Test Mint Pass v12A.sol\":5421:5489  SafeTransferLib.safeTransferETH(vaultAddress, address(this).balance) */\n      tag_256\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Test Mint Pass v12A.sol\":5453:5465  vaultAddress */\n      and\n        /* \"contracts/Test Mint Pass v12A.sol\":5467:5488  address(this).balance */\n      selfbalance\n        /* \"contracts/Test Mint Pass v12A.sol\":5421:5452  SafeTransferLib.safeTransferETH */\n      tag_257\n        /* \"contracts/Test Mint Pass v12A.sol\":5421:5489  SafeTransferLib.safeTransferETH(vaultAddress, address(this).balance) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/Test Mint Pass v12A.sol\":5311:5496  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":3832:4415  function balanceOfBatch(address[] calldata owners, uint256[] calldata ids)... */\n    tag_94:\n        /* \"contracts/ERC1155.sol\":3968:3993  uint256[] memory balances */\n      0x60\n        /* \"contracts/ERC1155.sol\":4017:4044  owners.length == ids.length */\n      dup4\n      dup3\n      eq\n        /* \"contracts/ERC1155.sol\":4009:4064  require(owners.length == ids.length, \"LENGTH_MISMATCH\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9580:9582   */\n      0x20\n        /* \"contracts/ERC1155.sol\":4009:4064  require(owners.length == ids.length, \"LENGTH_MISMATCH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9562:9583   */\n      mstore\n        /* \"#utility.yul\":9619:9621   */\n      0x0f\n        /* \"#utility.yul\":9599:9617   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9592:9622   */\n      mstore\n      shl(0x8b, 0x0988a9c8ea890be9a92a69a82a8869)\n        /* \"#utility.yul\":9638:9656   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9631:9676   */\n      mstore\n        /* \"#utility.yul\":9693:9711   */\n      0x64\n      add\n        /* \"contracts/ERC1155.sol\":4009:4064  require(owners.length == ids.length, \"LENGTH_MISMATCH\") */\n      tag_171\n        /* \"#utility.yul\":9378:9717   */\n      jump\n        /* \"contracts/ERC1155.sol\":4009:4064  require(owners.length == ids.length, \"LENGTH_MISMATCH\") */\n    tag_259:\n        /* \"contracts/ERC1155.sol\":4100:4106  owners */\n      dup4\n        /* \"contracts/ERC1155.sol\":4086:4114  new uint256[](owners.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_262\n      jumpi\n      tag_262\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_264\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_264:\n      pop\n        /* \"contracts/ERC1155.sol\":4075:4114  balances = new uint256[](owners.length) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":4285:4294  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":4280:4399  for (uint256 i = 0; i < owners.length; ++i) {... */\n    tag_265:\n        /* \"contracts/ERC1155.sol\":4300:4317  i < owners.length */\n      dup5\n      dup2\n      lt\n        /* \"contracts/ERC1155.sol\":4280:4399  for (uint256 i = 0; i < owners.length; ++i) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/ERC1155.sol\":4356:4365  balanceOf */\n      0x00\n        /* \"contracts/ERC1155.sol\":4356:4376  balanceOf[owners[i]] */\n      dup1\n        /* \"contracts/ERC1155.sol\":4366:4372  owners */\n      dup8\n      dup8\n        /* \"contracts/ERC1155.sol\":4373:4374  i */\n      dup5\n        /* \"contracts/ERC1155.sol\":4366:4375  owners[i] */\n      dup2\n      dup2\n      lt\n      tag_269\n      jumpi\n      tag_269\n      tag_206\n      jump\t// in\n    tag_269:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_270\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":4356:4376  balanceOf[owners[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":4356:4384  balanceOf[owners[i]][ids[i]] */\n      0x00\n        /* \"contracts/ERC1155.sol\":4377:4380  ids */\n      dup6\n      dup6\n        /* \"contracts/ERC1155.sol\":4381:4382  i */\n      dup5\n        /* \"contracts/ERC1155.sol\":4377:4383  ids[i] */\n      dup2\n      dup2\n      lt\n      tag_272\n      jumpi\n      tag_272\n      tag_206\n      jump\t// in\n    tag_272:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155.sol\":4356:4384  balanceOf[owners[i]][ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":4342:4350  balances */\n      dup3\n        /* \"contracts/ERC1155.sol\":4351:4352  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":4342:4353  balances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_274\n      jumpi\n      tag_274\n      tag_206\n      jump\t// in\n    tag_274:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC1155.sol\":4342:4384  balances[i] = balanceOf[owners[i]][ids[i]] */\n      mstore\n        /* \"contracts/ERC1155.sol\":4319:4322  ++i */\n      0x01\n      add\n        /* \"contracts/ERC1155.sol\":4280:4399  for (uint256 i = 0; i < owners.length; ++i) {... */\n      jump(tag_265)\n    tag_266:\n      pop\n        /* \"contracts/ERC1155.sol\":3832:4415  function balanceOfBatch(address[] calldata owners, uint256[] calldata ids)... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":5594:5697  function setVault(address _vaultAddress) public onlyOwner {... */\n    tag_99:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1269:1292  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1261:1329  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_278:\n        /* \"contracts/Test Mint Pass v12A.sol\":5662:5674  vaultAddress */\n      0x05\n        /* \"contracts/Test Mint Pass v12A.sol\":5662:5690  vaultAddress = _vaultAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Test Mint Pass v12A.sol\":5594:5697  function setVault(address _vaultAddress) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1689:1790  function renounceOwnership() public virtual onlyOwner {... */\n    tag_101:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1269:1292  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1261:1329  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_284:\n        /* \"contracts/Ownable.sol\":1753:1783  _transferOwnership(address(0)) */\n      tag_256\n        /* \"contracts/Ownable.sol\":1780:1781  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1753:1771  _transferOwnership */\n      tag_288\n        /* \"contracts/Ownable.sol\":1753:1783  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/Test Mint Pass v12A.sol\":761:781  string public symbol */\n    tag_109:\n      0x04\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":1703:1906  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_121:\n        /* \"contracts/ERC1155.sol\":1805:1815  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":1788:1816  isApprovedForAll[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":1788:1804  isApprovedForAll */\n      0x01\n        /* \"contracts/ERC1155.sol\":1788:1816  isApprovedForAll[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":1788:1826  isApprovedForAll[msg.sender][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC1155.sol\":1788:1837  isApprovedForAll[msg.sender][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC1155.sol\":1853:1899  ApprovalForAll(msg.sender, operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":1788:1826  isApprovedForAll[msg.sender][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC1155.sol\":1805:1815  msg.sender */\n      swap2\n        /* \"contracts/ERC1155.sol\":1853:1899  ApprovalForAll(msg.sender, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/ERC1155.sol\":1853:1899  ApprovalForAll(msg.sender, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC1155.sol\":1703:1906  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test Mint Pass v12A.sol\":1734:1776  mapping(uint256 => string) public tokenURI */\n    tag_128:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":1912:2611  function safeTransferFrom(... */\n    tag_150:\n        /* \"contracts/ERC1155.sol\":2092:2102  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2092:2110  msg.sender == from */\n      dup8\n      and\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":2092:2148  msg.sender == from || isApprovedForAll[from][msg.sender] */\n      tag_304\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2114:2136  isApprovedForAll[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":2114:2130  isApprovedForAll */\n      0x01\n        /* \"contracts/ERC1155.sol\":2114:2136  isApprovedForAll[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":2137:2147  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":2114:2148  isApprovedForAll[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC1155.sol\":2092:2148  msg.sender == from || isApprovedForAll[from][msg.sender] */\n    tag_304:\n        /* \"contracts/ERC1155.sol\":2084:2167  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9924:9926   */\n      0x20\n        /* \"contracts/ERC1155.sol\":2084:2167  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9906:9927   */\n      mstore\n        /* \"#utility.yul\":9963:9965   */\n      0x0e\n        /* \"#utility.yul\":9943:9961   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9936:9966   */\n      mstore\n      shl(0x92, 0x1393d517d055551213d492569151)\n        /* \"#utility.yul\":9982:10000   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9975:10019   */\n      mstore\n        /* \"#utility.yul\":10036:10054   */\n      0x64\n      add\n        /* \"contracts/ERC1155.sol\":2084:2167  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n      tag_171\n        /* \"#utility.yul\":9722:10060   */\n      jump\n        /* \"contracts/ERC1155.sol\":2084:2167  require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\") */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2178:2193  balanceOf[from] */\n      dup7\n      and\n        /* \"contracts/ERC1155.sol\":2178:2187  balanceOf */\n      0x00\n        /* \"contracts/ERC1155.sol\":2178:2193  balanceOf[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":2178:2197  balanceOf[from][id] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":2178:2207  balanceOf[from][id] -= amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":2201:2207  amount */\n      dup6\n      swap3\n        /* \"contracts/ERC1155.sol\":2178:2187  balanceOf */\n      swap1\n        /* \"contracts/ERC1155.sol\":2178:2207  balanceOf[from][id] -= amount */\n      tag_307\n      swap1\n        /* \"contracts/ERC1155.sol\":2201:2207  amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":2178:2207  balanceOf[from][id] -= amount */\n      tag_210\n      jump\t// in\n    tag_307:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2217:2230  balanceOf[to] */\n      dup6\n      and\n        /* \"contracts/ERC1155.sol\":2217:2226  balanceOf */\n      0x00\n        /* \"contracts/ERC1155.sol\":2217:2230  balanceOf[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":2217:2234  balanceOf[to][id] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":2217:2244  balanceOf[to][id] += amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":2238:2244  amount */\n      dup6\n      swap3\n        /* \"contracts/ERC1155.sol\":2217:2226  balanceOf */\n      swap1\n        /* \"contracts/ERC1155.sol\":2217:2244  balanceOf[to][id] += amount */\n      tag_308\n      swap1\n        /* \"contracts/ERC1155.sol\":2238:2244  amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":2217:2244  balanceOf[to][id] += amount */\n      tag_212\n      jump\t// in\n    tag_308:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":2260:2308  TransferSingle(msg.sender, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14202:14227   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":14258:14260   */\n      0x20\n        /* \"#utility.yul\":14243:14261   */\n      dup2\n      add\n        /* \"#utility.yul\":14236:14270   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2260:2308  TransferSingle(msg.sender, from, to, id, amount) */\n      dup1\n      dup9\n      and\n      swap3\n      swap1\n      dup10\n      and\n      swap2\n        /* \"contracts/ERC1155.sol\":2275:2285  msg.sender */\n      caller\n      swap2\n        /* \"contracts/ERC1155.sol\":2260:2308  TransferSingle(msg.sender, from, to, id, amount) */\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":14175:14193   */\n      add\n        /* \"contracts/ERC1155.sol\":2260:2308  TransferSingle(msg.sender, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2340:2354  to.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"contracts/ERC1155.sol\":2340:2359  to.code.length == 0 */\n      iszero\n        /* \"contracts/ERC1155.sol\":2340:2562  to.code.length == 0... */\n      tag_311\n      jumpi\n        /* \"contracts/ERC1155.sol\":2413:2491  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup1\n      dup3\n      mstore\n        /* \"contracts/ERC1155.sol\":2515:2562  ERC1155TokenReceiver.onERC1155Received.selector */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2413:2455  ERC1155TokenReceiver(to).onERC1155Received */\n      dup8\n      and\n      swap1\n        /* \"contracts/ERC1155.sol\":2515:2562  ERC1155TokenReceiver.onERC1155Received.selector */\n      0xf23a6e61\n      swap1\n        /* \"contracts/ERC1155.sol\":2413:2491  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, from, id, amount, data) */\n      tag_312\n      swap1\n        /* \"contracts/ERC1155.sol\":2456:2466  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC1155.sol\":2468:2472  from */\n      dup12\n      swap1\n        /* \"contracts/ERC1155.sol\":2474:2476  id */\n      dup11\n      swap1\n        /* \"contracts/ERC1155.sol\":2478:2484  amount */\n      dup11\n      swap1\n        /* \"contracts/ERC1155.sol\":2486:2490  data */\n      dup11\n      swap1\n      dup11\n      swap1\n        /* \"contracts/ERC1155.sol\":2413:2491  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, from, id, amount, data) */\n      0x04\n      add\n      tag_313\n      jump\t// in\n    tag_312:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_316:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":2413:2562  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, from, id, amount, data) ==... */\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":2340:2562  to.code.length == 0... */\n      jump(tag_317)\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2378:2394  to != address(0) */\n      dup6\n      and\n      iszero\n      iszero\n        /* \"contracts/ERC1155.sol\":2340:2562  to.code.length == 0... */\n    tag_317:\n        /* \"contracts/ERC1155.sol\":2319:2604  require(... */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_225\n      jump\t// in\n    tag_318:\n        /* \"contracts/ERC1155.sol\":1912:2611  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1939:2137  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_153:\n        /* \"contracts/Ownable.sol\":1129:1135  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1269:1292  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1261:1329  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":2027:2049  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/Ownable.sol\":2019:2092  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15075:15077   */\n      0x20\n        /* \"contracts/Ownable.sol\":2019:2092  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15057:15078   */\n      mstore\n        /* \"#utility.yul\":15114:15116   */\n      0x26\n        /* \"#utility.yul\":15094:15112   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15087:15117   */\n      mstore\n        /* \"#utility.yul\":15153:15187   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15133:15151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15126:15188   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":15204:15222   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15197:15233   */\n      mstore\n        /* \"#utility.yul\":15250:15269   */\n      0x84\n      add\n        /* \"contracts/Ownable.sol\":2019:2092  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_171\n        /* \"#utility.yul\":14873:15275   */\n      jump\n        /* \"contracts/Ownable.sol\":2019:2092  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_326:\n        /* \"contracts/Ownable.sol\":2102:2130  _transferOwnership(newOwner) */\n      tag_192\n        /* \"contracts/Ownable.sol\":2121:2129  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2102:2120  _transferOwnership */\n      tag_288\n        /* \"contracts/Ownable.sol\":2102:2130  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":5137:5682  function _mint(... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5276:5289  balanceOf[to] */\n      dup5\n      and\n        /* \"contracts/ERC1155.sol\":5276:5285  balanceOf */\n      0x00\n        /* \"contracts/ERC1155.sol\":5276:5289  balanceOf[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":5276:5293  balanceOf[to][id] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":5276:5303  balanceOf[to][id] += amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":5297:5303  amount */\n      dup5\n      swap3\n        /* \"contracts/ERC1155.sol\":5276:5285  balanceOf */\n      swap1\n        /* \"contracts/ERC1155.sol\":5276:5303  balanceOf[to][id] += amount */\n      tag_332\n      swap1\n        /* \"contracts/ERC1155.sol\":5297:5303  amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":5276:5303  balanceOf[to][id] += amount */\n      tag_212\n      jump\t// in\n    tag_332:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5319:5373  TransferSingle(msg.sender, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14202:14227   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":14258:14260   */\n      0x20\n        /* \"#utility.yul\":14243:14261   */\n      dup2\n      add\n        /* \"#utility.yul\":14236:14270   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5319:5373  TransferSingle(msg.sender, address(0), to, id, amount) */\n      dup7\n      and\n      swap2\n        /* \"contracts/ERC1155.sol\":5354:5355  0 */\n      0x00\n      swap2\n        /* \"contracts/ERC1155.sol\":5334:5344  msg.sender */\n      caller\n      swap2\n        /* \"contracts/ERC1155.sol\":5319:5373  TransferSingle(msg.sender, address(0), to, id, amount) */\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":14175:14193   */\n      add\n        /* \"contracts/ERC1155.sol\":5319:5373  TransferSingle(msg.sender, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5405:5419  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"contracts/ERC1155.sol\":5405:5424  to.code.length == 0 */\n      iszero\n        /* \"contracts/ERC1155.sol\":5405:5633  to.code.length == 0... */\n      tag_334\n      jumpi\n        /* \"contracts/ERC1155.sol\":5478:5562  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, address(0), id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup1\n      dup3\n      mstore\n        /* \"contracts/ERC1155.sol\":5586:5633  ERC1155TokenReceiver.onERC1155Received.selector */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5478:5520  ERC1155TokenReceiver(to).onERC1155Received */\n      dup7\n      and\n      swap1\n        /* \"contracts/ERC1155.sol\":5586:5633  ERC1155TokenReceiver.onERC1155Received.selector */\n      0xf23a6e61\n      swap1\n        /* \"contracts/ERC1155.sol\":5478:5562  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, address(0), id, amount, data) */\n      tag_335\n      swap1\n        /* \"contracts/ERC1155.sol\":5521:5531  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC1155.sol\":5541:5542  0 */\n      0x00\n      swap1\n        /* \"contracts/ERC1155.sol\":5545:5547  id */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":5549:5555  amount */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":5557:5561  data */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":5478:5562  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, address(0), id, amount, data) */\n      0x04\n      add\n      tag_336\n      jump\t// in\n    tag_335:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_339\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_339:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":5478:5633  ERC1155TokenReceiver(to).onERC1155Received(msg.sender, address(0), id, amount, data) ==... */\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":5405:5633  to.code.length == 0... */\n      jump(tag_340)\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5443:5459  to != address(0) */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"contracts/ERC1155.sol\":5405:5633  to.code.length == 0... */\n    tag_340:\n        /* \"contracts/ERC1155.sol\":5384:5675  require(... */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_225\n      jump\t// in\n    tag_341:\n        /* \"contracts/ERC1155.sol\":5137:5682  function _mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeTransferLib.sol\":831:1127  function safeTransferETH(address to, uint256 amount) internal {... */\n    tag_257:\n        /* \"contracts/SafeTransferLib.sol\":903:915  bool success */\n      0x00\n        /* \"contracts/SafeTransferLib.sol\":1059:1060  0 */\n      dup1\n        /* \"contracts/SafeTransferLib.sol\":1056:1057  0 */\n      0x00\n        /* \"contracts/SafeTransferLib.sol\":1053:1054  0 */\n      dup1\n        /* \"contracts/SafeTransferLib.sol\":1050:1051  0 */\n      0x00\n        /* \"contracts/SafeTransferLib.sol\":1042:1048  amount */\n      dup6\n        /* \"contracts/SafeTransferLib.sol\":1038:1040  to */\n      dup8\n        /* \"contracts/SafeTransferLib.sol\":1031:1036  gas() */\n      gas\n        /* \"contracts/SafeTransferLib.sol\":1026:1061  call(gas(), to, amount, 0, 0, 0, 0) */\n      call\n        /* \"contracts/SafeTransferLib.sol\":1015:1061  success := call(gas(), to, amount, 0, 0, 0, 0) */\n      swap1\n      pop\n        /* \"contracts/SafeTransferLib.sol\":1089:1096  success */\n      dup1\n        /* \"contracts/SafeTransferLib.sol\":1081:1120  require(success, \"ETH_TRANSFER_FAILED\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16048:16050   */\n      0x20\n        /* \"contracts/SafeTransferLib.sol\":1081:1120  require(success, \"ETH_TRANSFER_FAILED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16030:16051   */\n      mstore\n        /* \"#utility.yul\":16087:16089   */\n      0x13\n        /* \"#utility.yul\":16067:16085   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16060:16090   */\n      mstore\n      shl(0x6a, 0x11551217d514905394d1915497d19052531151)\n        /* \"#utility.yul\":16106:16124   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16099:16148   */\n      mstore\n        /* \"#utility.yul\":16165:16183   */\n      0x64\n      add\n        /* \"contracts/SafeTransferLib.sol\":1081:1120  require(success, \"ETH_TRANSFER_FAILED\") */\n      tag_171\n        /* \"#utility.yul\":15846:16189   */\n      jump\n        /* \"contracts/Ownable.sol\":2291:2478  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_288:\n        /* \"contracts/Ownable.sol\":2383:2389  _owner */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":2399:2416  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Ownable.sol\":2431:2471  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/Ownable.sol\":2383:2389  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/Ownable.sol\":2399:2416  _owner = newOwner */\n      swap1\n        /* \"contracts/Ownable.sol\":2383:2389  _owner */\n      dup3\n      swap1\n        /* \"contracts/Ownable.sol\":2431:2471  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/Ownable.sol\":2364:2380  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/Ownable.sol\":2431:2471  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/Ownable.sol\":2354:2478  {... */\n      pop\n        /* \"contracts/Ownable.sol\":2291:2478  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_175:\n      dup3\n      dup1\n      sload\n      tag_348\n      swap1\n      tag_161\n      jump\t// in\n    tag_348:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_350\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_353)\n    tag_350:\n      dup3\n      0x1f\n      lt\n      tag_351\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_353)\n    tag_351:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_353\n      jumpi\n      swap2\n      dup3\n      add\n    tag_352:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_353\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_352)\n    tag_353:\n      pop\n      tag_354\n      swap3\n      swap2\n      pop\n      tag_355\n      jump\t// in\n    tag_354:\n      pop\n      swap1\n      jump\t// out\n    tag_355:\n    tag_356:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_354\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_356)\n        /* \"#utility.yul\":14:187   */\n    tag_358:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_368:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_43:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_370:\n        /* \"#utility.yul\":360:389   */\n      tag_371\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_358\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_359:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_49:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_376:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_377\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_359\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1683   */\n    tag_360:\n        /* \"#utility.yul\":1253:1256   */\n      0x00\n        /* \"#utility.yul\":1291:1296   */\n      dup2\n        /* \"#utility.yul\":1285:1297   */\n      mload\n        /* \"#utility.yul\":1318:1324   */\n      dup1\n        /* \"#utility.yul\":1313:1316   */\n      dup5\n        /* \"#utility.yul\":1306:1325   */\n      mstore\n        /* \"#utility.yul\":1343:1344   */\n      0x00\n        /* \"#utility.yul\":1353:1515   */\n    tag_380:\n        /* \"#utility.yul\":1367:1373   */\n      dup2\n        /* \"#utility.yul\":1364:1365   */\n      dup2\n        /* \"#utility.yul\":1361:1374   */\n      lt\n        /* \"#utility.yul\":1353:1515   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":1429:1433   */\n      0x20\n        /* \"#utility.yul\":1485:1498   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1481:1503   */\n      dup2\n      add\n        /* \"#utility.yul\":1475:1504   */\n      mload\n        /* \"#utility.yul\":1457:1468   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1453:1473   */\n      dup3\n      add\n        /* \"#utility.yul\":1446:1505   */\n      mstore\n        /* \"#utility.yul\":1382:1394   */\n      add\n        /* \"#utility.yul\":1353:1515   */\n      jump(tag_380)\n    tag_382:\n        /* \"#utility.yul\":1533:1539   */\n      dup2\n        /* \"#utility.yul\":1530:1531   */\n      dup2\n        /* \"#utility.yul\":1527:1540   */\n      gt\n        /* \"#utility.yul\":1524:1611   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1583:1589   */\n      dup4\n        /* \"#utility.yul\":1578:1581   */\n      dup8\n        /* \"#utility.yul\":1574:1590   */\n      add\n        /* \"#utility.yul\":1570:1597   */\n      add\n        /* \"#utility.yul\":1563:1601   */\n      mstore\n        /* \"#utility.yul\":1524:1611   */\n    tag_383:\n      pop\n        /* \"#utility.yul\":1665:1667   */\n      0x1f\n        /* \"#utility.yul\":1644:1659   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1640:1669   */\n      and\n        /* \"#utility.yul\":1631:1670   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1672:1676   */\n      0x20\n        /* \"#utility.yul\":1627:1677   */\n      add\n      swap3\n        /* \"#utility.yul\":1211:1683   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1688:1908   */\n    tag_56:\n        /* \"#utility.yul\":1837:1839   */\n      0x20\n        /* \"#utility.yul\":1826:1835   */\n      dup2\n        /* \"#utility.yul\":1819:1840   */\n      mstore\n        /* \"#utility.yul\":1800:1804   */\n      0x00\n        /* \"#utility.yul\":1857:1902   */\n      tag_377\n        /* \"#utility.yul\":1898:1900   */\n      0x20\n        /* \"#utility.yul\":1887:1896   */\n      dup4\n        /* \"#utility.yul\":1883:1901   */\n      add\n        /* \"#utility.yul\":1875:1881   */\n      dup5\n        /* \"#utility.yul\":1857:1902   */\n      tag_360\n      jump\t// in\n        /* \"#utility.yul\":1913:2040   */\n    tag_263:\n        /* \"#utility.yul\":1974:1984   */\n      0x4e487b71\n        /* \"#utility.yul\":1969:1972   */\n      0xe0\n        /* \"#utility.yul\":1965:1985   */\n      shl\n        /* \"#utility.yul\":1962:1963   */\n      0x00\n        /* \"#utility.yul\":1955:1986   */\n      mstore\n        /* \"#utility.yul\":2005:2009   */\n      0x41\n        /* \"#utility.yul\":2002:2003   */\n      0x04\n        /* \"#utility.yul\":1995:2010   */\n      mstore\n        /* \"#utility.yul\":2029:2033   */\n      0x24\n        /* \"#utility.yul\":2026:2027   */\n      0x00\n        /* \"#utility.yul\":2019:2034   */\n      revert\n        /* \"#utility.yul\":2045:3045   */\n    tag_59:\n        /* \"#utility.yul\":2123:2129   */\n      0x00\n        /* \"#utility.yul\":2131:2137   */\n      dup1\n        /* \"#utility.yul\":2184:2186   */\n      0x40\n        /* \"#utility.yul\":2172:2181   */\n      dup4\n        /* \"#utility.yul\":2163:2170   */\n      dup6\n        /* \"#utility.yul\":2159:2182   */\n      sub\n        /* \"#utility.yul\":2155:2187   */\n      slt\n        /* \"#utility.yul\":2152:2204   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":2200:2201   */\n      0x00\n        /* \"#utility.yul\":2197:2198   */\n      dup1\n        /* \"#utility.yul\":2190:2202   */\n      revert\n        /* \"#utility.yul\":2152:2204   */\n    tag_388:\n        /* \"#utility.yul\":2240:2249   */\n      dup3\n        /* \"#utility.yul\":2227:2250   */\n      calldataload\n        /* \"#utility.yul\":2269:2287   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2310:2312   */\n      dup1\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2313   */\n      gt\n        /* \"#utility.yul\":2296:2330   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":2326:2327   */\n      0x00\n        /* \"#utility.yul\":2323:2324   */\n      dup1\n        /* \"#utility.yul\":2316:2328   */\n      revert\n        /* \"#utility.yul\":2296:2330   */\n    tag_389:\n        /* \"#utility.yul\":2364:2370   */\n      dup2\n        /* \"#utility.yul\":2353:2362   */\n      dup6\n        /* \"#utility.yul\":2349:2371   */\n      add\n        /* \"#utility.yul\":2339:2371   */\n      swap2\n      pop\n        /* \"#utility.yul\":2409:2416   */\n      dup6\n        /* \"#utility.yul\":2402:2406   */\n      0x1f\n        /* \"#utility.yul\":2398:2400   */\n      dup4\n        /* \"#utility.yul\":2394:2407   */\n      add\n        /* \"#utility.yul\":2390:2417   */\n      slt\n        /* \"#utility.yul\":2380:2435   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":2431:2432   */\n      0x00\n        /* \"#utility.yul\":2428:2429   */\n      dup1\n        /* \"#utility.yul\":2421:2433   */\n      revert\n        /* \"#utility.yul\":2380:2435   */\n    tag_390:\n        /* \"#utility.yul\":2467:2469   */\n      dup2\n        /* \"#utility.yul\":2454:2470   */\n      calldataload\n        /* \"#utility.yul\":2489:2491   */\n      dup2\n        /* \"#utility.yul\":2485:2487   */\n      dup2\n        /* \"#utility.yul\":2482:2492   */\n      gt\n        /* \"#utility.yul\":2479:2515   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":2495:2513   */\n      tag_392\n      tag_263\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2570:2572   */\n      0x40\n        /* \"#utility.yul\":2564:2573   */\n      mload\n        /* \"#utility.yul\":2538:2540   */\n      0x1f\n        /* \"#utility.yul\":2624:2637   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2620:2642   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2644:2646   */\n      0x3f\n        /* \"#utility.yul\":2616:2647   */\n      add\n        /* \"#utility.yul\":2612:2652   */\n      and\n        /* \"#utility.yul\":2600:2653   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2668:2686   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2688:2710   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2665:2711   */\n      or\n        /* \"#utility.yul\":2662:2734   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":2714:2732   */\n      tag_394\n      tag_263\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2754:2764   */\n      dup2\n        /* \"#utility.yul\":2750:2752   */\n      0x40\n        /* \"#utility.yul\":2743:2765   */\n      mstore\n        /* \"#utility.yul\":2789:2791   */\n      dup3\n        /* \"#utility.yul\":2781:2787   */\n      dup2\n        /* \"#utility.yul\":2774:2792   */\n      mstore\n        /* \"#utility.yul\":2831:2838   */\n      dup9\n        /* \"#utility.yul\":2824:2828   */\n      0x20\n        /* \"#utility.yul\":2819:2821   */\n      dup5\n        /* \"#utility.yul\":2815:2817   */\n      dup8\n        /* \"#utility.yul\":2811:2822   */\n      add\n        /* \"#utility.yul\":2807:2829   */\n      add\n        /* \"#utility.yul\":2804:2839   */\n      gt\n        /* \"#utility.yul\":2801:2856   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2852:2853   */\n      0x00\n        /* \"#utility.yul\":2849:2850   */\n      dup1\n        /* \"#utility.yul\":2842:2854   */\n      revert\n        /* \"#utility.yul\":2801:2856   */\n    tag_395:\n        /* \"#utility.yul\":2912:2914   */\n      dup3\n        /* \"#utility.yul\":2905:2909   */\n      0x20\n        /* \"#utility.yul\":2901:2903   */\n      dup7\n        /* \"#utility.yul\":2897:2910   */\n      add\n        /* \"#utility.yul\":2890:2894   */\n      0x20\n        /* \"#utility.yul\":2882:2888   */\n      dup4\n        /* \"#utility.yul\":2878:2895   */\n      add\n        /* \"#utility.yul\":2865:2915   */\n      calldatacopy\n        /* \"#utility.yul\":2959:2960   */\n      0x00\n        /* \"#utility.yul\":2952:2956   */\n      0x20\n        /* \"#utility.yul\":2935:2950   */\n      swap4\n      dup3\n      add\n        /* \"#utility.yul\":2931:2957   */\n      dup5\n      add\n        /* \"#utility.yul\":2924:2961   */\n      mstore\n        /* \"#utility.yul\":2935:2950   */\n      swap9\n        /* \"#utility.yul\":3018:3038   */\n      swap7\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3005:3039   */\n      calldataload\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2045:3045   */\n      jump\t// out\n        /* \"#utility.yul\":3050:3236   */\n    tag_63:\n        /* \"#utility.yul\":3109:3115   */\n      0x00\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3150:3159   */\n      dup3\n        /* \"#utility.yul\":3141:3148   */\n      dup5\n        /* \"#utility.yul\":3137:3160   */\n      sub\n        /* \"#utility.yul\":3133:3165   */\n      slt\n        /* \"#utility.yul\":3130:3182   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3178:3179   */\n      0x00\n        /* \"#utility.yul\":3175:3176   */\n      dup1\n        /* \"#utility.yul\":3168:3180   */\n      revert\n        /* \"#utility.yul\":3130:3182   */\n    tag_397:\n        /* \"#utility.yul\":3201:3230   */\n      tag_377\n        /* \"#utility.yul\":3220:3229   */\n      dup3\n        /* \"#utility.yul\":3201:3230   */\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":3241:3421   */\n    tag_68:\n        /* \"#utility.yul\":3300:3306   */\n      0x00\n        /* \"#utility.yul\":3353:3355   */\n      0x20\n        /* \"#utility.yul\":3341:3350   */\n      dup3\n        /* \"#utility.yul\":3332:3339   */\n      dup5\n        /* \"#utility.yul\":3328:3351   */\n      sub\n        /* \"#utility.yul\":3324:3356   */\n      slt\n        /* \"#utility.yul\":3321:3373   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":3369:3370   */\n      0x00\n        /* \"#utility.yul\":3366:3367   */\n      dup1\n        /* \"#utility.yul\":3359:3371   */\n      revert\n        /* \"#utility.yul\":3321:3373   */\n    tag_400:\n      pop\n        /* \"#utility.yul\":3392:3415   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3241:3421   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3426:3793   */\n    tag_361:\n        /* \"#utility.yul\":3489:3497   */\n      0x00\n        /* \"#utility.yul\":3499:3505   */\n      dup1\n        /* \"#utility.yul\":3553:3556   */\n      dup4\n        /* \"#utility.yul\":3546:3550   */\n      0x1f\n        /* \"#utility.yul\":3538:3544   */\n      dup5\n        /* \"#utility.yul\":3534:3551   */\n      add\n        /* \"#utility.yul\":3530:3557   */\n      slt\n        /* \"#utility.yul\":3520:3575   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3571:3572   */\n      0x00\n        /* \"#utility.yul\":3568:3569   */\n      dup1\n        /* \"#utility.yul\":3561:3573   */\n      revert\n        /* \"#utility.yul\":3520:3575   */\n    tag_402:\n      pop\n        /* \"#utility.yul\":3594:3614   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":3637:3655   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3626:3656   */\n      dup2\n      gt\n        /* \"#utility.yul\":3623:3673   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3669:3670   */\n      0x00\n        /* \"#utility.yul\":3666:3667   */\n      dup1\n        /* \"#utility.yul\":3659:3671   */\n      revert\n        /* \"#utility.yul\":3623:3673   */\n    tag_403:\n        /* \"#utility.yul\":3706:3710   */\n      0x20\n        /* \"#utility.yul\":3698:3704   */\n      dup4\n        /* \"#utility.yul\":3694:3711   */\n      add\n        /* \"#utility.yul\":3682:3711   */\n      swap2\n      pop\n        /* \"#utility.yul\":3766:3769   */\n      dup4\n        /* \"#utility.yul\":3759:3763   */\n      0x20\n        /* \"#utility.yul\":3749:3755   */\n      dup3\n        /* \"#utility.yul\":3746:3747   */\n      0x05\n        /* \"#utility.yul\":3742:3756   */\n      shl\n        /* \"#utility.yul\":3734:3740   */\n      dup6\n        /* \"#utility.yul\":3730:3757   */\n      add\n        /* \"#utility.yul\":3726:3764   */\n      add\n        /* \"#utility.yul\":3723:3770   */\n      gt\n        /* \"#utility.yul\":3720:3787   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":3783:3784   */\n      0x00\n        /* \"#utility.yul\":3780:3781   */\n      dup1\n        /* \"#utility.yul\":3773:3785   */\n      revert\n        /* \"#utility.yul\":3720:3787   */\n    tag_404:\n        /* \"#utility.yul\":3426:3793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4145   */\n    tag_362:\n        /* \"#utility.yul\":3849:3857   */\n      0x00\n        /* \"#utility.yul\":3859:3865   */\n      dup1\n        /* \"#utility.yul\":3913:3916   */\n      dup4\n        /* \"#utility.yul\":3906:3910   */\n      0x1f\n        /* \"#utility.yul\":3898:3904   */\n      dup5\n        /* \"#utility.yul\":3894:3911   */\n      add\n        /* \"#utility.yul\":3890:3917   */\n      slt\n        /* \"#utility.yul\":3880:3935   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":3931:3932   */\n      0x00\n        /* \"#utility.yul\":3928:3929   */\n      dup1\n        /* \"#utility.yul\":3921:3933   */\n      revert\n        /* \"#utility.yul\":3880:3935   */\n    tag_406:\n      pop\n        /* \"#utility.yul\":3954:3974   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":3997:4015   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3986:4016   */\n      dup2\n      gt\n        /* \"#utility.yul\":3983:4033   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4029:4030   */\n      0x00\n        /* \"#utility.yul\":4026:4027   */\n      dup1\n        /* \"#utility.yul\":4019:4031   */\n      revert\n        /* \"#utility.yul\":3983:4033   */\n    tag_407:\n        /* \"#utility.yul\":4066:4070   */\n      0x20\n        /* \"#utility.yul\":4058:4064   */\n      dup4\n        /* \"#utility.yul\":4054:4071   */\n      add\n        /* \"#utility.yul\":4042:4071   */\n      swap2\n      pop\n        /* \"#utility.yul\":4118:4121   */\n      dup4\n        /* \"#utility.yul\":4111:4115   */\n      0x20\n        /* \"#utility.yul\":4102:4108   */\n      dup3\n        /* \"#utility.yul\":4094:4100   */\n      dup6\n        /* \"#utility.yul\":4090:4109   */\n      add\n        /* \"#utility.yul\":4086:4116   */\n      add\n        /* \"#utility.yul\":4083:4122   */\n      gt\n        /* \"#utility.yul\":4080:4139   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4135:4136   */\n      0x00\n        /* \"#utility.yul\":4132:4133   */\n      dup1\n        /* \"#utility.yul\":4125:4137   */\n      revert\n        /* \"#utility.yul\":4150:5360   */\n    tag_76:\n        /* \"#utility.yul\":4310:4316   */\n      0x00\n        /* \"#utility.yul\":4318:4324   */\n      dup1\n        /* \"#utility.yul\":4326:4332   */\n      0x00\n        /* \"#utility.yul\":4334:4340   */\n      dup1\n        /* \"#utility.yul\":4342:4348   */\n      0x00\n        /* \"#utility.yul\":4350:4356   */\n      dup1\n        /* \"#utility.yul\":4358:4364   */\n      0x00\n        /* \"#utility.yul\":4366:4372   */\n      dup1\n        /* \"#utility.yul\":4419:4422   */\n      0xa0\n        /* \"#utility.yul\":4407:4416   */\n      dup10\n        /* \"#utility.yul\":4398:4405   */\n      dup12\n        /* \"#utility.yul\":4394:4417   */\n      sub\n        /* \"#utility.yul\":4390:4423   */\n      slt\n        /* \"#utility.yul\":4387:4440   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":4436:4437   */\n      0x00\n        /* \"#utility.yul\":4433:4434   */\n      dup1\n        /* \"#utility.yul\":4426:4438   */\n      revert\n        /* \"#utility.yul\":4387:4440   */\n    tag_410:\n        /* \"#utility.yul\":4459:4488   */\n      tag_411\n        /* \"#utility.yul\":4478:4487   */\n      dup10\n        /* \"#utility.yul\":4459:4488   */\n      tag_358\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4449:4488   */\n      swap8\n      pop\n        /* \"#utility.yul\":4507:4545   */\n      tag_412\n        /* \"#utility.yul\":4541:4543   */\n      0x20\n        /* \"#utility.yul\":4530:4539   */\n      dup11\n        /* \"#utility.yul\":4526:4544   */\n      add\n        /* \"#utility.yul\":4507:4545   */\n      tag_358\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4497:4545   */\n      swap7\n      pop\n        /* \"#utility.yul\":4596:4598   */\n      0x40\n        /* \"#utility.yul\":4585:4594   */\n      dup10\n        /* \"#utility.yul\":4581:4599   */\n      add\n        /* \"#utility.yul\":4568:4600   */\n      calldataload\n        /* \"#utility.yul\":4619:4637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4660:4662   */\n      dup1\n        /* \"#utility.yul\":4652:4658   */\n      dup3\n        /* \"#utility.yul\":4649:4663   */\n      gt\n        /* \"#utility.yul\":4646:4680   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":4676:4677   */\n      0x00\n        /* \"#utility.yul\":4673:4674   */\n      dup1\n        /* \"#utility.yul\":4666:4678   */\n      revert\n        /* \"#utility.yul\":4646:4680   */\n    tag_413:\n        /* \"#utility.yul\":4715:4785   */\n      tag_414\n        /* \"#utility.yul\":4777:4784   */\n      dup13\n        /* \"#utility.yul\":4768:4774   */\n      dup4\n        /* \"#utility.yul\":4757:4766   */\n      dup14\n        /* \"#utility.yul\":4753:4775   */\n      add\n        /* \"#utility.yul\":4715:4785   */\n      tag_361\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4804:4812   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":4689:4785   */\n      swap7\n      pop\n        /* \"#utility.yul\":4892:4894   */\n      0x60\n        /* \"#utility.yul\":4877:4895   */\n      dup12\n      add\n        /* \"#utility.yul\":4864:4896   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4908:4924   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4905:4941   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4937:4938   */\n      0x00\n        /* \"#utility.yul\":4934:4935   */\n      dup1\n        /* \"#utility.yul\":4927:4939   */\n      revert\n        /* \"#utility.yul\":4905:4941   */\n    tag_415:\n        /* \"#utility.yul\":4976:5048   */\n      tag_416\n        /* \"#utility.yul\":5040:5047   */\n      dup13\n        /* \"#utility.yul\":5029:5037   */\n      dup4\n        /* \"#utility.yul\":5018:5027   */\n      dup14\n        /* \"#utility.yul\":5014:5038   */\n      add\n        /* \"#utility.yul\":4976:5048   */\n      tag_361\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5067:5075   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":4950:5048   */\n      swap5\n      pop\n        /* \"#utility.yul\":5155:5158   */\n      0x80\n        /* \"#utility.yul\":5140:5159   */\n      dup12\n      add\n        /* \"#utility.yul\":5127:5160   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5172:5188   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5169:5205   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":5201:5202   */\n      0x00\n        /* \"#utility.yul\":5198:5199   */\n      dup1\n        /* \"#utility.yul\":5191:5203   */\n      revert\n        /* \"#utility.yul\":5169:5205   */\n    tag_417:\n      pop\n        /* \"#utility.yul\":5240:5300   */\n      tag_418\n        /* \"#utility.yul\":5292:5299   */\n      dup12\n        /* \"#utility.yul\":5281:5289   */\n      dup3\n        /* \"#utility.yul\":5270:5279   */\n      dup13\n        /* \"#utility.yul\":5266:5290   */\n      add\n        /* \"#utility.yul\":5240:5300   */\n      tag_362\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4150:5360   */\n      swap10\n      swap13\n      swap9\n      swap12\n      pop\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":5319:5327   */\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4150:5360   */\n      jump\t// out\n        /* \"#utility.yul\":5365:5687   */\n    tag_80:\n        /* \"#utility.yul\":5442:5448   */\n      0x00\n        /* \"#utility.yul\":5450:5456   */\n      dup1\n        /* \"#utility.yul\":5458:5464   */\n      0x00\n        /* \"#utility.yul\":5511:5513   */\n      0x60\n        /* \"#utility.yul\":5499:5508   */\n      dup5\n        /* \"#utility.yul\":5490:5497   */\n      dup7\n        /* \"#utility.yul\":5486:5509   */\n      sub\n        /* \"#utility.yul\":5482:5514   */\n      slt\n        /* \"#utility.yul\":5479:5531   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5527:5528   */\n      0x00\n        /* \"#utility.yul\":5524:5525   */\n      dup1\n        /* \"#utility.yul\":5517:5529   */\n      revert\n        /* \"#utility.yul\":5479:5531   */\n    tag_420:\n        /* \"#utility.yul\":5550:5579   */\n      tag_421\n        /* \"#utility.yul\":5569:5578   */\n      dup5\n        /* \"#utility.yul\":5550:5579   */\n      tag_358\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5540:5579   */\n      swap6\n        /* \"#utility.yul\":5626:5628   */\n      0x20\n        /* \"#utility.yul\":5611:5629   */\n      dup6\n      add\n        /* \"#utility.yul\":5598:5630   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5677:5679   */\n      0x40\n        /* \"#utility.yul\":5662:5680   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5649:5681   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":5365:5687   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5900:6673   */\n    tag_93:\n        /* \"#utility.yul\":6022:6028   */\n      0x00\n        /* \"#utility.yul\":6030:6036   */\n      dup1\n        /* \"#utility.yul\":6038:6044   */\n      0x00\n        /* \"#utility.yul\":6046:6052   */\n      dup1\n        /* \"#utility.yul\":6099:6101   */\n      0x40\n        /* \"#utility.yul\":6087:6096   */\n      dup6\n        /* \"#utility.yul\":6078:6085   */\n      dup8\n        /* \"#utility.yul\":6074:6097   */\n      sub\n        /* \"#utility.yul\":6070:6102   */\n      slt\n        /* \"#utility.yul\":6067:6119   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6115:6116   */\n      0x00\n        /* \"#utility.yul\":6112:6113   */\n      dup1\n        /* \"#utility.yul\":6105:6117   */\n      revert\n        /* \"#utility.yul\":6067:6119   */\n    tag_424:\n        /* \"#utility.yul\":6155:6164   */\n      dup5\n        /* \"#utility.yul\":6142:6165   */\n      calldataload\n        /* \"#utility.yul\":6184:6202   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6225:6227   */\n      dup1\n        /* \"#utility.yul\":6217:6223   */\n      dup3\n        /* \"#utility.yul\":6214:6228   */\n      gt\n        /* \"#utility.yul\":6211:6245   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6241:6242   */\n      0x00\n        /* \"#utility.yul\":6238:6239   */\n      dup1\n        /* \"#utility.yul\":6231:6243   */\n      revert\n        /* \"#utility.yul\":6211:6245   */\n    tag_425:\n        /* \"#utility.yul\":6280:6350   */\n      tag_426\n        /* \"#utility.yul\":6342:6349   */\n      dup9\n        /* \"#utility.yul\":6333:6339   */\n      dup4\n        /* \"#utility.yul\":6322:6331   */\n      dup10\n        /* \"#utility.yul\":6318:6340   */\n      add\n        /* \"#utility.yul\":6280:6350   */\n      tag_361\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6369:6377   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":6254:6350   */\n      swap5\n      pop\n        /* \"#utility.yul\":6457:6459   */\n      0x20\n        /* \"#utility.yul\":6442:6460   */\n      dup8\n      add\n        /* \"#utility.yul\":6429:6461   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":6473:6489   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6470:6506   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":6502:6503   */\n      0x00\n        /* \"#utility.yul\":6499:6500   */\n      dup1\n        /* \"#utility.yul\":6492:6504   */\n      revert\n        /* \"#utility.yul\":6470:6506   */\n    tag_427:\n      pop\n        /* \"#utility.yul\":6541:6613   */\n      tag_428\n        /* \"#utility.yul\":6605:6612   */\n      dup8\n        /* \"#utility.yul\":6594:6602   */\n      dup3\n        /* \"#utility.yul\":6583:6592   */\n      dup9\n        /* \"#utility.yul\":6579:6603   */\n      add\n        /* \"#utility.yul\":6541:6613   */\n      tag_361\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5900:6673   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":6632:6640   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5900:6673   */\n      jump\t// out\n        /* \"#utility.yul\":6678:7310   */\n    tag_96:\n        /* \"#utility.yul\":6849:6851   */\n      0x20\n        /* \"#utility.yul\":6901:6922   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6971:6984   */\n      dup3\n      mload\n        /* \"#utility.yul\":6874:6892   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6993:7015   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6820:6824   */\n      0x00\n      swap2\n        /* \"#utility.yul\":6849:6851   */\n      swap1\n        /* \"#utility.yul\":7072:7087   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7046:7048   */\n      0x40\n        /* \"#utility.yul\":7031:7049   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6820:6824   */\n      dup5\n        /* \"#utility.yul\":7115:7284   */\n    tag_430:\n        /* \"#utility.yul\":7129:7135   */\n      dup2\n        /* \"#utility.yul\":7126:7127   */\n      dup2\n        /* \"#utility.yul\":7123:7136   */\n      lt\n        /* \"#utility.yul\":7115:7284   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":7190:7203   */\n      dup4\n      mload\n        /* \"#utility.yul\":7178:7204   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7259:7274   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":7224:7236   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":7151:7152   */\n      0x01\n        /* \"#utility.yul\":7144:7153   */\n      add\n        /* \"#utility.yul\":7115:7284   */\n      jump(tag_430)\n    tag_432:\n      pop\n        /* \"#utility.yul\":7301:7304   */\n      swap1\n      swap7\n        /* \"#utility.yul\":6678:7310   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7315:7662   */\n    tag_120:\n        /* \"#utility.yul\":7380:7386   */\n      0x00\n        /* \"#utility.yul\":7388:7394   */\n      dup1\n        /* \"#utility.yul\":7441:7443   */\n      0x40\n        /* \"#utility.yul\":7429:7438   */\n      dup4\n        /* \"#utility.yul\":7420:7427   */\n      dup6\n        /* \"#utility.yul\":7416:7439   */\n      sub\n        /* \"#utility.yul\":7412:7444   */\n      slt\n        /* \"#utility.yul\":7409:7461   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":7457:7458   */\n      0x00\n        /* \"#utility.yul\":7454:7455   */\n      dup1\n        /* \"#utility.yul\":7447:7459   */\n      revert\n        /* \"#utility.yul\":7409:7461   */\n    tag_434:\n        /* \"#utility.yul\":7480:7509   */\n      tag_435\n        /* \"#utility.yul\":7499:7508   */\n      dup4\n        /* \"#utility.yul\":7480:7509   */\n      tag_358\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7470:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7559:7561   */\n      0x20\n        /* \"#utility.yul\":7548:7557   */\n      dup4\n        /* \"#utility.yul\":7544:7562   */\n      add\n        /* \"#utility.yul\":7531:7563   */\n      calldataload\n        /* \"#utility.yul\":7606:7611   */\n      dup1\n        /* \"#utility.yul\":7599:7612   */\n      iszero\n        /* \"#utility.yul\":7592:7613   */\n      iszero\n        /* \"#utility.yul\":7585:7590   */\n      dup2\n        /* \"#utility.yul\":7582:7614   */\n      eq\n        /* \"#utility.yul\":7572:7632   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":7628:7629   */\n      0x00\n        /* \"#utility.yul\":7625:7626   */\n      dup1\n        /* \"#utility.yul\":7618:7630   */\n      revert\n        /* \"#utility.yul\":7572:7632   */\n    tag_436:\n        /* \"#utility.yul\":7651:7656   */\n      dup1\n        /* \"#utility.yul\":7641:7656   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7315:7662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7667:7927   */\n    tag_144:\n        /* \"#utility.yul\":7735:7741   */\n      0x00\n        /* \"#utility.yul\":7743:7749   */\n      dup1\n        /* \"#utility.yul\":7796:7798   */\n      0x40\n        /* \"#utility.yul\":7784:7793   */\n      dup4\n        /* \"#utility.yul\":7775:7782   */\n      dup6\n        /* \"#utility.yul\":7771:7794   */\n      sub\n        /* \"#utility.yul\":7767:7799   */\n      slt\n        /* \"#utility.yul\":7764:7816   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":7812:7813   */\n      0x00\n        /* \"#utility.yul\":7809:7810   */\n      dup1\n        /* \"#utility.yul\":7802:7814   */\n      revert\n        /* \"#utility.yul\":7764:7816   */\n    tag_438:\n        /* \"#utility.yul\":7835:7864   */\n      tag_439\n        /* \"#utility.yul\":7854:7863   */\n      dup4\n        /* \"#utility.yul\":7835:7864   */\n      tag_358\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7825:7864   */\n      swap2\n      pop\n        /* \"#utility.yul\":7883:7921   */\n      tag_440\n        /* \"#utility.yul\":7917:7919   */\n      0x20\n        /* \"#utility.yul\":7906:7915   */\n      dup5\n        /* \"#utility.yul\":7902:7920   */\n      add\n        /* \"#utility.yul\":7883:7921   */\n      tag_358\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7873:7921   */\n      swap1\n      pop\n        /* \"#utility.yul\":7667:7927   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7932:8627   */\n    tag_149:\n        /* \"#utility.yul\":8038:8044   */\n      0x00\n        /* \"#utility.yul\":8046:8052   */\n      dup1\n        /* \"#utility.yul\":8054:8060   */\n      0x00\n        /* \"#utility.yul\":8062:8068   */\n      dup1\n        /* \"#utility.yul\":8070:8076   */\n      0x00\n        /* \"#utility.yul\":8078:8084   */\n      dup1\n        /* \"#utility.yul\":8131:8134   */\n      0xa0\n        /* \"#utility.yul\":8119:8128   */\n      dup8\n        /* \"#utility.yul\":8110:8117   */\n      dup10\n        /* \"#utility.yul\":8106:8129   */\n      sub\n        /* \"#utility.yul\":8102:8135   */\n      slt\n        /* \"#utility.yul\":8099:8152   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8145:8146   */\n      dup1\n        /* \"#utility.yul\":8138:8150   */\n      revert\n        /* \"#utility.yul\":8099:8152   */\n    tag_442:\n        /* \"#utility.yul\":8171:8200   */\n      tag_443\n        /* \"#utility.yul\":8190:8199   */\n      dup8\n        /* \"#utility.yul\":8171:8200   */\n      tag_358\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8161:8200   */\n      swap6\n      pop\n        /* \"#utility.yul\":8219:8257   */\n      tag_444\n        /* \"#utility.yul\":8253:8255   */\n      0x20\n        /* \"#utility.yul\":8242:8251   */\n      dup9\n        /* \"#utility.yul\":8238:8256   */\n      add\n        /* \"#utility.yul\":8219:8257   */\n      tag_358\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8209:8257   */\n      swap5\n      pop\n        /* \"#utility.yul\":8304:8306   */\n      0x40\n        /* \"#utility.yul\":8293:8302   */\n      dup8\n        /* \"#utility.yul\":8289:8307   */\n      add\n        /* \"#utility.yul\":8276:8308   */\n      calldataload\n        /* \"#utility.yul\":8266:8308   */\n      swap4\n      pop\n        /* \"#utility.yul\":8355:8357   */\n      0x60\n        /* \"#utility.yul\":8344:8353   */\n      dup8\n        /* \"#utility.yul\":8340:8358   */\n      add\n        /* \"#utility.yul\":8327:8359   */\n      calldataload\n        /* \"#utility.yul\":8317:8359   */\n      swap3\n      pop\n        /* \"#utility.yul\":8410:8413   */\n      0x80\n        /* \"#utility.yul\":8399:8408   */\n      dup8\n        /* \"#utility.yul\":8395:8414   */\n      add\n        /* \"#utility.yul\":8382:8415   */\n      calldataload\n        /* \"#utility.yul\":8438:8456   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8430:8436   */\n      dup2\n        /* \"#utility.yul\":8427:8457   */\n      gt\n        /* \"#utility.yul\":8424:8474   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":8470:8471   */\n      0x00\n        /* \"#utility.yul\":8467:8468   */\n      dup1\n        /* \"#utility.yul\":8460:8472   */\n      revert\n        /* \"#utility.yul\":8424:8474   */\n    tag_445:\n        /* \"#utility.yul\":8509:8567   */\n      tag_446\n        /* \"#utility.yul\":8559:8566   */\n      dup10\n        /* \"#utility.yul\":8550:8556   */\n      dup3\n        /* \"#utility.yul\":8539:8548   */\n      dup11\n        /* \"#utility.yul\":8535:8557   */\n      add\n        /* \"#utility.yul\":8509:8567   */\n      tag_362\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7932:8627   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":8586:8594   */\n      swap4\n      swap5\n        /* \"#utility.yul\":7932:8627   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8632:9012   */\n    tag_161:\n        /* \"#utility.yul\":8711:8712   */\n      0x01\n        /* \"#utility.yul\":8707:8719   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8754:8766   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8775:8836   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":8829:8833   */\n      0x7f\n        /* \"#utility.yul\":8821:8827   */\n      dup3\n        /* \"#utility.yul\":8817:8834   */\n      and\n        /* \"#utility.yul\":8807:8834   */\n      swap2\n      pop\n        /* \"#utility.yul\":8775:8836   */\n    tag_448:\n        /* \"#utility.yul\":8882:8884   */\n      0x20\n        /* \"#utility.yul\":8874:8880   */\n      dup3\n        /* \"#utility.yul\":8871:8885   */\n      lt\n        /* \"#utility.yul\":8851:8869   */\n      dup2\n        /* \"#utility.yul\":8848:8886   */\n      eq\n        /* \"#utility.yul\":8845:9006   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":8928:8938   */\n      0x4e487b71\n        /* \"#utility.yul\":8923:8926   */\n      0xe0\n        /* \"#utility.yul\":8919:8939   */\n      shl\n        /* \"#utility.yul\":8916:8917   */\n      0x00\n        /* \"#utility.yul\":8909:8940   */\n      mstore\n        /* \"#utility.yul\":8963:8967   */\n      0x22\n        /* \"#utility.yul\":8960:8961   */\n      0x04\n        /* \"#utility.yul\":8953:8968   */\n      mstore\n        /* \"#utility.yul\":8991:8995   */\n      0x24\n        /* \"#utility.yul\":8988:8989   */\n      0x00\n        /* \"#utility.yul\":8981:8996   */\n      revert\n        /* \"#utility.yul\":8845:9006   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":8632:9012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9017:9373   */\n    tag_172:\n        /* \"#utility.yul\":9219:9221   */\n      0x20\n        /* \"#utility.yul\":9201:9222   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9238:9256   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9231:9261   */\n      mstore\n        /* \"#utility.yul\":9297:9331   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9292:9294   */\n      0x40\n        /* \"#utility.yul\":9277:9295   */\n      dup3\n      add\n        /* \"#utility.yul\":9270:9332   */\n      mstore\n        /* \"#utility.yul\":9364:9366   */\n      0x60\n        /* \"#utility.yul\":9349:9367   */\n      add\n      swap1\n        /* \"#utility.yul\":9017:9373   */\n      jump\t// out\n        /* \"#utility.yul\":10065:10192   */\n    tag_206:\n        /* \"#utility.yul\":10126:10136   */\n      0x4e487b71\n        /* \"#utility.yul\":10121:10124   */\n      0xe0\n        /* \"#utility.yul\":10117:10137   */\n      shl\n        /* \"#utility.yul\":10114:10115   */\n      0x00\n        /* \"#utility.yul\":10107:10138   */\n      mstore\n        /* \"#utility.yul\":10157:10161   */\n      0x32\n        /* \"#utility.yul\":10154:10155   */\n      0x04\n        /* \"#utility.yul\":10147:10162   */\n      mstore\n        /* \"#utility.yul\":10181:10185   */\n      0x24\n        /* \"#utility.yul\":10178:10179   */\n      0x00\n        /* \"#utility.yul\":10171:10186   */\n      revert\n        /* \"#utility.yul\":10197:10324   */\n    tag_363:\n        /* \"#utility.yul\":10258:10268   */\n      0x4e487b71\n        /* \"#utility.yul\":10253:10256   */\n      0xe0\n        /* \"#utility.yul\":10249:10269   */\n      shl\n        /* \"#utility.yul\":10246:10247   */\n      0x00\n        /* \"#utility.yul\":10239:10270   */\n      mstore\n        /* \"#utility.yul\":10289:10293   */\n      0x11\n        /* \"#utility.yul\":10286:10287   */\n      0x04\n        /* \"#utility.yul\":10279:10294   */\n      mstore\n        /* \"#utility.yul\":10313:10317   */\n      0x24\n        /* \"#utility.yul\":10310:10311   */\n      0x00\n        /* \"#utility.yul\":10303:10318   */\n      revert\n        /* \"#utility.yul\":10329:10454   */\n    tag_210:\n        /* \"#utility.yul\":10369:10373   */\n      0x00\n        /* \"#utility.yul\":10397:10398   */\n      dup3\n        /* \"#utility.yul\":10394:10395   */\n      dup3\n        /* \"#utility.yul\":10391:10399   */\n      lt\n        /* \"#utility.yul\":10388:10422   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":10402:10420   */\n      tag_457\n      tag_363\n      jump\t// in\n    tag_457:\n      pop\n        /* \"#utility.yul\":10439:10448   */\n      sub\n      swap1\n        /* \"#utility.yul\":10329:10454   */\n      jump\t// out\n        /* \"#utility.yul\":10459:10587   */\n    tag_212:\n        /* \"#utility.yul\":10499:10502   */\n      0x00\n        /* \"#utility.yul\":10530:10531   */\n      dup3\n        /* \"#utility.yul\":10526:10532   */\n      not\n        /* \"#utility.yul\":10523:10524   */\n      dup3\n        /* \"#utility.yul\":10520:10533   */\n      gt\n        /* \"#utility.yul\":10517:10556   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10536:10554   */\n      tag_460\n      tag_363\n      jump\t// in\n    tag_460:\n      pop\n        /* \"#utility.yul\":10572:10581   */\n      add\n      swap1\n        /* \"#utility.yul\":10459:10587   */\n      jump\t// out\n        /* \"#utility.yul\":10592:10946   */\n    tag_364:\n        /* \"#utility.yul\":10680:10699   */\n      dup2\n      dup4\n      mstore\n        /* \"#utility.yul\":10662:10665   */\n      0x00\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":10711:10742   */\n      dup4\n      gt\n        /* \"#utility.yul\":10708:10759   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":10755:10756   */\n      0x00\n        /* \"#utility.yul\":10752:10753   */\n      dup1\n        /* \"#utility.yul\":10745:10757   */\n      revert\n        /* \"#utility.yul\":10708:10759   */\n    tag_462:\n        /* \"#utility.yul\":10791:10797   */\n      dup3\n        /* \"#utility.yul\":10788:10789   */\n      0x05\n        /* \"#utility.yul\":10784:10798   */\n      shl\n        /* \"#utility.yul\":10843:10851   */\n      dup1\n        /* \"#utility.yul\":10836:10841   */\n      dup4\n        /* \"#utility.yul\":10829:10833   */\n      0x20\n        /* \"#utility.yul\":10824:10827   */\n      dup8\n        /* \"#utility.yul\":10820:10834   */\n      add\n        /* \"#utility.yul\":10807:10852   */\n      calldatacopy\n        /* \"#utility.yul\":10920:10921   */\n      0x00\n        /* \"#utility.yul\":10875:10893   */\n      swap5\n      add\n        /* \"#utility.yul\":10895:10899   */\n      0x20\n        /* \"#utility.yul\":10871:10900   */\n      add\n        /* \"#utility.yul\":10909:10922   */\n      swap4\n      dup5\n      mstore\n      pop\n        /* \"#utility.yul\":10871:10900   */\n      swap2\n      swap3\n        /* \"#utility.yul\":10592:10946   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10951:11470   */\n    tag_214:\n        /* \"#utility.yul\":11228:11230   */\n      0x40\n        /* \"#utility.yul\":11217:11226   */\n      dup2\n        /* \"#utility.yul\":11210:11231   */\n      mstore\n        /* \"#utility.yul\":11191:11195   */\n      0x00\n        /* \"#utility.yul\":11254:11327   */\n      tag_464\n        /* \"#utility.yul\":11323:11325   */\n      0x40\n        /* \"#utility.yul\":11312:11321   */\n      dup4\n        /* \"#utility.yul\":11308:11326   */\n      add\n        /* \"#utility.yul\":11300:11306   */\n      dup7\n        /* \"#utility.yul\":11292:11298   */\n      dup9\n        /* \"#utility.yul\":11254:11327   */\n      tag_364\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11375:11384   */\n      dup3\n        /* \"#utility.yul\":11367:11373   */\n      dup2\n        /* \"#utility.yul\":11363:11385   */\n      sub\n        /* \"#utility.yul\":11358:11360   */\n      0x20\n        /* \"#utility.yul\":11347:11356   */\n      dup5\n        /* \"#utility.yul\":11343:11361   */\n      add\n        /* \"#utility.yul\":11336:11386   */\n      mstore\n        /* \"#utility.yul\":11403:11464   */\n      tag_465\n        /* \"#utility.yul\":11457:11463   */\n      dup2\n        /* \"#utility.yul\":11449:11455   */\n      dup6\n        /* \"#utility.yul\":11441:11447   */\n      dup8\n        /* \"#utility.yul\":11403:11464   */\n      tag_364\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11395:11464   */\n      swap8\n        /* \"#utility.yul\":10951:11470   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11475:11741   */\n    tag_365:\n        /* \"#utility.yul\":11563:11569   */\n      dup2\n        /* \"#utility.yul\":11558:11561   */\n      dup4\n        /* \"#utility.yul\":11551:11570   */\n      mstore\n        /* \"#utility.yul\":11615:11621   */\n      dup2\n        /* \"#utility.yul\":11608:11613   */\n      dup2\n        /* \"#utility.yul\":11601:11605   */\n      0x20\n        /* \"#utility.yul\":11596:11599   */\n      dup6\n        /* \"#utility.yul\":11592:11606   */\n      add\n        /* \"#utility.yul\":11579:11622   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":11667:11668   */\n      0x00\n        /* \"#utility.yul\":11642:11658   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":11660:11664   */\n      0x20\n        /* \"#utility.yul\":11638:11665   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11631:11669   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11723:11725   */\n      0x1f\n        /* \"#utility.yul\":11702:11717   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":11698:11727   */\n      and\n        /* \"#utility.yul\":11689:11728   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":11685:11735   */\n      add\n      swap1\n        /* \"#utility.yul\":11475:11741   */\n      jump\t// out\n        /* \"#utility.yul\":11746:12653   */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12173:12188   */\n      dup10\n      dup2\n      and\n        /* \"#utility.yul\":12155:12189   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12225:12240   */\n      dup9\n      and\n        /* \"#utility.yul\":12220:12222   */\n      0x20\n        /* \"#utility.yul\":12205:12223   */\n      dup3\n      add\n        /* \"#utility.yul\":12198:12241   */\n      mstore\n        /* \"#utility.yul\":12135:12138   */\n      0xa0\n        /* \"#utility.yul\":12272:12274   */\n      0x40\n        /* \"#utility.yul\":12257:12275   */\n      dup3\n      add\n        /* \"#utility.yul\":12250:12281   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12098:12102   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12304:12378   */\n      tag_468\n      swap1\n        /* \"#utility.yul\":12358:12377   */\n      dup4\n      add\n        /* \"#utility.yul\":12350:12356   */\n      dup9\n        /* \"#utility.yul\":12342:12348   */\n      dup11\n        /* \"#utility.yul\":12304:12378   */\n      tag_364\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12426:12435   */\n      dup3\n        /* \"#utility.yul\":12418:12424   */\n      dup2\n        /* \"#utility.yul\":12414:12436   */\n      sub\n        /* \"#utility.yul\":12409:12411   */\n      0x60\n        /* \"#utility.yul\":12398:12407   */\n      dup5\n        /* \"#utility.yul\":12394:12412   */\n      add\n        /* \"#utility.yul\":12387:12437   */\n      mstore\n        /* \"#utility.yul\":12460:12521   */\n      tag_469\n        /* \"#utility.yul\":12514:12520   */\n      dup2\n        /* \"#utility.yul\":12506:12512   */\n      dup8\n        /* \"#utility.yul\":12498:12504   */\n      dup10\n        /* \"#utility.yul\":12460:12521   */\n      tag_364\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12446:12521   */\n      swap1\n      pop\n        /* \"#utility.yul\":12570:12579   */\n      dup3\n        /* \"#utility.yul\":12562:12568   */\n      dup2\n        /* \"#utility.yul\":12558:12580   */\n      sub\n        /* \"#utility.yul\":12552:12555   */\n      0x80\n        /* \"#utility.yul\":12541:12550   */\n      dup5\n        /* \"#utility.yul\":12537:12556   */\n      add\n        /* \"#utility.yul\":12530:12581   */\n      mstore\n        /* \"#utility.yul\":12598:12647   */\n      tag_470\n        /* \"#utility.yul\":12640:12646   */\n      dup2\n        /* \"#utility.yul\":12632:12638   */\n      dup6\n        /* \"#utility.yul\":12624:12630   */\n      dup8\n        /* \"#utility.yul\":12598:12647   */\n      tag_365\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12590:12647   */\n      swap12\n        /* \"#utility.yul\":11746:12653   */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12658:12907   */\n    tag_221:\n        /* \"#utility.yul\":12727:12733   */\n      0x00\n        /* \"#utility.yul\":12780:12782   */\n      0x20\n        /* \"#utility.yul\":12768:12777   */\n      dup3\n        /* \"#utility.yul\":12759:12766   */\n      dup5\n        /* \"#utility.yul\":12755:12778   */\n      sub\n        /* \"#utility.yul\":12751:12783   */\n      slt\n        /* \"#utility.yul\":12748:12800   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":12796:12797   */\n      0x00\n        /* \"#utility.yul\":12793:12794   */\n      dup1\n        /* \"#utility.yul\":12786:12798   */\n      revert\n        /* \"#utility.yul\":12748:12800   */\n    tag_472:\n        /* \"#utility.yul\":12828:12837   */\n      dup2\n        /* \"#utility.yul\":12822:12838   */\n      mload\n        /* \"#utility.yul\":12847:12877   */\n      tag_377\n        /* \"#utility.yul\":12871:12876   */\n      dup2\n        /* \"#utility.yul\":12847:12877   */\n      tag_359\n      jump\t// in\n        /* \"#utility.yul\":12912:13252   */\n    tag_225:\n        /* \"#utility.yul\":13114:13116   */\n      0x20\n        /* \"#utility.yul\":13096:13117   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13153:13155   */\n      0x10\n        /* \"#utility.yul\":13133:13151   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13126:13156   */\n      mstore\n      shl(0x82, 0x155394d0519157d49150d25412515395)\n        /* \"#utility.yul\":13187:13189   */\n      0x40\n        /* \"#utility.yul\":13172:13190   */\n      dup3\n      add\n        /* \"#utility.yul\":13165:13211   */\n      mstore\n        /* \"#utility.yul\":13243:13245   */\n      0x60\n        /* \"#utility.yul\":13228:13246   */\n      add\n      swap1\n        /* \"#utility.yul\":12912:13252   */\n      jump\t// out\n        /* \"#utility.yul\":14281:14868   */\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14588:14603   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":14570:14604   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14640:14655   */\n      dup7\n      and\n        /* \"#utility.yul\":14635:14637   */\n      0x20\n        /* \"#utility.yul\":14620:14638   */\n      dup3\n      add\n        /* \"#utility.yul\":14613:14656   */\n      mstore\n        /* \"#utility.yul\":14687:14689   */\n      0x40\n        /* \"#utility.yul\":14672:14690   */\n      dup2\n      add\n        /* \"#utility.yul\":14665:14699   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":14730:14732   */\n      0x60\n        /* \"#utility.yul\":14715:14733   */\n      dup2\n      add\n        /* \"#utility.yul\":14708:14742   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14550:14553   */\n      0xa0\n        /* \"#utility.yul\":14773:14776   */\n      0x80\n        /* \"#utility.yul\":14758:14777   */\n      dup3\n      add\n        /* \"#utility.yul\":14751:14783   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14513:14517   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14800:14862   */\n      tag_479\n      swap1\n        /* \"#utility.yul\":14842:14861   */\n      dup4\n      add\n        /* \"#utility.yul\":14834:14840   */\n      dup5\n        /* \"#utility.yul\":14826:14832   */\n      dup7\n        /* \"#utility.yul\":14800:14862   */\n      tag_365\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14792:14862   */\n      swap9\n        /* \"#utility.yul\":14281:14868   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15280:15841   */\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15577:15592   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15559:15593   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15629:15644   */\n      dup6\n      and\n        /* \"#utility.yul\":15624:15626   */\n      0x20\n        /* \"#utility.yul\":15609:15627   */\n      dup3\n      add\n        /* \"#utility.yul\":15602:15645   */\n      mstore\n        /* \"#utility.yul\":15676:15678   */\n      0x40\n        /* \"#utility.yul\":15661:15679   */\n      dup2\n      add\n        /* \"#utility.yul\":15654:15688   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15719:15721   */\n      0x60\n        /* \"#utility.yul\":15704:15722   */\n      dup2\n      add\n        /* \"#utility.yul\":15697:15731   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15539:15542   */\n      0xa0\n        /* \"#utility.yul\":15762:15765   */\n      0x80\n        /* \"#utility.yul\":15747:15766   */\n      dup3\n      add\n        /* \"#utility.yul\":15740:15772   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15502:15506   */\n      0x00\n      swap1\n        /* \"#utility.yul\":15789:15835   */\n      tag_465\n      swap1\n        /* \"#utility.yul\":15815:15834   */\n      dup4\n      add\n        /* \"#utility.yul\":15807:15813   */\n      dup5\n        /* \"#utility.yul\":15789:15835   */\n      tag_360\n      jump\t// in\n\n    auxdata: 0xa26469706673582212204a740a2d2425e6cdf9f9e2a669314faefedc3a0f2a644a6dc489b9cfb57a9f6c64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1858": {
									"entryPoint": null,
									"id": 1858,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2127": {
									"entryPoint": null,
									"id": 2127,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_msgSender_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1938": {
									"entryPoint": 285,
									"id": 1938,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"panic_error_0x41": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2177:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:13"
															},
															"nodeType": "YulIf",
															"src": "220:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:13"
															},
															"nodeType": "YulIf",
															"src": "353:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:13"
															},
															"nodeType": "YulIf",
															"src": "536:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:13"
															},
															"nodeType": "YulIf",
															"src": "698:53:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:13"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:13"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:13",
																"statements": []
															},
															"src": "779:133:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:13"
															},
															"nodeType": "YulIf",
															"src": "921:80:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:13",
														"type": ""
													}
												],
												"src": "146:885:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1225:950:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1272:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1281:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1284:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1274:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1274:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1274:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1246:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1242:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1238:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:33:13"
															},
															"nodeType": "YulIf",
															"src": "1235:53:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1297:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1317:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1311:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1301:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1336:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1354:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1358:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1340:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1391:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1400:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1403:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1393:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1393:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1393:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1379:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1387:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1376:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:14:13"
															},
															"nodeType": "YulIf",
															"src": "1373:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1416:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1459:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1470:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1479:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1426:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1496:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1522:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1533:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1518:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1512:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:25:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1500:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1575:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1552:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1562:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1549:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:16:13"
															},
															"nodeType": "YulIf",
															"src": "1546:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1645:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1656:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1601:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1673:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1696:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1707:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1686:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:25:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1677:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1774:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1783:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1786:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1733:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1744:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1759:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1764:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1755:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1755:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1768:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1751:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1751:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1740:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1740:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1730:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:50:13"
															},
															"nodeType": "YulIf",
															"src": "1720:70:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1799:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1809:5:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1799:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1823:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1849:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1860:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1845:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1845:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1839:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:25:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "1827:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1893:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1902:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1895:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1895:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1895:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "1879:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1889:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1876:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:16:13"
															},
															"nodeType": "YulIf",
															"src": "1873:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1918:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "1972:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1983:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1928:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2000:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2026:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2037:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2022:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2022:19:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2016:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:26:13"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nodeType": "YulTypedName",
																	"src": "2004:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2071:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2080:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2073:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2073:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2073:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nodeType": "YulIdentifier",
																		"src": "2057:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2067:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2054:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:16:13"
															},
															"nodeType": "YulIf",
															"src": "2051:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2096:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2139:9:13"
																			},
																			{
																				"name": "offset_3",
																				"nodeType": "YulIdentifier",
																				"src": "2150:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2135:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2135:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2161:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2106:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:63:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1170:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1182:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1190:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1198:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1206:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1214:6:13",
														"type": ""
													}
												],
												"src": "1036:1139:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value2 := value\n        let offset_2 := mload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n        let offset_3 := mload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value4 := abi_decode_string_fromMemory(add(headStart, offset_3), dataEnd)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x140 PUSH1 0x40 MSTORE PUSH1 0xA6 PUSH1 0x80 MSTORE PUSH2 0x14A PUSH1 0xA0 MSTORE PUSH1 0x11 PUSH1 0xC0 MSTORE PUSH1 0x21 PUSH1 0xE0 MSTORE PUSH1 0x1 PUSH2 0x100 MSTORE PUSH1 0x2 PUSH2 0x120 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2057 CODESIZE SUB DUP1 PUSH3 0x2057 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x56 SWAP2 PUSH3 0x23C JUMP JUMPDEST PUSH3 0x61 CALLER PUSH3 0x11D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54657374204D696E742050617373207631324100000000000000000000000000 DUP2 MSTORE POP SWAP5 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x262331303034373B544D5056313049 PUSH1 0x88 SHL DUP2 MSTORE POP SWAP4 POP PUSH20 0xC83BEBA473DD6BD1890519EE0EEE2AC4FA5836B5 SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2022 PUSH1 0x35 SWAP2 CODECOPY SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1FED PUSH1 0x35 SWAP2 CODECOPY SWAP2 POP POP POP POP POP POP PUSH3 0x317 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1B4 JUMPI PUSH3 0x1B4 PUSH3 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1DF JUMPI PUSH3 0x1DF PUSH3 0x16F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x220 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x201 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x27B DUP10 DUP4 DUP11 ADD PUSH3 0x185 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2A0 DUP10 DUP4 DUP11 ADD PUSH3 0x185 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MLOAD SWAP1 SWAP7 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 EQ PUSH3 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP5 POP DUP1 DUP3 GT ISZERO PUSH3 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2E4 DUP10 DUP4 DUP11 ADD PUSH3 0x185 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x30A DUP9 DUP3 DUP10 ADD PUSH3 0x185 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C39 PUSH3 0x3B4 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x377 ADD MSTORE DUP2 DUP2 PUSH2 0x7B1 ADD MSTORE DUP2 DUP2 PUSH2 0xAD8 ADD MSTORE DUP2 DUP2 PUSH2 0xB71 ADD MSTORE PUSH2 0xBBD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3B7 ADD MSTORE DUP2 DUP2 PUSH2 0x756 ADD MSTORE DUP2 DUP2 PUSH2 0xB01 ADD MSTORE PUSH2 0xC9B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x47B ADD MSTORE PUSH2 0x7D2 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x454 ADD MSTORE PUSH2 0x777 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x315 ADD MSTORE PUSH2 0xB99 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4F6 ADD MSTORE PUSH2 0xC77 ADD MSTORE PUSH2 0x1C39 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71D05AEC GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCBF99084 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xF48DEAAA EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBF99084 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xCC2851C6 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xDEC125BA EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xDF52FA84 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FA3CDA1 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9FA3CDA1 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71D05AEC EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x9E3CF643 EQ PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x45114990 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x45114990 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x388B9FE0 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A3BEEF GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x9A3BEEF EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xB22F540 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x16473CF7 EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x211 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21B JUMP JUMPDEST PUSH2 0x24F PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F6 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x26F PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2F8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21B JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x34A PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x26F PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x24F PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x211 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x164F JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x211 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1903 JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x116D JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x549 JUMPI POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x564 JUMPI POP PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A3 SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x64A SWAP3 DUP6 ADD SWAP1 PUSH2 0x13F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x66C SWAP1 PUSH2 0x197B JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x688 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CD SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1205 JUMP JUMPDEST POP JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x988A9C8EA890BE9A92A69A82A8869 PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EQ DUP1 PUSH2 0x884 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x97C JUMPI DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0x8E1 JUMPI PUSH2 0x8E1 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP3 POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x8FC JUMPI PUSH2 0x8FC PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE DUP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP4 SWAP1 SWAP2 MUL SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP6 POP DUP6 SWAP4 SWAP3 POP SWAP1 PUSH2 0x939 SWAP1 DUP5 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x96F SWAP1 DUP5 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x8C7 JUMP JUMPDEST POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EXTCODESIZE ISZERO PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA24 SWAP1 CALLER SWAP1 DUP16 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO ISZERO JUMPDEST PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH32 0x0 DUP2 EQ DUP1 PUSH2 0xB23 JUMPI POP PUSH32 0x0 DUP2 EQ JUMPDEST PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544D50563132413A204E6F6E6578697374656E7420746F6B656E2049442E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0xC75 JUMPI PUSH32 0x0 PUSH2 0xBEE PUSH32 0x0 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBF8 SWAP1 DUP5 PUSH2 0x1A2E JUMP JUMPDEST GT ISZERO PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544D50563132413A20416D6F756E74206973206C6172676572207468616E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x37BA30B629BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x622 JUMP JUMPDEST PUSH2 0x64A DUP4 DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1205 JUMP JUMPDEST PUSH32 0x0 PUSH2 0xBEE PUSH32 0x0 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST SELFBALANCE PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x150111E7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xD2A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFBALANCE PUSH2 0x134D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP4 DUP3 EQ PUSH2 0xD6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x988A9C8EA890BE9A92A69A82A8869 PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDB1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xDD4 JUMPI PUSH2 0xDD4 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xE1D JUMPI PUSH2 0xE1D PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xDB7 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0xD2A PUSH1 0x0 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x197B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x197B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0xFAD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xFEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x101B SWAP1 DUP5 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1051 SWAP1 DUP5 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 SWAP1 DUP10 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE ISZERO PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x10E9 SWAP1 CALLER SWAP1 DUP12 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x622 JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1236 SWAP1 DUP5 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x131E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x12CB SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x132B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x13FC SWAP1 PUSH2 0x197B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x141E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1464 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1437 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1464 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1464 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1464 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1449 JUMP JUMPDEST POP PUSH2 0x1470 SWAP3 SWAP2 POP PUSH2 0x1474 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1475 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C1 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1502 DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x152F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1513 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1541 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1502 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1509 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15D0 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F8 PUSH2 0x1569 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1502 DUP3 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171B DUP10 PUSH2 0x1489 JUMP JUMPDEST SWAP8 POP PUSH2 0x1729 PUSH1 0x20 DUP11 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1752 DUP13 DUP4 DUP14 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1777 DUP13 DUP4 DUP14 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179D DUP12 DUP3 DUP13 ADD PUSH2 0x16B4 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CF DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x181E DUP9 DUP4 DUP10 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1844 DUP8 DUP3 DUP9 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1888 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x186C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B0 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP PUSH2 0x18FA PUSH1 0x20 DUP5 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x191C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1925 DUP8 PUSH2 0x1489 JUMP JUMPDEST SWAP6 POP PUSH2 0x1933 PUSH1 0x20 DUP9 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1969 DUP10 DUP3 DUP11 ADD PUSH2 0x16B4 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x198F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x19B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1A29 JUMPI PUSH2 0x1A29 PUSH2 0x1A01 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A41 PUSH2 0x1A01 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY PUSH1 0x0 SWAP5 ADD PUSH1 0x20 ADD SWAP4 DUP5 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A90 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x1A46 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AA3 DUP2 DUP6 DUP8 PUSH2 0x1A46 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1B04 SWAP1 DUP4 ADD DUP9 DUP11 PUSH2 0x1A46 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1B17 DUP2 DUP8 DUP10 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1B2C DUP2 DUP6 DUP8 PUSH2 0x1AAE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1502 DUP2 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x155394D0519157D49150D25412515395 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BBD SWAP1 DUP4 ADD DUP5 DUP7 PUSH2 0x1AAE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AA3 SWAP1 DUP4 ADD DUP5 PUSH2 0x1509 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A PUSH21 0xA2D2425E6CDF9F9E2A669314FAEFEDC3A0F2A644A PUSH14 0xC489B9CFB57A9F6C64736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER PUSH10 0x7066733A2F2F516D5150 BASEFEE GASLIMIT PUSH9 0x6E6A7452476F326D68 PUSH22 0x475670556855717A70715A4D37373362616943527436 COINBASE MSIZE JUMP PUSH15 0x38796B697066733A2F2F516D634633 SSTORE PUSH19 0x575076796E3935515731427539325A6A365576 CHAINID GAS CODECOPY MSTORE8 0x4A SELFBALANCE SSTORE CODESIZE CHAINID PUSH14 0x7046584664366578654800000000 ",
							"sourceMap": "502:5553:12:-:0;;;1056:3;999:60;;1121:3;1065:59;;1194:2;1130:66;;1265:2;1202:65;;1329:1;1274:56;;1390:1;1336:55;;2089:686;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;942:32:10;719:10:3;942:18:10;:32::i;:::-;2307:29:12;;;;;;;;;;;;;;;;;;;2346:27;;;;;;;;;;;;;-1:-1:-1;;;2346:27:12;;;;;2539:42;2523:58;;2591:83;;;;;;;;;;;;;;;;;;;2684:84;;;;;;;;;;;;;;;;;;;2089:686;;;;;502:5553;;2291:187:10;2383:6;;;-1:-1:-1;;;;;2399:17:10;;;-1:-1:-1;;;;;;2399:17:10;;;;;;;2431:40;;2383:6;;;2399:17;2383:6;;2431:40;;2364:16;;2431:40;2354:124;2291:187;:::o;14:127:13:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:13:o;1036:1139::-;1182:6;1190;1198;1206;1214;1267:3;1255:9;1246:7;1242:23;1238:33;1235:53;;;1284:1;1281;1274:12;1235:53;1311:16;;-1:-1:-1;;;;;1376:14:13;;;1373:34;;;1403:1;1400;1393:12;1373:34;1426:61;1479:7;1470:6;1459:9;1455:22;1426:61;:::i;:::-;1416:71;;1533:2;1522:9;1518:18;1512:25;1496:41;;1562:2;1552:8;1549:16;1546:36;;;1578:1;1575;1568:12;1546:36;1601:63;1656:7;1645:8;1634:9;1630:24;1601:63;:::i;:::-;1707:2;1692:18;;1686:25;1591:73;;-1:-1:-1;1686:25:13;-1:-1:-1;;;;;;1740:31:13;;1730:42;;1720:70;;1786:1;1783;1776:12;1720:70;1860:2;1845:18;;1839:25;1809:5;;-1:-1:-1;1876:16:13;;;1873:36;;;1905:1;1902;1895:12;1873:36;1928:63;1983:7;1972:8;1961:9;1957:24;1928:63;:::i;:::-;1918:73;;2037:3;2026:9;2022:19;2016:26;2000:42;;2067:2;2057:8;2054:16;2051:36;;;2083:1;2080;2073:12;2051:36;;2106:63;2161:7;2150:8;2139:9;2135:24;2106:63;:::i;:::-;2096:73;;;1036:1139;;;;;;;;:::o;:::-;502:5553:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TestMintPassBlackMinted_2093": {
									"entryPoint": null,
									"id": 2093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TestMintPassBlueMinted_2089": {
									"entryPoint": null,
									"id": 2089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_BlackMaxSupply_2056": {
									"entryPoint": null,
									"id": 2056,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_BlackScholarshipTotal_2062": {
									"entryPoint": null,
									"id": 2062,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_BlackTokenId_2068": {
									"entryPoint": null,
									"id": 2068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_Black_2074": {
									"entryPoint": null,
									"id": 2074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_BlueMaxSupply_2059": {
									"entryPoint": null,
									"id": 2059,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_BlueScholarshipTotal_2065": {
									"entryPoint": null,
									"id": 2065,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_BlueTokenId_2071": {
									"entryPoint": null,
									"id": 2071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Test_Mint_Pass_Blue_2077": {
									"entryPoint": null,
									"id": 2077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1211": {
									"entryPoint": 4613,
									"id": 1211,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1938": {
									"entryPoint": 5022,
									"id": 1938,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_1125": {
									"entryPoint": 3372,
									"id": 1125,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@balanceOf_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintScholarship_2180": {
									"entryPoint": 1830,
									"id": 2180,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_2049": {
									"entryPoint": 1386,
									"id": 2049,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerMint_2246": {
									"entryPoint": 2732,
									"id": 2246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_1867": {
									"entryPoint": null,
									"id": 1867,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1895": {
									"entryPoint": 3757,
									"id": 1895,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_1066": {
									"entryPoint": 2057,
									"id": 1066,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@safeTransferETH_1968": {
									"entryPoint": 4941,
									"id": 1968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_938": {
									"entryPoint": 3955,
									"id": 938,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@setApprovalForAll_853": {
									"entryPoint": 3822,
									"id": 853,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTokenURI_2157": {
									"entryPoint": 1528,
									"id": 2157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setVault_2288": {
									"entryPoint": 3681,
									"id": 2288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1145": {
									"entryPoint": 1304,
									"id": 1145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2051": {
									"entryPoint": 3809,
									"id": 2051,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_2085": {
									"entryPoint": 3930,
									"id": 2085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_2140": {
									"entryPoint": null,
									"id": 2140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1918": {
									"entryPoint": 4461,
									"id": 1918,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uri_2315": {
									"entryPoint": 1615,
									"id": 2315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vaultAddress_2053": {
									"entryPoint": null,
									"id": 2053,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_2275": {
									"entryPoint": 3276,
									"id": 2275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_calldata": {
									"entryPoint": 5736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn_calldata": {
									"entryPoint": 6726,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_bytes_calldata_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_617cf2dffc4df0477a0f1acce806f689cfc6e415d9acac53e9f7bdbcde9c93be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b792b41c51bd0535eac8e7752c9be2a75fb5bec17b7104673496b74710fd9cf0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16191:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:13"
															},
															"nodeType": "YulIf",
															"src": "289:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:13",
														"type": ""
													}
												],
												"src": "192:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:13",
														"type": ""
													}
												],
												"src": "451:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:13"
															},
															"nodeType": "YulIf",
															"src": "687:71:13"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:13",
														"type": ""
													}
												],
												"src": "633:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:13"
															},
															"nodeType": "YulIf",
															"src": "848:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:13",
														"type": ""
													}
												],
												"src": "769:245:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:13",
														"type": ""
													}
												],
												"src": "1019:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:422:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1271:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1291:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1275:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1313:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1318:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1306:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1343:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1338:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1405:110:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1419:14:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1429:4:13",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1423:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1461:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1466:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1457:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1457:11:13"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1470:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1453:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1453:20:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1489:5:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1496:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1485:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1485:13:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1500:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1481:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1481:22:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1475:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1475:29:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1446:59:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:59:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1364:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1367:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1361:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1375:21:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1377:17:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1386:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1389:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1382:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1377:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1357:3:13",
																"statements": []
															},
															"src": "1353:162:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1549:62:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1578:3:13"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1583:6:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1574:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1574:16:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1592:4:13",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1570:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1570:27:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1563:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1563:38:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1563:38:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1530:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1533:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1527:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:13:13"
															},
															"nodeType": "YulIf",
															"src": "1524:87:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1620:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1635:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1648:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1656:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1644:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1644:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1665:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1661:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1661:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1640:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:39:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1627:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1620:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1238:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1245:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1253:3:13",
														"type": ""
													}
												],
												"src": "1211:472:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1826:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1837:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1819:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1849:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1875:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1887:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1898:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1857:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1857:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1849:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1778:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1789:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1800:4:13",
														"type": ""
													}
												],
												"src": "1688:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1962:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1969:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1974:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1965:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2005:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1995:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1995:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1913:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2142:903:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2188:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2197:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2200:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2190:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2190:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2190:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2163:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2172:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2184:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2155:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:32:13"
															},
															"nodeType": "YulIf",
															"src": "2152:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2213:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2227:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2217:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2259:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2269:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2263:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2314:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2323:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2326:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2316:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2316:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2316:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2310:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:14:13"
															},
															"nodeType": "YulIf",
															"src": "2296:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2339:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2353:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2364:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2349:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2343:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2419:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2428:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2431:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2421:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2421:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2421:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2398:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2402:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2394:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2394:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2409:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2390:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2390:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:35:13"
															},
															"nodeType": "YulIf",
															"src": "2380:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2444:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2467:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2454:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2448:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2495:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2485:2:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2489:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2482:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:10:13"
															},
															"nodeType": "YulIf",
															"src": "2479:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2524:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2538:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2528:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2550:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2564:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2554:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2582:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2604:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2628:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2632:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2624:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2624:13:13"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2639:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2620:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2620:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2644:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2616:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2616:31:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2649:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2586:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2712:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2714:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2714:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2714:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2671:10:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2683:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2668:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2668:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2691:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2703:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2688:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2665:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:46:13"
															},
															"nodeType": "YulIf",
															"src": "2662:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2754:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2743:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2743:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2781:6:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2789:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2774:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2840:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2849:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2852:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2842:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2842:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2842:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2815:2:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2819:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2811:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2811:11:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2824:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2807:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2807:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2831:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:35:13"
															},
															"nodeType": "YulIf",
															"src": "2801:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2882:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2890:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2878:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2878:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2901:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2905:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2897:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2897:13:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2912:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2865:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2865:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2939:6:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2947:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2935:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2935:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2952:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2931:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2931:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2959:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2924:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2970:16:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2980:6:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2995:44:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3022:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3033:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3018:20:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3005:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3005:34:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2100:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2111:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2123:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2131:6:13",
														"type": ""
													}
												],
												"src": "2045:1000:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3120:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3166:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3175:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3178:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3168:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3168:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3168:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3141:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3137:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:32:13"
															},
															"nodeType": "YulIf",
															"src": "3130:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3191:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3220:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3201:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3191:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3086:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3097:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3109:6:13",
														"type": ""
													}
												],
												"src": "3050:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3311:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3357:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3366:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3369:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3359:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3359:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3359:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3332:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3328:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3328:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3353:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3324:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:32:13"
															},
															"nodeType": "YulIf",
															"src": "3321:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3382:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3405:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3392:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3277:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3288:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3300:6:13",
														"type": ""
													}
												],
												"src": "3241:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3510:283:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3559:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3568:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3571:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3561:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3561:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3561:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3538:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3546:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3534:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3534:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3553:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:35:13"
															},
															"nodeType": "YulIf",
															"src": "3520:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3584:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3607:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3594:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3657:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3666:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3669:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3659:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3659:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3659:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3629:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3626:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3626:30:13"
															},
															"nodeType": "YulIf",
															"src": "3623:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3682:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3706:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3682:8:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3771:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3780:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3783:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3773:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3773:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3773:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3734:6:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3746:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3749:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3742:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3742:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3730:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3730:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3759:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3726:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3726:38:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3723:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:47:13"
															},
															"nodeType": "YulIf",
															"src": "3720:67:13"
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3473:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3481:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "3489:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3499:6:13",
														"type": ""
													}
												],
												"src": "3426:367:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3870:275:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3919:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3928:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3931:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3921:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3921:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3921:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3898:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3906:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3894:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3894:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3890:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:35:13"
															},
															"nodeType": "YulIf",
															"src": "3880:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3944:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3967:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3954:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3954:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3944:6:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4017:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4026:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4029:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4019:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4019:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4019:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3989:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3986:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:30:13"
															},
															"nodeType": "YulIf",
															"src": "3983:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4042:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4058:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4054:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4042:8:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4123:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4132:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4135:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4125:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4125:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4125:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4094:6:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4102:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4090:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4090:19:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4086:30:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4118:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4083:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:39:13"
															},
															"nodeType": "YulIf",
															"src": "4080:59:13"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3833:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3841:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "3849:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3859:6:13",
														"type": ""
													}
												],
												"src": "3798:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4377:983:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4424:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4433:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4436:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4426:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4426:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4426:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4398:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4419:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4390:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:33:13"
															},
															"nodeType": "YulIf",
															"src": "4387:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4449:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4478:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4459:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4459:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4497:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4530:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4541:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4526:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4526:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4507:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4507:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4497:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4554:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4585:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4596:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4581:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4581:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4568:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4558:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4609:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4619:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4613:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4664:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4673:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4676:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4666:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4666:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4666:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4652:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4660:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4649:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4649:14:13"
															},
															"nodeType": "YulIf",
															"src": "4646:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4689:96:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4757:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4768:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4753:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4753:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4777:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4715:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:70:13"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "4693:8:13",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "4703:8:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4794:18:13",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "4804:8:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4821:18:13",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "4831:8:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4848:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4881:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4892:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4864:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4852:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4925:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4934:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4937:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4927:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4927:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4927:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4911:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4921:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4908:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:16:13"
															},
															"nodeType": "YulIf",
															"src": "4905:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4950:98:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5018:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5029:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5040:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4976:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:72:13"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4954:8:13",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "4964:8:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5057:18:13",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "5067:8:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5057:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5084:18:13",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "5094:8:13"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5084:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5111:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5144:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5155:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5140:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5140:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5127:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5127:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5115:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5189:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5198:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5201:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5191:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5191:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5191:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5175:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5185:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5172:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:16:13"
															},
															"nodeType": "YulIf",
															"src": "5169:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5214:86:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5270:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5281:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5266:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5266:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5292:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5240:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:60:13"
															},
															"variables": [
																{
																	"name": "value6_1",
																	"nodeType": "YulTypedName",
																	"src": "5218:8:13",
																	"type": ""
																},
																{
																	"name": "value7_1",
																	"nodeType": "YulTypedName",
																	"src": "5228:8:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5309:18:13",
															"value": {
																"name": "value6_1",
																"nodeType": "YulIdentifier",
																"src": "5319:8:13"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5336:18:13",
															"value": {
																"name": "value7_1",
																"nodeType": "YulIdentifier",
																"src": "5346:8:13"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "5336:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4287:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4298:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4310:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4318:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4326:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4334:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4342:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4350:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4358:6:13",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "4366:6:13",
														"type": ""
													}
												],
												"src": "4150:1210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5469:218:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5515:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5524:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5527:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5517:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5517:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5517:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5490:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5499:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5486:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5486:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5511:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:32:13"
															},
															"nodeType": "YulIf",
															"src": "5479:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5540:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5569:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5550:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5588:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5615:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5626:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5611:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5611:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5598:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5639:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5649:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5639:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5419:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5430:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5442:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5450:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5458:6:13",
														"type": ""
													}
												],
												"src": "5365:322:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5793:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5803:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5815:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5826:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5811:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5811:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5803:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5845:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5860:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5876:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5881:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5872:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5872:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5885:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5868:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5868:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5762:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5773:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5784:4:13",
														"type": ""
													}
												],
												"src": "5692:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6057:616:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6103:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6112:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6115:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6105:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6105:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6105:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6078:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6087:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6074:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6099:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6070:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:32:13"
															},
															"nodeType": "YulIf",
															"src": "6067:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6128:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6155:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6142:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6132:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6174:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6184:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6178:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6229:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6238:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6241:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6231:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6231:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6231:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6217:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6225:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6214:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6214:14:13"
															},
															"nodeType": "YulIf",
															"src": "6211:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6254:96:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6322:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6333:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6318:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6318:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6342:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "6280:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6280:70:13"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "6258:8:13",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "6268:8:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6359:18:13",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "6369:8:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6359:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6386:18:13",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "6396:8:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6386:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6413:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6446:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6457:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6442:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6442:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6429:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6417:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6490:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6499:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6492:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6492:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6476:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6486:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6473:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:16:13"
															},
															"nodeType": "YulIf",
															"src": "6470:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6515:98:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6583:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6594:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6579:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6605:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "6541:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6541:72:13"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "6519:8:13",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "6529:8:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6622:18:13",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "6632:8:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6622:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6649:18:13",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "6659:8:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5999:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6010:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6022:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6030:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6038:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6046:6:13",
														"type": ""
													}
												],
												"src": "5900:773:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6829:481:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6839:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6849:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6843:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6860:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6878:9:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6889:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6874:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6874:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6864:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6908:9:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6919:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6901:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6931:17:13",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6942:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6935:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6957:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6977:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6971:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6971:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6961:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7000:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6993:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6993:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7024:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7035:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7031:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7024:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7058:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7076:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7084:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7062:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7096:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7105:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7100:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7164:120:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7185:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7196:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7190:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7190:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7178:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7178:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7178:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7217:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7228:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7233:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7224:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7224:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7217:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7249:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7263:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7271:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7259:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7259:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7249:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7126:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7129:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7123:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7137:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7139:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7148:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7151:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7144:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7144:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7139:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7119:3:13",
																"statements": []
															},
															"src": "7115:169:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7293:11:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7301:3:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7293:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6798:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6809:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6820:4:13",
														"type": ""
													}
												],
												"src": "6678:632:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7399:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7445:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7454:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7457:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7447:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7447:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7447:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7420:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7429:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7416:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7416:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7441:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7412:32:13"
															},
															"nodeType": "YulIf",
															"src": "7409:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7470:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7499:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7480:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7480:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7470:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7518:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7548:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7559:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7544:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7544:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7531:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7522:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7616:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7625:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7628:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7618:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7618:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7618:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7585:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7606:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7599:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7599:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7592:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7592:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7582:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:40:13"
															},
															"nodeType": "YulIf",
															"src": "7572:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7641:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7651:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7641:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7357:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7368:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7380:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7388:6:13",
														"type": ""
													}
												],
												"src": "7315:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7754:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7800:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7809:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7812:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7802:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7802:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7802:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7775:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7784:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7771:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7771:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7796:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7767:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7767:32:13"
															},
															"nodeType": "YulIf",
															"src": "7764:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7825:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7854:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7835:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7906:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7917:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7902:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7902:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7883:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7873:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7712:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7723:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7735:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7743:6:13",
														"type": ""
													}
												],
												"src": "7667:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8089:538:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8136:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8145:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8148:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8138:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8138:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8138:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8110:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8119:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8106:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8106:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8131:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8102:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8102:33:13"
															},
															"nodeType": "YulIf",
															"src": "8099:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8161:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8190:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8171:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8171:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8161:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8209:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8242:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8253:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8238:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8238:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8219:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8219:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8209:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8266:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8293:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8304:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8289:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8289:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8276:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8276:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8266:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8317:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8344:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8355:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8340:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8340:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8327:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8327:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8317:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8368:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8399:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8410:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8395:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8395:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8382:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8382:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8372:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8458:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8467:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8470:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8460:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8460:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8460:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8430:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8438:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8427:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8427:30:13"
															},
															"nodeType": "YulIf",
															"src": "8424:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8483:84:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8539:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8550:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8559:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "8509:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:58:13"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "8487:8:13",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "8497:8:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8576:18:13",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "8586:8:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8603:18:13",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "8613:8:13"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "8603:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8015:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8026:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8038:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8046:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8054:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8062:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8070:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "8078:6:13",
														"type": ""
													}
												],
												"src": "7932:695:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8687:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8697:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8711:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8714:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8707:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8697:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8728:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8758:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8764:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8754:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8732:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8805:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8807:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8821:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8829:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8817:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8807:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8785:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:26:13"
															},
															"nodeType": "YulIf",
															"src": "8775:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8895:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8916:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8923:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8928:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8919:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8919:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8909:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8909:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8909:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8960:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8963:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8953:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8953:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8953:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8988:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8991:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8981:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8981:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8981:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8851:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8874:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8882:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8871:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8871:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8848:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8848:38:13"
															},
															"nodeType": "YulIf",
															"src": "8845:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8667:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8676:6:13",
														"type": ""
													}
												],
												"src": "8632:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9191:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9208:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9219:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9201:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9201:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9242:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9253:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9238:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9238:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9258:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9231:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9231:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9281:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9292:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9277:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9277:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9297:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9270:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9270:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9270:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9341:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9353:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9349:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9341:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9168:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9182:4:13",
														"type": ""
													}
												],
												"src": "9017:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9552:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9569:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9580:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9562:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9562:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9562:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9603:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9614:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9599:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9599:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9619:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9592:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9592:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9592:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9642:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9653:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9638:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9638:18:13"
																	},
																	{
																		"hexValue": "4c454e4754485f4d49534d41544348",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9658:17:13",
																		"type": "",
																		"value": "LENGTH_MISMATCH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9631:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9631:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9631:45:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9685:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9697:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9708:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9693:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9693:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9685:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9529:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9543:4:13",
														"type": ""
													}
												],
												"src": "9378:339:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9896:164:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9913:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9924:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9906:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9906:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9906:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9947:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9958:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9943:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9943:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9963:2:13",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9936:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9936:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9936:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9986:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9997:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9982:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9982:18:13"
																	},
																	{
																		"hexValue": "4e4f545f415554484f52495a4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10002:16:13",
																		"type": "",
																		"value": "NOT_AUTHORIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10028:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10040:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10051:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10036:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10028:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9873:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9887:4:13",
														"type": ""
													}
												],
												"src": "9722:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10097:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10114:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10121:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10126:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10117:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10117:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10107:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10107:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10107:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10154:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10157:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10147:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10147:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10147:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10178:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10181:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10171:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10171:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10065:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10229:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10246:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10253:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10258:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10249:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10249:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10239:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10239:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10239:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10289:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10279:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10279:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10279:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10310:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10313:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10303:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10303:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10303:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10197:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10378:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10400:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10402:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10402:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10402:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10394:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10397:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10391:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10391:8:13"
															},
															"nodeType": "YulIf",
															"src": "10388:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10431:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10443:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10446:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10439:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10431:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10360:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10363:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10369:4:13",
														"type": ""
													}
												],
												"src": "10329:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10507:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10534:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10536:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10536:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10536:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10523:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10530:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10526:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10526:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10520:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10520:13:13"
															},
															"nodeType": "YulIf",
															"src": "10517:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10565:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10576:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10579:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10572:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10565:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10490:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10493:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10499:3:13",
														"type": ""
													}
												],
												"src": "10459:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:276:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10687:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10692:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:19:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10743:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10752:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10755:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10745:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10745:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10745:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10714:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10730:3:13",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10735:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10726:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10726:11:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10739:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10722:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10722:19:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10711:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10711:31:13"
															},
															"nodeType": "YulIf",
															"src": "10708:51:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10768:30:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10788:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10791:6:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "10784:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10784:14:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "10772:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10824:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10829:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10820:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10820:14:13"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "10836:5:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "10843:8:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "10807:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10807:45:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10861:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10879:3:13"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "10884:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10875:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10875:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10895:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10871:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10871:29:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10865:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10916:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10920:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10909:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10909:13:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10909:13:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10931:9:13",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "10938:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10931:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "10639:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10646:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10654:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10662:3:13",
														"type": ""
													}
												],
												"src": "10592:354:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11200:270:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11217:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11228:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11210:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11210:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11210:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11240:87:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11292:6:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11300:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11312:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11323:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11308:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11308:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "11254:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11254:73:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11244:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11347:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11358:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11343:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11343:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11367:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11375:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11363:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11363:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11336:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11336:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11336:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11395:69:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11441:6:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11449:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11457:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "11403:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11403:61:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11395:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11145:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11156:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11164:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11172:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11180:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11191:4:13",
														"type": ""
													}
												],
												"src": "10951:519:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11541:200:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11558:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11563:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11551:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11551:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11596:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11601:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11592:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11592:14:13"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "11608:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11615:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11579:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11579:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11579:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11646:3:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "11651:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11642:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11642:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11660:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11638:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11638:27:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11667:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11631:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11631:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11631:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11678:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11693:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "11706:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11714:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11702:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11702:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11723:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11719:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11719:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "11698:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11698:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11689:39:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11730:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11685:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11685:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11678:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "11510:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11517:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11525:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11533:3:13",
														"type": ""
													}
												],
												"src": "11475:266:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12107:546:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12117:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12135:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12140:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12131:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12131:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12144:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12127:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12127:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12121:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12162:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12177:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12185:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12173:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12173:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12155:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12155:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12155:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12209:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12220:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12205:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12205:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12229:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12237:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12225:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12225:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12198:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12198:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12198:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12261:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12272:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12257:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12257:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12277:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12250:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12290:88:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12342:6:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12350:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12362:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12373:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12358:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12358:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "12304:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12304:74:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12294:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12398:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12409:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12394:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12394:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12418:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12426:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12414:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12387:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12387:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12387:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12446:75:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12498:6:13"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12506:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12514:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "12460:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12460:61:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "12450:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12541:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12552:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12537:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12537:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "12562:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12570:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12558:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12558:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12530:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12530:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12590:57:13",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "12624:6:13"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "12632:6:13"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "12640:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "12598:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12598:49:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12590:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_bytes_calldata_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12020:9:13",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "12031:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "12039:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12047:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12055:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12063:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12071:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12079:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12087:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12098:4:13",
														"type": ""
													}
												],
												"src": "11746:907:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12738:169:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12784:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12793:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12796:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12786:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12786:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12786:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12759:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12768:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12755:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12755:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12780:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12751:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12751:32:13"
															},
															"nodeType": "YulIf",
															"src": "12748:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12809:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12828:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12822:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12822:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12813:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12871:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "12847:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12847:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12847:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12886:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12896:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12886:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12704:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12715:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12727:6:13",
														"type": ""
													}
												],
												"src": "12658:249:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13086:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13103:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13114:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13096:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13096:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13096:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13137:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13148:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13133:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13153:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13126:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13126:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13176:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13187:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13172:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13172:18:13"
																	},
																	{
																		"hexValue": "554e534146455f524543495049454e54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13192:18:13",
																		"type": "",
																		"value": "UNSAFE_RECIPIENT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13165:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13165:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13165:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13220:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13232:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13243:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13228:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13228:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13220:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13063:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13077:4:13",
														"type": ""
													}
												],
												"src": "12912:340:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13431:180:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13448:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13459:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13441:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13441:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13441:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13482:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13493:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13478:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13478:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13498:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13471:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13471:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13471:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13521:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13532:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13517:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13517:18:13"
																	},
																	{
																		"hexValue": "544d50563132413a204e6f6e6578697374656e7420746f6b656e2049442e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13537:32:13",
																		"type": "",
																		"value": "TMPV12A: Nonexistent token ID."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13510:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13510:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13510:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13579:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13591:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13602:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13587:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13587:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13579:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b792b41c51bd0535eac8e7752c9be2a75fb5bec17b7104673496b74710fd9cf0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13408:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13422:4:13",
														"type": ""
													}
												],
												"src": "13257:354:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13790:233:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13807:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13818:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13800:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13800:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13841:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13852:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13837:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13837:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13857:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13830:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13830:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13830:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13880:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13891:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13876:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13876:18:13"
																	},
																	{
																		"hexValue": "544d50563132413a20416d6f756e74206973206c6172676572207468616e2074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13896:34:13",
																		"type": "",
																		"value": "TMPV12A: Amount is larger than t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13869:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13869:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13869:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13951:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13962:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13947:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13947:18:13"
																	},
																	{
																		"hexValue": "6f74616c537570706c792e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13967:13:13",
																		"type": "",
																		"value": "otalSupply."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13940:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13940:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13940:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13990:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14002:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14013:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13998:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13998:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13990:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_617cf2dffc4df0477a0f1acce806f689cfc6e415d9acac53e9f7bdbcde9c93be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13767:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13781:4:13",
														"type": ""
													}
												],
												"src": "13616:407:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14157:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14167:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14179:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14190:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14175:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14175:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14167:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14220:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14202:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14202:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14247:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14258:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14243:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14243:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14263:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14236:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14236:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14236:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14118:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14129:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14137:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14148:4:13",
														"type": ""
													}
												],
												"src": "14028:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14522:346:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14532:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14550:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14555:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14546:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14546:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14559:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14542:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14542:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14536:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14577:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14600:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14588:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14588:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14570:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14570:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14570:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14624:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14635:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14620:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14620:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14644:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14652:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14640:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14640:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14613:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14613:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14613:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14676:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14687:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14672:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14692:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14665:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14665:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14719:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14730:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14715:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14715:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14735:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14708:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14708:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14708:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14762:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14773:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14758:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14758:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14779:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14751:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14751:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14751:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14792:70:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14826:6:13"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "14834:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14857:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14842:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14842:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "14800:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14800:62:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14792:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14451:9:13",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "14462:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14470:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14478:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14486:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14494:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14502:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14513:4:13",
														"type": ""
													}
												],
												"src": "14281:587:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15047:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15064:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15075:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15057:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15057:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15057:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15098:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15109:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15094:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15094:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15114:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15087:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15087:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15087:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15137:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15148:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15133:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15153:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15126:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15126:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15208:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15219:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15204:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15204:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15224:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15197:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15197:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15197:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15242:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15254:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15265:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15250:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15250:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15242:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15024:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15038:4:13",
														"type": ""
													}
												],
												"src": "14873:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15511:330:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15521:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15539:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15544:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15535:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15535:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15548:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15531:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15531:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15525:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15566:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15581:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15589:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15577:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15577:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15559:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15559:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15559:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15613:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15624:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15609:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15609:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15633:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15641:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15629:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15629:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15602:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15602:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15602:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15665:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15676:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15661:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15661:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15681:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15654:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15654:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15708:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15719:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15704:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15704:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15724:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15697:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15697:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15697:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15751:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15762:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15747:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15747:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15768:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15740:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15740:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15740:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15781:54:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15807:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15819:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15830:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15815:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15815:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15789:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15789:46:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15781:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15448:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15459:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15467:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15475:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15483:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15491:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15502:4:13",
														"type": ""
													}
												],
												"src": "15280:561:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16020:169:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16037:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16048:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16030:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16030:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16071:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16082:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16067:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16067:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16087:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16060:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16060:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16060:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16110:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16121:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16106:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16106:18:13"
																	},
																	{
																		"hexValue": "4554485f5452414e534645525f4641494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16126:21:13",
																		"type": "",
																		"value": "ETH_TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16099:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16099:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16099:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16157:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16169:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16180:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16165:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16165:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16157:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15997:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16011:4:13",
														"type": ""
													}
												],
												"src": "15846:343:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_2, 0x20), _3)\n        mstore(add(add(memPtr, _3), 0x20), 0)\n        value0 := memPtr\n        value1 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"LENGTH_MISMATCH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NOT_AUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_array_uint256_dyn_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        if gt(length, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length_1 := shl(5, length)\n        calldatacopy(add(pos, 0x20), start, length_1)\n        let _1 := add(add(pos, length_1), 0x20)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn_calldata(value2, value3, tail_1)\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_bytes_calldata_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn_calldata(value2, value3, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn_calldata(value4, value5, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes_calldata(value6, value7, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"UNSAFE_RECIPIENT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b792b41c51bd0535eac8e7752c9be2a75fb5bec17b7104673496b74710fd9cf0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"TMPV12A: Nonexistent token ID.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_617cf2dffc4df0477a0f1acce806f689cfc6e415d9acac53e9f7bdbcde9c93be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"TMPV12A: Amount is larger than t\")\n        mstore(add(headStart, 96), \"otalSupply.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes_calldata(value4, value5, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH_TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2056": [
									{
										"length": 32,
										"start": 1270
									},
									{
										"length": 32,
										"start": 3191
									}
								],
								"2059": [
									{
										"length": 32,
										"start": 789
									},
									{
										"length": 32,
										"start": 2969
									}
								],
								"2062": [
									{
										"length": 32,
										"start": 1108
									},
									{
										"length": 32,
										"start": 1911
									}
								],
								"2065": [
									{
										"length": 32,
										"start": 1147
									},
									{
										"length": 32,
										"start": 2002
									}
								],
								"2068": [
									{
										"length": 32,
										"start": 951
									},
									{
										"length": 32,
										"start": 1878
									},
									{
										"length": 32,
										"start": 2817
									},
									{
										"length": 32,
										"start": 3227
									}
								],
								"2071": [
									{
										"length": 32,
										"start": 887
									},
									{
										"length": 32,
										"start": 1969
									},
									{
										"length": 32,
										"start": 2776
									},
									{
										"length": 32,
										"start": 2929
									},
									{
										"length": 32,
										"start": 3005
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e45760003560e01c806371d05aec1161010f578063cbf99084116100a2578063e985e9c511610071578063e985e9c51461049d578063f242432a146104cb578063f2fde38b146104de578063f48deaaa146104f157600080fd5b8063cbf990841461043f578063cc2851c614610447578063dec125ba1461044f578063df52fa841461047657600080fd5b80639fa3cda1116100de5780639fa3cda1146103d9578063a22cb465146103f9578063bd85b0391461040c578063c87b56dd1461042c57600080fd5b806371d05aec146103725780638da5cb5b1461039957806395d89b41146103aa5780639e3cf643146103b257600080fd5b80632eb2c2d611610187578063451149901161015657806345114990146103105780634e1273f4146103375780636817031b14610357578063715018a61461036a57600080fd5b80632eb2c2d6146102b7578063388b9fe0146102ca5780633ccfd60b146102dd578063430bf08a146102e557600080fd5b806309a3beef116101c357806309a3beef1461025c5780630b22f540146102715780630e89341c1461029157806316473cf7146102a457600080fd5b8062fdd58e146101e957806301ffc9a71461022457806306fdde0314610247575b600080fd5b6102116101f73660046114a5565b600060208181529281526040808220909352908152205481565b6040519081526020015b60405180910390f35b6102376102323660046114e5565b610518565b604051901515815260200161021b565b61024f61056a565b60405161021b9190611556565b61026f61026a36600461157f565b6105f8565b005b61021161027f366004611634565b60096020526000908152604090205481565b61024f61029f36600461164f565b61064f565b61026f6102b2366004611634565b610726565b61026f6102c53660046116f6565b610809565b61026f6102d83660046117b1565b610aac565b61026f610ccc565b6005546102f8906001600160a01b031681565b6040516001600160a01b03909116815260200161021b565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b61034a6103453660046117e4565b610d2c565b60405161021b9190611850565b61026f610365366004611634565b610e61565b61026f610ead565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b03166102f8565b61024f610ee1565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102116103e7366004611634565b60086020526000908152604090205481565b61026f610407366004611894565b610eee565b61021161041a36600461164f565b60009081526006602052604090205490565b61024f61043a36600461164f565b610f5a565b610211600181565b610211600281565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102376104ab3660046118d0565b600160209081526000928352604080842090915290825290205460ff1681565b61026f6104d9366004611903565b610f73565b61026f6104ec366004611634565b61116d565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b60006301ffc9a760e01b6001600160e01b0319831614806105495750636cdb3d1360e11b6001600160e01b03198316145b8061056457506303a24d0760e21b6001600160e01b03198316145b92915050565b600380546105779061197b565b80601f01602080910402602001604051908101604052809291908181526020018280546105a39061197b565b80156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b505050505081565b6002546001600160a01b0316331461062b5760405162461bcd60e51b8152600401610622906119b6565b60405180910390fd5b6000818152600760209081526040909120835161064a928501906113f0565b505050565b600081815260076020526040902080546060919061066c9061197b565b1515905061068857505060408051602081019091526000815290565b600082815260076020526040902080546106a19061197b565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd9061197b565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b50505050509050919050565b6002546001600160a01b031633146107505760405162461bcd60e51b8152600401610622906119b6565b6107ab817f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060405180602001604052806000815250611205565b610806817f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060405180602001604052806000815250611205565b50565b84831461084a5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610622565b336001600160a01b038916148061088457506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b6108c15760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610622565b60008060005b8781101561097c578888828181106108e1576108e16119eb565b9050602002013592508686828181106108fc576108fc6119eb565b6001600160a01b038e1660009081526020818152604080832089845282528220805493909102949094013595508593925090610939908490611a17565b90915550506001600160a01b038a166000908152602081815260408083208684529091528120805484929061096f908490611a2e565b90915550506001016108c7565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b6040516109d09493929190611a7c565b60405180910390a46001600160a01b0389163b15610a775760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610a249033908f908e908e908e908e908e908e90600401611ad7565b6020604051808303816000875af1158015610a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a679190611b3b565b6001600160e01b03191614610a84565b6001600160a01b03891615155b610aa05760405162461bcd60e51b815260040161062290611b58565b50505050505050505050565b6002546001600160a01b03163314610ad65760405162461bcd60e51b8152600401610622906119b6565b7f0000000000000000000000000000000000000000000000000000000000000000811480610b2357507f000000000000000000000000000000000000000000000000000000000000000081145b610b6f5760405162461bcd60e51b815260206004820152601e60248201527f544d50563132413a204e6f6e6578697374656e7420746f6b656e2049442e00006044820152606401610622565b7f0000000000000000000000000000000000000000000000000000000000000000811415610c75577f0000000000000000000000000000000000000000000000000000000000000000610bee7f000000000000000000000000000000000000000000000000000000000000000060009081526006602052604090205490565b610bf89084611a2e565b1115610c5a5760405162461bcd60e51b815260206004820152602b60248201527f544d50563132413a20416d6f756e74206973206c6172676572207468616e207460448201526a37ba30b629bab838363c9760a91b6064820152608401610622565b61064a83828460405180602001604052806000815250611205565b7f0000000000000000000000000000000000000000000000000000000000000000610bee7f000000000000000000000000000000000000000000000000000000000000000060009081526006602052604090205490565b6002546001600160a01b03163314610cf65760405162461bcd60e51b8152600401610622906119b6565b47610d145760405163150111e760e31b815260040160405180910390fd5b600554610d2a906001600160a01b03164761134d565b565b6060838214610d6f5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610622565b8367ffffffffffffffff811115610d8857610d88611569565b604051908082528060200260200182016040528015610db1578160200160208202803683370190505b50905060005b84811015610e5857600080878784818110610dd457610dd46119eb565b9050602002016020810190610de99190611634565b6001600160a01b03166001600160a01b031681526020019081526020016000206000858584818110610e1d57610e1d6119eb565b90506020020135815260200190815260200160002054828281518110610e4557610e456119eb565b6020908102919091010152600101610db7565b50949350505050565b6002546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401610622906119b6565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610ed75760405162461bcd60e51b8152600401610622906119b6565b610d2a600061139e565b600480546105779061197b565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600760205260009081526040902080546105779061197b565b336001600160a01b0387161480610fad57506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b610fea5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610622565b6001600160a01b0386166000908152602081815260408083208784529091528120805485929061101b908490611a17565b90915550506001600160a01b03851660009081526020818152604080832087845290915281208054859290611051908490611a2e565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b1561113c5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906110e99033908b908a908a908a908a90600401611b82565b6020604051808303816000875af1158015611108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112c9190611b3b565b6001600160e01b03191614611149565b6001600160a01b03851615155b6111655760405162461bcd60e51b815260040161062290611b58565b505050505050565b6002546001600160a01b031633146111975760405162461bcd60e51b8152600401610622906119b6565b6001600160a01b0381166111fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610622565b6108068161139e565b6001600160a01b03841660009081526020818152604080832086845290915281208054849290611236908490611a2e565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b1561131e5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906112cb903390600090899089908990600401611bc9565b6020604051808303816000875af11580156112ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130e9190611b3b565b6001600160e01b0319161461132b565b6001600160a01b03841615155b6113475760405162461bcd60e51b815260040161062290611b58565b50505050565b600080600080600085875af190508061064a5760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606401610622565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546113fc9061197b565b90600052602060002090601f01602090048101928261141e5760008555611464565b82601f1061143757805160ff1916838001178555611464565b82800160010185558215611464579182015b82811115611464578251825591602001919060010190611449565b50611470929150611474565b5090565b5b808211156114705760008155600101611475565b80356001600160a01b03811681146114a057600080fd5b919050565b600080604083850312156114b857600080fd5b6114c183611489565b946020939093013593505050565b6001600160e01b03198116811461080657600080fd5b6000602082840312156114f757600080fd5b8135611502816114cf565b9392505050565b6000815180845260005b8181101561152f57602081850181015186830182015201611513565b81811115611541576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006115026020830184611509565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561159257600080fd5b823567ffffffffffffffff808211156115aa57600080fd5b818501915085601f8301126115be57600080fd5b8135818111156115d0576115d0611569565b604051601f8201601f19908116603f011681019083821181831017156115f8576115f8611569565b8160405282815288602084870101111561161157600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b60006020828403121561164657600080fd5b61150282611489565b60006020828403121561166157600080fd5b5035919050565b60008083601f84011261167a57600080fd5b50813567ffffffffffffffff81111561169257600080fd5b6020830191508360208260051b85010111156116ad57600080fd5b9250929050565b60008083601f8401126116c657600080fd5b50813567ffffffffffffffff8111156116de57600080fd5b6020830191508360208285010111156116ad57600080fd5b60008060008060008060008060a0898b03121561171257600080fd5b61171b89611489565b975061172960208a01611489565b9650604089013567ffffffffffffffff8082111561174657600080fd5b6117528c838d01611668565b909850965060608b013591508082111561176b57600080fd5b6117778c838d01611668565b909650945060808b013591508082111561179057600080fd5b5061179d8b828c016116b4565b999c989b5096995094979396929594505050565b6000806000606084860312156117c657600080fd5b6117cf84611489565b95602085013595506040909401359392505050565b600080600080604085870312156117fa57600080fd5b843567ffffffffffffffff8082111561181257600080fd5b61181e88838901611668565b9096509450602087013591508082111561183757600080fd5b5061184487828801611668565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156118885783518352928401929184019160010161186c565b50909695505050505050565b600080604083850312156118a757600080fd5b6118b083611489565b9150602083013580151581146118c557600080fd5b809150509250929050565b600080604083850312156118e357600080fd5b6118ec83611489565b91506118fa60208401611489565b90509250929050565b60008060008060008060a0878903121561191c57600080fd5b61192587611489565b955061193360208801611489565b94506040870135935060608701359250608087013567ffffffffffffffff81111561195d57600080fd5b61196989828a016116b4565b979a9699509497509295939492505050565b600181811c9082168061198f57607f821691505b602082108114156119b057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611a2957611a29611a01565b500390565b60008219821115611a4157611a41611a01565b500190565b81835260006001600160fb1b03831115611a5f57600080fd5b8260051b8083602087013760009401602001938452509192915050565b604081526000611a90604083018688611a46565b8281036020840152611aa3818587611a46565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090611b04908301888a611a46565b8281036060840152611b17818789611a46565b90508281036080840152611b2c818587611aae565b9b9a5050505050505050505050565b600060208284031215611b4d57600080fd5b8151611502816114cf565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a060808201819052600090611bbd9083018486611aae565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611aa39083018461150956fea26469706673582212204a740a2d2425e6cdf9f9e2a669314faefedc3a0f2a644a6dc489b9cfb57a9f6c64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71D05AEC GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCBF99084 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xF48DEAAA EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBF99084 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xCC2851C6 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xDEC125BA EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xDF52FA84 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FA3CDA1 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9FA3CDA1 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71D05AEC EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x9E3CF643 EQ PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x45114990 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x45114990 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x388B9FE0 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A3BEEF GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x9A3BEEF EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xB22F540 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x16473CF7 EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x211 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21B JUMP JUMPDEST PUSH2 0x24F PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F6 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x26F PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2F8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21B JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x34A PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x26F PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x24F PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x211 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x164F JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x211 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1903 JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x116D JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x549 JUMPI POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x564 JUMPI POP PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A3 SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x64A SWAP3 DUP6 ADD SWAP1 PUSH2 0x13F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x66C SWAP1 PUSH2 0x197B JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x688 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CD SWAP1 PUSH2 0x197B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1205 JUMP JUMPDEST POP JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x988A9C8EA890BE9A92A69A82A8869 PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EQ DUP1 PUSH2 0x884 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x97C JUMPI DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0x8E1 JUMPI PUSH2 0x8E1 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP3 POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x8FC JUMPI PUSH2 0x8FC PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE DUP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP4 SWAP1 SWAP2 MUL SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP6 POP DUP6 SWAP4 SWAP3 POP SWAP1 PUSH2 0x939 SWAP1 DUP5 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x96F SWAP1 DUP5 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x8C7 JUMP JUMPDEST POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EXTCODESIZE ISZERO PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA24 SWAP1 CALLER SWAP1 DUP16 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO ISZERO JUMPDEST PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH32 0x0 DUP2 EQ DUP1 PUSH2 0xB23 JUMPI POP PUSH32 0x0 DUP2 EQ JUMPDEST PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544D50563132413A204E6F6E6578697374656E7420746F6B656E2049442E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0xC75 JUMPI PUSH32 0x0 PUSH2 0xBEE PUSH32 0x0 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBF8 SWAP1 DUP5 PUSH2 0x1A2E JUMP JUMPDEST GT ISZERO PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544D50563132413A20416D6F756E74206973206C6172676572207468616E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x37BA30B629BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x622 JUMP JUMPDEST PUSH2 0x64A DUP4 DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1205 JUMP JUMPDEST PUSH32 0x0 PUSH2 0xBEE PUSH32 0x0 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST SELFBALANCE PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x150111E7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xD2A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFBALANCE PUSH2 0x134D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP4 DUP3 EQ PUSH2 0xD6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x988A9C8EA890BE9A92A69A82A8869 PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDB1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xDD4 JUMPI PUSH2 0xDD4 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xE1D JUMPI PUSH2 0xE1D PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xDB7 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0xD2A PUSH1 0x0 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x197B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x197B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0xFAD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xFEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x101B SWAP1 DUP5 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1051 SWAP1 DUP5 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 SWAP1 DUP10 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE ISZERO PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x10E9 SWAP1 CALLER SWAP1 DUP12 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x622 JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1236 SWAP1 DUP5 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x131E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x12CB SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x132B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x622 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x13FC SWAP1 PUSH2 0x197B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x141E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1464 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1437 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1464 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1464 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1464 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1449 JUMP JUMPDEST POP PUSH2 0x1470 SWAP3 SWAP2 POP PUSH2 0x1474 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1475 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C1 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1502 DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x152F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1513 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1541 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1502 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1509 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15D0 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F8 PUSH2 0x1569 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1502 DUP3 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171B DUP10 PUSH2 0x1489 JUMP JUMPDEST SWAP8 POP PUSH2 0x1729 PUSH1 0x20 DUP11 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1752 DUP13 DUP4 DUP14 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1777 DUP13 DUP4 DUP14 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179D DUP12 DUP3 DUP13 ADD PUSH2 0x16B4 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CF DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x181E DUP9 DUP4 DUP10 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1844 DUP8 DUP3 DUP9 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1888 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x186C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B0 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP PUSH2 0x18FA PUSH1 0x20 DUP5 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x191C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1925 DUP8 PUSH2 0x1489 JUMP JUMPDEST SWAP6 POP PUSH2 0x1933 PUSH1 0x20 DUP9 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1969 DUP10 DUP3 DUP11 ADD PUSH2 0x16B4 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x198F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x19B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1A29 JUMPI PUSH2 0x1A29 PUSH2 0x1A01 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A41 PUSH2 0x1A01 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY PUSH1 0x0 SWAP5 ADD PUSH1 0x20 ADD SWAP4 DUP5 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A90 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x1A46 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AA3 DUP2 DUP6 DUP8 PUSH2 0x1A46 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1B04 SWAP1 DUP4 ADD DUP9 DUP11 PUSH2 0x1A46 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1B17 DUP2 DUP8 DUP10 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1B2C DUP2 DUP6 DUP8 PUSH2 0x1AAE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1502 DUP2 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x155394D0519157D49150D25412515395 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BBD SWAP1 DUP4 ADD DUP5 DUP7 PUSH2 0x1AAE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AA3 SWAP1 DUP4 ADD DUP5 PUSH2 0x1509 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A PUSH21 0xA2D2425E6CDF9F9E2A669314FAEFEDC3A0F2A644A PUSH14 0xC489B9CFB57A9F6C64736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "502:5553:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:64:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:13;;;585:2;570:18;1116:64:8;;;;;;;;4603:340;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:13;;1177:22;1159:41;;1147:2;1132:18;4603:340:8;1019:187:13;737:18:12;;;:::i;:::-;;;;;;;:::i;3356:144::-;;;;;;:::i;:::-;;:::i;:::-;;1845:58;;;;;;:::i;:::-;;;;;;;;;;;;;;5797:254;;;;;;:::i;:::-;;:::i;3595:285::-;;;;;;:::i;:::-;;:::i;2617:1209:8:-;;;;;;:::i;:::-;;:::i;4202:847:12:-;;;;;;:::i;:::-;;:::i;5311:185::-;;;:::i;787:27::-;;;;;-1:-1:-1;;;;;787:27:12;;;;;;-1:-1:-1;;;;;5856:32:13;;;5838:51;;5826:2;5811:18;787:27:12;5692:203:13;1065:59:12;;;;;3832:583:8;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5594:103:12:-;;;;;;:::i;:::-;;:::i;1689:101:10:-;;;:::i;1336:55:12:-;;;;;1057:85:10;1129:6;;-1:-1:-1;;;;;1129:6:10;1057:85;;761:20:12;;;:::i;1274:56::-;;;;;1782:57;;;;;;:::i;:::-;;;;;;;;;;;;;;1703:203:8;;;;;;:::i;:::-;;:::i;2890:111:12:-;;;;;;:::i;:::-;2952:7;2978:16;;;:12;:16;;;;;;;2890:111;1734:42;;;;;;:::i;:::-;;:::i;1397:48::-;;1444:1;1397:48;;1451:47;;1497:1;1451:47;;1130:66;;;;;1202:65;;;;;1187:68:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:699;;;;;;:::i;:::-;;:::i;1939:198:10:-;;;;;;:::i;:::-;;:::i;999:60:12:-;;;;;4603:340:8;4679:4;-1:-1:-1;;;;;;;;;4714:25:8;;;;:100;;-1:-1:-1;;;;;;;;;;4789:25:8;;;4714:100;:176;;;-1:-1:-1;;;;;;;;;;4865:25:8;;;4714:176;4695:195;4603:340;-1:-1:-1;;4603:340:8:o;737:18:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3356:144::-;1129:6:10;;-1:-1:-1;;;;;1129:6:10;719:10:3;1269:23:10;1261:68;;;;-1:-1:-1;;;1261:68:10;;;;;;;:::i;:::-;;;;;;;;;3461:17:12::1;::::0;;;:8:::1;:17;::::0;;;;;;;:32;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;3356:144:::0;;:::o;5797:254::-;5944:17;;;;:8;:17;;;;;5938:31;;5905:13;;5944:17;5938:31;;;:::i;:::-;:36;5934:76;;-1:-1:-1;5934:76:12;;-1:-1:-1;;5990:9:12;;;;;;;;;-1:-1:-1;5990:9:12;;;5797:254::o;5934:76::-;6027:17;;;;:8;:17;;;;;6020:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5797:254;;;:::o;3595:285::-;1129:6:10;;-1:-1:-1;;;;;1129:6:10;719:10:3;1269:23:10;1261:68;;;;-1:-1:-1;;;1261:68:10;;;;;;;:::i;:::-;3681:80:12::1;3687:2;3691:27;3720:36;3681:80;;;;;;;;;;;::::0;:5:::1;:80::i;:::-;3795:78;3801:2;3805:26;3833:35;3795:78;;;;;;;;;;;::::0;:5:::1;:78::i;:::-;3595:285:::0;:::o;2617:1209:8:-;2826:28;;;2818:56;;;;-1:-1:-1;;;2818:56:8;;9580:2:13;2818:56:8;;;9562:21:13;9619:2;9599:18;;;9592:30;-1:-1:-1;;;9638:18:13;;;9631:45;9693:18;;2818:56:8;9378:339:13;2818:56:8;2893:10;-1:-1:-1;;;;;2893:18:8;;;;:56;;-1:-1:-1;;;;;;2915:22:8;;;;;;:16;:22;;;;;;;;2938:10;2915:34;;;;;;;;;;2893:56;2885:83;;;;-1:-1:-1;;;2885:83:8;;9924:2:13;2885:83:8;;;9906:21:13;9963:2;9943:18;;;9936:30;-1:-1:-1;;;9982:18:13;;;9975:44;10036:18;;2885:83:8;9722:338:13;2885:83:8;3050:10;3070:14;3100:9;3095:352;3115:14;;;3095:352;;;3152:3;;3156:1;3152:6;;;;;;;:::i;:::-;;;;;;;3147:11;;3181:7;;3189:1;3181:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;3206:15:8;;:9;:15;;;3181:10;3206:15;;;;;;;:19;;;;;;;:29;;3181:10;;;;;;;;;;-1:-1:-1;3181:10:8;;3206:19;-1:-1:-1;3206:9:8;:29;;3181:10;;3206:29;:::i;:::-;;;;-1:-1:-1;;;;;;;3249:13:8;;:9;:13;;;;;;;;;;;:17;;;;;;;;:27;;3270:6;;3249:9;:27;;3270:6;;3249:27;:::i;:::-;;;;-1:-1:-1;;3419:3:8;;3095:352;;;;3494:2;-1:-1:-1;;;;;3462:49:8;3488:4;-1:-1:-1;;;;;3462:49:8;3476:10;-1:-1:-1;;;;;3462:49:8;;3498:3;;3503:7;;3462:49;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3543:14:8;;;:19;:234;;3616:85;;-1:-1:-1;;;3616:85:8;;;3725:52;-1:-1:-1;;;;;3616:47:8;;;3725:52;;3616:85;;3664:10;;3676:4;;3682:3;;;;3687:7;;;;3696:4;;;;3616:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3616:161:8;;3543:234;;;-1:-1:-1;;;;;3581:16:8;;;;3543:234;3522:297;;;;-1:-1:-1;;;3522:297:8;;;;;;;:::i;:::-;2808:1018;;2617:1209;;;;;;;;:::o;4202:847:12:-;1129:6:10;;-1:-1:-1;;;;;1129:6:10;719:10:3;1269:23:10;1261:68;;;;-1:-1:-1;;;1261:68:10;;;;;;;:::i;:::-;4355:26:12::1;4344:7;:37;:79;;;;4396:27;4385:7;:38;4344:79;4323:156;;;::::0;-1:-1:-1;;;4323:156:12;;13459:2:13;4323:156:12::1;::::0;::::1;13441:21:13::0;13498:2;13478:18;;;13471:30;13537:32;13517:18;;;13510:60;13587:18;;4323:156:12::1;13257:354:13::0;4323:156:12::1;4505:26;4494:7;:37;4490:553;;;4624:28;4581:39;4593:26;2952:7:::0;2978:16;;;:12;:16;;;;;;;2890:111;4581:39:::1;4572:48;::::0;:6;:48:::1;:::i;:::-;:80;;4547:182;;;::::0;-1:-1:-1;;;4547:182:12;;13818:2:13;4547:182:12::1;::::0;::::1;13800:21:13::0;13857:2;13837:18;;;13830:30;13896:34;13876:18;;;13869:62;-1:-1:-1;;;13947:18:13;;;13940:41;13998:19;;4547:182:12::1;13616:407:13::0;4547:182:12::1;4743:30;4749:2;4753:7;4762:6;4743:30;;;;;;;;;;;::::0;:5:::1;:30::i;4490:553::-;4882:29;4838:40;4850:27;2952:7:::0;2978:16;;;:12;:16;;;;;;;2890:111;5311:185;1129:6:10;;-1:-1:-1;;;;;1129:6:10;719:10:3;1269:23:10;1261:68;;;;-1:-1:-1;;;1261:68:10;;;;;;;:::i;:::-;5362:21:12::1;5358:53;;5397:14;;-1:-1:-1::0;;;5397:14:12::1;;;;;;;;;;;5358:53;5453:12;::::0;5421:68:::1;::::0;-1:-1:-1;;;;;5453:12:12::1;5467:21;5421:31;:68::i;:::-;5311:185::o:0;3832:583:8:-;3968:25;4017:27;;;4009:55;;;;-1:-1:-1;;;4009:55:8;;9580:2:13;4009:55:8;;;9562:21:13;9619:2;9599:18;;;9592:30;-1:-1:-1;;;9638:18:13;;;9631:45;9693:18;;4009:55:8;9378:339:13;4009:55:8;4100:6;4086:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4086:28:8;;4075:39;;4285:9;4280:119;4300:17;;;4280:119;;;4356:9;:20;4366:6;;4373:1;4366:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4356:20:8;-1:-1:-1;;;;;4356:20:8;;;;;;;;;;;;:28;4377:3;;4381:1;4377:6;;;;;;;:::i;:::-;;;;;;;4356:28;;;;;;;;;;;;4342:8;4351:1;4342:11;;;;;;;;:::i;:::-;;;;;;;;;;:42;4319:3;;4280:119;;;;3832:583;;;;;;:::o;5594:103:12:-;1129:6:10;;-1:-1:-1;;;;;1129:6:10;719:10:3;1269:23:10;1261:68;;;;-1:-1:-1;;;1261:68:10;;;;;;;:::i;:::-;5662:12:12::1;:28:::0;;-1:-1:-1;;;;;;5662:28:12::1;-1:-1:-1::0;;;;;5662:28:12;;;::::1;::::0;;;::::1;::::0;;5594:103::o;1689:101:10:-;1129:6;;-1:-1:-1;;;;;1129:6:10;719:10:3;1269:23:10;1261:68;;;;-1:-1:-1;;;1261:68:10;;;;;;;:::i;:::-;1753:30:::1;1780:1;1753:18;:30::i;761:20:12:-:0;;;;;;;:::i;1703:203:8:-;1805:10;1788:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;1788:38:8;;;;;;;;;;;;:49;;-1:-1:-1;;1788:49:8;;;;;;;;;;1853:46;;1159:41:13;;;1788:38:8;;1805:10;1853:46;;1132:18:13;1853:46:8;;;;;;;1703:203;;:::o;1734:42:12:-;;;;;;;;;;;;;;;;:::i;1912:699:8:-;2092:10;-1:-1:-1;;;;;2092:18:8;;;;:56;;-1:-1:-1;;;;;;2114:22:8;;;;;;:16;:22;;;;;;;;2137:10;2114:34;;;;;;;;;;2092:56;2084:83;;;;-1:-1:-1;;;2084:83:8;;9924:2:13;2084:83:8;;;9906:21:13;9963:2;9943:18;;;9936:30;-1:-1:-1;;;9982:18:13;;;9975:44;10036:18;;2084:83:8;9722:338:13;2084:83:8;-1:-1:-1;;;;;2178:15:8;;:9;:15;;;;;;;;;;;:19;;;;;;;;:29;;2201:6;;2178:9;:29;;2201:6;;2178:29;:::i;:::-;;;;-1:-1:-1;;;;;;;2217:13:8;;:9;:13;;;;;;;;;;;:17;;;;;;;;:27;;2238:6;;2217:9;:27;;2238:6;;2217:27;:::i;:::-;;;;-1:-1:-1;;2260:48:8;;;14202:25:13;;;14258:2;14243:18;;14236:34;;;-1:-1:-1;;;;;2260:48:8;;;;;;;;2275:10;;2260:48;;14175:18:13;2260:48:8;;;;;;;-1:-1:-1;;;;;2340:14:8;;;:19;:222;;2413:78;;-1:-1:-1;;;2413:78:8;;;2515:47;-1:-1:-1;;;;;2413:42:8;;;2515:47;;2413:78;;2456:10;;2468:4;;2474:2;;2478:6;;2486:4;;;;2413:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2413:149:8;;2340:222;;;-1:-1:-1;;;;;2378:16:8;;;;2340:222;2319:285;;;;-1:-1:-1;;;2319:285:8;;;;;;;:::i;:::-;1912:699;;;;;;:::o;1939:198:10:-;1129:6;;-1:-1:-1;;;;;1129:6:10;719:10:3;1269:23:10;1261:68;;;;-1:-1:-1;;;1261:68:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;2027:22:10;::::1;2019:73;;;::::0;-1:-1:-1;;;2019:73:10;;15075:2:13;2019:73:10::1;::::0;::::1;15057:21:13::0;15114:2;15094:18;;;15087:30;15153:34;15133:18;;;15126:62;-1:-1:-1;;;15204:18:13;;;15197:36;15250:19;;2019:73:10::1;14873:402:13::0;2019:73:10::1;2102:28;2121:8;2102:18;:28::i;5137:545:8:-:0;-1:-1:-1;;;;;5276:13:8;;:9;:13;;;;;;;;;;;:17;;;;;;;;:27;;5297:6;;5276:9;:27;;5297:6;;5276:27;:::i;:::-;;;;-1:-1:-1;;5319:54:8;;;14202:25:13;;;14258:2;14243:18;;14236:34;;;-1:-1:-1;;;;;5319:54:8;;;5354:1;;5334:10;;5319:54;;14175:18:13;5319:54:8;;;;;;;-1:-1:-1;;;;;5405:14:8;;;:19;:228;;5478:84;;-1:-1:-1;;;5478:84:8;;;5586:47;-1:-1:-1;;;;;5478:42:8;;;5586:47;;5478:84;;5521:10;;5541:1;;5545:2;;5549:6;;5557:4;;5478:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5478:155:8;;5405:228;;;-1:-1:-1;;;;;5443:16:8;;;;5405:228;5384:291;;;;-1:-1:-1;;;5384:291:8;;;;;;;:::i;:::-;5137:545;;;;:::o;831:296:11:-;903:12;1059:1;1056;1053;1050;1042:6;1038:2;1031:5;1026:35;1015:46;;1089:7;1081:39;;;;-1:-1:-1;;;1081:39:11;;16048:2:13;1081:39:11;;;16030:21:13;16087:2;16067:18;;;16060:30;-1:-1:-1;;;16106:18:13;;;16099:49;16165:18;;1081:39:11;15846:343:13;2291:187:10;2383:6;;;-1:-1:-1;;;;;2399:17:10;;;-1:-1:-1;;;;;;2399:17:10;;;;;;;2431:40;;2383:6;;;2399:17;2383:6;;2431:40;;2364:16;;2431:40;2354:124;2291:187;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:13;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:13:o;633:131::-;-1:-1:-1;;;;;;707:32:13;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:13:o;1211:472::-;1253:3;1291:5;1285:12;1318:6;1313:3;1306:19;1343:1;1353:162;1367:6;1364:1;1361:13;1353:162;;;1429:4;1485:13;;;1481:22;;1475:29;1457:11;;;1453:20;;1446:59;1382:12;1353:162;;;1533:6;1530:1;1527:13;1524:87;;;1599:1;1592:4;1583:6;1578:3;1574:16;1570:27;1563:38;1524:87;-1:-1:-1;1665:2:13;1644:15;-1:-1:-1;;1640:29:13;1631:39;;;;1672:4;1627:50;;1211:472;-1:-1:-1;;1211:472:13:o;1688:220::-;1837:2;1826:9;1819:21;1800:4;1857:45;1898:2;1887:9;1883:18;1875:6;1857:45;:::i;1913:127::-;1974:10;1969:3;1965:20;1962:1;1955:31;2005:4;2002:1;1995:15;2029:4;2026:1;2019:15;2045:1000;2123:6;2131;2184:2;2172:9;2163:7;2159:23;2155:32;2152:52;;;2200:1;2197;2190:12;2152:52;2240:9;2227:23;2269:18;2310:2;2302:6;2299:14;2296:34;;;2326:1;2323;2316:12;2296:34;2364:6;2353:9;2349:22;2339:32;;2409:7;2402:4;2398:2;2394:13;2390:27;2380:55;;2431:1;2428;2421:12;2380:55;2467:2;2454:16;2489:2;2485;2482:10;2479:36;;;2495:18;;:::i;:::-;2570:2;2564:9;2538:2;2624:13;;-1:-1:-1;;2620:22:13;;;2644:2;2616:31;2612:40;2600:53;;;2668:18;;;2688:22;;;2665:46;2662:72;;;2714:18;;:::i;:::-;2754:10;2750:2;2743:22;2789:2;2781:6;2774:18;2831:7;2824:4;2819:2;2815;2811:11;2807:22;2804:35;2801:55;;;2852:1;2849;2842:12;2801:55;2912:2;2905:4;2901:2;2897:13;2890:4;2882:6;2878:17;2865:50;2959:1;2952:4;2935:15;;;2931:26;;2924:37;2935:15;3018:20;;;;3005:34;;-1:-1:-1;;;;;;2045:1000:13:o;3050:186::-;3109:6;3162:2;3150:9;3141:7;3137:23;3133:32;3130:52;;;3178:1;3175;3168:12;3130:52;3201:29;3220:9;3201:29;:::i;3241:180::-;3300:6;3353:2;3341:9;3332:7;3328:23;3324:32;3321:52;;;3369:1;3366;3359:12;3321:52;-1:-1:-1;3392:23:13;;3241:180;-1:-1:-1;3241:180:13:o;3426:367::-;3489:8;3499:6;3553:3;3546:4;3538:6;3534:17;3530:27;3520:55;;3571:1;3568;3561:12;3520:55;-1:-1:-1;3594:20:13;;3637:18;3626:30;;3623:50;;;3669:1;3666;3659:12;3623:50;3706:4;3698:6;3694:17;3682:29;;3766:3;3759:4;3749:6;3746:1;3742:14;3734:6;3730:27;3726:38;3723:47;3720:67;;;3783:1;3780;3773:12;3720:67;3426:367;;;;;:::o;3798:347::-;3849:8;3859:6;3913:3;3906:4;3898:6;3894:17;3890:27;3880:55;;3931:1;3928;3921:12;3880:55;-1:-1:-1;3954:20:13;;3997:18;3986:30;;3983:50;;;4029:1;4026;4019:12;3983:50;4066:4;4058:6;4054:17;4042:29;;4118:3;4111:4;4102:6;4094;4090:19;4086:30;4083:39;4080:59;;;4135:1;4132;4125:12;4150:1210;4310:6;4318;4326;4334;4342;4350;4358;4366;4419:3;4407:9;4398:7;4394:23;4390:33;4387:53;;;4436:1;4433;4426:12;4387:53;4459:29;4478:9;4459:29;:::i;:::-;4449:39;;4507:38;4541:2;4530:9;4526:18;4507:38;:::i;:::-;4497:48;;4596:2;4585:9;4581:18;4568:32;4619:18;4660:2;4652:6;4649:14;4646:34;;;4676:1;4673;4666:12;4646:34;4715:70;4777:7;4768:6;4757:9;4753:22;4715:70;:::i;:::-;4804:8;;-1:-1:-1;4689:96:13;-1:-1:-1;4892:2:13;4877:18;;4864:32;;-1:-1:-1;4908:16:13;;;4905:36;;;4937:1;4934;4927:12;4905:36;4976:72;5040:7;5029:8;5018:9;5014:24;4976:72;:::i;:::-;5067:8;;-1:-1:-1;4950:98:13;-1:-1:-1;5155:3:13;5140:19;;5127:33;;-1:-1:-1;5172:16:13;;;5169:36;;;5201:1;5198;5191:12;5169:36;;5240:60;5292:7;5281:8;5270:9;5266:24;5240:60;:::i;:::-;4150:1210;;;;-1:-1:-1;4150:1210:13;;-1:-1:-1;4150:1210:13;;;;;;5319:8;-1:-1:-1;;;4150:1210:13:o;5365:322::-;5442:6;5450;5458;5511:2;5499:9;5490:7;5486:23;5482:32;5479:52;;;5527:1;5524;5517:12;5479:52;5550:29;5569:9;5550:29;:::i;:::-;5540:39;5626:2;5611:18;;5598:32;;-1:-1:-1;5677:2:13;5662:18;;;5649:32;;5365:322;-1:-1:-1;;;5365:322:13:o;5900:773::-;6022:6;6030;6038;6046;6099:2;6087:9;6078:7;6074:23;6070:32;6067:52;;;6115:1;6112;6105:12;6067:52;6155:9;6142:23;6184:18;6225:2;6217:6;6214:14;6211:34;;;6241:1;6238;6231:12;6211:34;6280:70;6342:7;6333:6;6322:9;6318:22;6280:70;:::i;:::-;6369:8;;-1:-1:-1;6254:96:13;-1:-1:-1;6457:2:13;6442:18;;6429:32;;-1:-1:-1;6473:16:13;;;6470:36;;;6502:1;6499;6492:12;6470:36;;6541:72;6605:7;6594:8;6583:9;6579:24;6541:72;:::i;:::-;5900:773;;;;-1:-1:-1;6632:8:13;-1:-1:-1;;;;5900:773:13:o;6678:632::-;6849:2;6901:21;;;6971:13;;6874:18;;;6993:22;;;6820:4;;6849:2;7072:15;;;;7046:2;7031:18;;;6820:4;7115:169;7129:6;7126:1;7123:13;7115:169;;;7190:13;;7178:26;;7259:15;;;;7224:12;;;;7151:1;7144:9;7115:169;;;-1:-1:-1;7301:3:13;;6678:632;-1:-1:-1;;;;;;6678:632:13:o;7315:347::-;7380:6;7388;7441:2;7429:9;7420:7;7416:23;7412:32;7409:52;;;7457:1;7454;7447:12;7409:52;7480:29;7499:9;7480:29;:::i;:::-;7470:39;;7559:2;7548:9;7544:18;7531:32;7606:5;7599:13;7592:21;7585:5;7582:32;7572:60;;7628:1;7625;7618:12;7572:60;7651:5;7641:15;;;7315:347;;;;;:::o;7667:260::-;7735:6;7743;7796:2;7784:9;7775:7;7771:23;7767:32;7764:52;;;7812:1;7809;7802:12;7764:52;7835:29;7854:9;7835:29;:::i;:::-;7825:39;;7883:38;7917:2;7906:9;7902:18;7883:38;:::i;:::-;7873:48;;7667:260;;;;;:::o;7932:695::-;8038:6;8046;8054;8062;8070;8078;8131:3;8119:9;8110:7;8106:23;8102:33;8099:53;;;8148:1;8145;8138:12;8099:53;8171:29;8190:9;8171:29;:::i;:::-;8161:39;;8219:38;8253:2;8242:9;8238:18;8219:38;:::i;:::-;8209:48;;8304:2;8293:9;8289:18;8276:32;8266:42;;8355:2;8344:9;8340:18;8327:32;8317:42;;8410:3;8399:9;8395:19;8382:33;8438:18;8430:6;8427:30;8424:50;;;8470:1;8467;8460:12;8424:50;8509:58;8559:7;8550:6;8539:9;8535:22;8509:58;:::i;:::-;7932:695;;;;-1:-1:-1;7932:695:13;;-1:-1:-1;7932:695:13;;8586:8;;7932:695;-1:-1:-1;;;7932:695:13:o;8632:380::-;8711:1;8707:12;;;;8754;;;8775:61;;8829:4;8821:6;8817:17;8807:27;;8775:61;8882:2;8874:6;8871:14;8851:18;8848:38;8845:161;;;8928:10;8923:3;8919:20;8916:1;8909:31;8963:4;8960:1;8953:15;8991:4;8988:1;8981:15;8845:161;;8632:380;;;:::o;9017:356::-;9219:2;9201:21;;;9238:18;;;9231:30;9297:34;9292:2;9277:18;;9270:62;9364:2;9349:18;;9017:356::o;10065:127::-;10126:10;10121:3;10117:20;10114:1;10107:31;10157:4;10154:1;10147:15;10181:4;10178:1;10171:15;10197:127;10258:10;10253:3;10249:20;10246:1;10239:31;10289:4;10286:1;10279:15;10313:4;10310:1;10303:15;10329:125;10369:4;10397:1;10394;10391:8;10388:34;;;10402:18;;:::i;:::-;-1:-1:-1;10439:9:13;;10329:125::o;10459:128::-;10499:3;10530:1;10526:6;10523:1;10520:13;10517:39;;;10536:18;;:::i;:::-;-1:-1:-1;10572:9:13;;10459:128::o;10592:354::-;10680:19;;;10662:3;-1:-1:-1;;;;;10711:31:13;;10708:51;;;10755:1;10752;10745:12;10708:51;10791:6;10788:1;10784:14;10843:8;10836:5;10829:4;10824:3;10820:14;10807:45;10920:1;10875:18;;10895:4;10871:29;10909:13;;;-1:-1:-1;10871:29:13;;10592:354;-1:-1:-1;;10592:354:13:o;10951:519::-;11228:2;11217:9;11210:21;11191:4;11254:73;11323:2;11312:9;11308:18;11300:6;11292;11254:73;:::i;:::-;11375:9;11367:6;11363:22;11358:2;11347:9;11343:18;11336:50;11403:61;11457:6;11449;11441;11403:61;:::i;:::-;11395:69;10951:519;-1:-1:-1;;;;;;;10951:519:13:o;11475:266::-;11563:6;11558:3;11551:19;11615:6;11608:5;11601:4;11596:3;11592:14;11579:43;-1:-1:-1;11667:1:13;11642:16;;;11660:4;11638:27;;;11631:38;;;;11723:2;11702:15;;;-1:-1:-1;;11698:29:13;11689:39;;;11685:50;;11475:266::o;11746:907::-;-1:-1:-1;;;;;12173:15:13;;;12155:34;;12225:15;;12220:2;12205:18;;12198:43;12135:3;12272:2;12257:18;;12250:31;;;12098:4;;12304:74;;12358:19;;12350:6;12342;12304:74;:::i;:::-;12426:9;12418:6;12414:22;12409:2;12398:9;12394:18;12387:50;12460:61;12514:6;12506;12498;12460:61;:::i;:::-;12446:75;;12570:9;12562:6;12558:22;12552:3;12541:9;12537:19;12530:51;12598:49;12640:6;12632;12624;12598:49;:::i;:::-;12590:57;11746:907;-1:-1:-1;;;;;;;;;;;11746:907:13:o;12658:249::-;12727:6;12780:2;12768:9;12759:7;12755:23;12751:32;12748:52;;;12796:1;12793;12786:12;12748:52;12828:9;12822:16;12847:30;12871:5;12847:30;:::i;12912:340::-;13114:2;13096:21;;;13153:2;13133:18;;;13126:30;-1:-1:-1;;;13187:2:13;13172:18;;13165:46;13243:2;13228:18;;12912:340::o;14281:587::-;-1:-1:-1;;;;;14588:15:13;;;14570:34;;14640:15;;14635:2;14620:18;;14613:43;14687:2;14672:18;;14665:34;;;14730:2;14715:18;;14708:34;;;14550:3;14773;14758:19;;14751:32;;;14513:4;;14800:62;;14842:19;;14834:6;14826;14800:62;:::i;:::-;14792:70;14281:587;-1:-1:-1;;;;;;;;14281:587:13:o;15280:561::-;-1:-1:-1;;;;;15577:15:13;;;15559:34;;15629:15;;15624:2;15609:18;;15602:43;15676:2;15661:18;;15654:34;;;15719:2;15704:18;;15697:34;;;15539:3;15762;15747:19;;15740:32;;;15502:4;;15789:46;;15815:19;;15807:6;15789:46;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1445000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TestMintPassBlackMinted(address)": "2576",
								"TestMintPassBlueMinted(address)": "2553",
								"Test_Mint_Pass_Black()": "229",
								"Test_Mint_Pass_BlackMaxSupply()": "infinite",
								"Test_Mint_Pass_BlackScholarshipTotal()": "infinite",
								"Test_Mint_Pass_BlackTokenId()": "infinite",
								"Test_Mint_Pass_Blue()": "251",
								"Test_Mint_Pass_BlueMaxSupply()": "infinite",
								"Test_Mint_Pass_BlueScholarshipTotal()": "infinite",
								"Test_Mint_Pass_BlueTokenId()": "infinite",
								"balanceOf(address,uint256)": "2642",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintScholarship(address)": "infinite",
								"name()": "infinite",
								"owner()": "2399",
								"ownerMint(address,uint256,uint256)": "infinite",
								"renounceOwnership()": "28228",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26652",
								"setTokenURI(string,uint256)": "infinite",
								"setVault(address)": "26800",
								"supportsInterface(bytes4)": "590",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply(uint256)": "2516",
								"transferOwnership(address)": "28400",
								"uri(uint256)": "infinite",
								"vaultAddress()": "2449",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1059,
									"name": "PUSH",
									"source": 12,
									"value": "A6"
								},
								{
									"begin": 999,
									"end": 1059,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 999,
									"end": 1059,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1121,
									"end": 1124,
									"name": "PUSH",
									"source": 12,
									"value": "14A"
								},
								{
									"begin": 1065,
									"end": 1124,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1065,
									"end": 1124,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1194,
									"end": 1196,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1130,
									"end": 1196,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 1130,
									"end": 1196,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1265,
									"end": 1267,
									"name": "PUSH",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1202,
									"end": 1267,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1202,
									"end": 1267,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1330,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1274,
									"end": 1330,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1274,
									"end": 1330,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1336,
									"end": 1391,
									"name": "PUSH",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 1336,
									"end": 1391,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "PUSH",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "PUSH",
									"source": 12,
									"value": "54657374204D696E742050617373207631324100000000000000000000000000"
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2336,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "PUSH",
									"source": 12,
									"value": "F"
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "262331303034373B544D5056313049"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "88"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2373,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2581,
									"name": "PUSH",
									"source": 12,
									"value": "C83BEBA473DD6BD1890519EE0EEE2AC4FA5836B5"
								},
								{
									"begin": 2523,
									"end": 2581,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2523,
									"end": 2581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "PUSH",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "PUSH data",
									"source": 12,
									"value": "81E3E779D26B52F3B70CF1F316856BF926A1E9C7FA506456D5D886DF98517A32"
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "PUSH",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2674,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "PUSH",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "PUSH data",
									"source": 12,
									"value": "13979DB04D5EAAC7DBA88B615B122267C4942F2D42BAC3828DE122531EC347E"
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "PUSH",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2684,
									"end": 2768,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2089,
									"end": 2775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2291,
									"end": 2478,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2291,
									"end": 2478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2431,
									"end": 2471,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2431,
									"end": 2471,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2431,
									"end": 2471,
									"name": "PUSH",
									"source": 10,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2431,
									"end": 2471,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2380,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2364,
									"end": 2380,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2431,
									"end": 2471,
									"name": "LOG3",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2478,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2291,
									"end": 2478,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2291,
									"end": 2478,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1182,
									"end": 1188,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1196,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1198,
									"end": 1204,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1206,
									"end": 1212,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1214,
									"end": 1220,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1267,
									"end": 1270,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1246,
									"end": 1253,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1242,
									"end": 1265,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1271,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 1288,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1235,
									"end": 1288,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1284,
									"end": 1285,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1281,
									"end": 1282,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 1288,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1235,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1327,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1327,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1376,
									"end": 1390,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1376,
									"end": 1390,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1376,
									"end": 1390,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1407,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1373,
									"end": 1407,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1403,
									"end": 1404,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1401,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1393,
									"end": 1405,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1407,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1373,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1426,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1476,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1459,
									"end": 1468,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1455,
									"end": 1477,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1426,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1426,
									"end": 1487,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1426,
									"end": 1487,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1426,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1416,
									"end": 1487,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 1416,
									"end": 1487,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1535,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1522,
									"end": 1531,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1518,
									"end": 1536,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1512,
									"end": 1537,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1496,
									"end": 1537,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1496,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1552,
									"end": 1560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1549,
									"end": 1565,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1582,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1546,
									"end": 1582,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1579,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1575,
									"end": 1576,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1582,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1546,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1601,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1656,
									"end": 1663,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1645,
									"end": 1653,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1634,
									"end": 1643,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1630,
									"end": 1654,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1601,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1601,
									"end": 1664,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1601,
									"end": 1664,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1601,
									"end": 1664,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1707,
									"end": 1709,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1686,
									"end": 1711,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1591,
									"end": 1664,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1591,
									"end": 1664,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1686,
									"end": 1711,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1740,
									"end": 1771,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1771,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1772,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1772,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1720,
									"end": 1790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1720,
									"end": 1790,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1786,
									"end": 1787,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 1788,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1720,
									"end": 1790,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1720,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1862,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1863,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1845,
									"end": 1863,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1839,
									"end": 1864,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 1814,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 1814,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1876,
									"end": 1892,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1876,
									"end": 1892,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1876,
									"end": 1892,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1873,
									"end": 1909,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1873,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1873,
									"end": 1909,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1902,
									"end": 1903,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1895,
									"end": 1907,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1873,
									"end": 1909,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1873,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1928,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1983,
									"end": 1990,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1972,
									"end": 1980,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1961,
									"end": 1970,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1957,
									"end": 1981,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1928,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1928,
									"end": 1991,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1928,
									"end": 1991,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1928,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1918,
									"end": 1991,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1918,
									"end": 1991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2037,
									"end": 2040,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2026,
									"end": 2035,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2041,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2016,
									"end": 2042,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2000,
									"end": 2042,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2000,
									"end": 2042,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2067,
									"end": 2069,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2057,
									"end": 2065,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2087,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 2051,
									"end": 2087,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2083,
									"end": 2084,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2080,
									"end": 2081,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2073,
									"end": 2085,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2087,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 2051,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2087,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2106,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2161,
									"end": 2168,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2150,
									"end": 2158,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2139,
									"end": 2148,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 2135,
									"end": 2159,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2106,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 2106,
									"end": 2169,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 2106,
									"end": 2169,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2106,
									"end": 2169,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2096,
									"end": 2169,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2096,
									"end": 2169,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2096,
									"end": 2169,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1036,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "2071"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "2068"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "2065"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "2062"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "2059"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "2056"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 6055,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a740a2d2425e6cdf9f9e2a669314faefedc3a0f2a644a6dc489b9cfb57a9f6c64736f6c634300080b0033",
									".code": [
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "71D05AEC"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "CBF99084"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "F242432A"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "F48DEAAA"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "CBF99084"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "CC2851C6"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "DEC125BA"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "DF52FA84"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "9FA3CDA1"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "9FA3CDA1"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "BD85B039"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "71D05AEC"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "9E3CF643"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "2EB2C2D6"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "45114990"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "45114990"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "4E1273F4"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "6817031B"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "2EB2C2D6"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "388B9FE0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "3CCFD60B"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "430BF08A"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "9A3BEEF"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "9A3BEEF"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "B22F540"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "E89341C"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "16473CF7"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "FDD58E"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 6055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1180,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1903,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 787,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 787,
											"end": 814,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 787,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 787,
											"end": 814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 787,
											"end": 814,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 787,
											"end": 814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 787,
											"end": 814,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 787,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 787,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 814,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 5888,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 5888,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 5888,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5838,
											"end": 5889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5838,
											"end": 5889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 787,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 5692,
											"end": 5895,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1065,
											"end": 1124,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1065,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1065,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1065,
											"end": 1124,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2059"
										},
										{
											"begin": 1065,
											"end": 1124,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1065,
											"end": 1124,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1689,
											"end": 1790,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1689,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1689,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1689,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1689,
											"end": 1790,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2071"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1057,
											"end": 1142,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1057,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1057,
											"end": 1142,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 761,
											"end": 781,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1274,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1274,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1274,
											"end": 1330,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2068"
										},
										{
											"begin": 1274,
											"end": 1330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1274,
											"end": 1330,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1839,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 2959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1397,
											"end": 1445,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1397,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1397,
											"end": 1445,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1451,
											"end": 1498,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1451,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1451,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1451,
											"end": 1498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1451,
											"end": 1498,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1196,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1130,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1130,
											"end": 1196,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2062"
										},
										{
											"begin": 1130,
											"end": 1196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1196,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2065"
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1255,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1059,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 999,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 999,
											"end": 1059,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2056"
										},
										{
											"begin": 999,
											"end": 1059,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 999,
											"end": 1059,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4714,
											"end": 4739,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4739,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4739,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4739,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4714,
											"end": 4814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4789,
											"end": 4814,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4814,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4814,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4814,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4714,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4890,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4714,
											"end": 4890,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4890,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4714,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4603,
											"end": 4943,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 737,
											"end": 755,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1292,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3469,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3478,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3500,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5952,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5905,
											"end": 5918,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5905,
											"end": 5918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 5938,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5974,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5934,
											"end": 6010,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5934,
											"end": 6010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 5934,
											"end": 6010,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5934,
											"end": 6010,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 5934,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6035,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 6051,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1292,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3687,
											"end": 3689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2068"
										},
										{
											"begin": 3720,
											"end": 3756,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2062"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3681,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3801,
											"end": 3803,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3805,
											"end": 3831,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2071"
										},
										{
											"begin": 3833,
											"end": 3868,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2065"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3795,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3880,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2854,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2854,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2854,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9580,
											"end": 9582,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9619,
											"end": 9621,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9592,
											"end": 9622,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "988A9C8EA890BE9A92A69A82A8869"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9638,
											"end": 9656,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9638,
											"end": 9656,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9631,
											"end": 9676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9693,
											"end": 9711,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9693,
											"end": 9711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 9378,
											"end": 9717,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2903,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2893,
											"end": 2949,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2937,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2938,
											"end": 2948,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2949,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2893,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9924,
											"end": 9926,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9963,
											"end": 9965,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 9966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1393D517D055551213D492569151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 10019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 9722,
											"end": 10060,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2885,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3158,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3235,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3266,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3496,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3476,
											"end": 3486,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "PUSH",
											"source": 8,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 3498,
											"end": 3501,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3501,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3511,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3543,
											"end": 3557,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3557,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3562,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3663,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3663,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3777,
											"name": "PUSH",
											"source": 8,
											"value": "BC197C81"
										},
										{
											"begin": 3725,
											"end": 3777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3674,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3676,
											"end": 3680,
											"name": "DUP16",
											"source": 8
										},
										{
											"begin": 3676,
											"end": 3680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3700,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3700,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3777,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3597,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3597,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3522,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 3826,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 4202,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1292,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4381,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2071"
										},
										{
											"begin": 4344,
											"end": 4351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4381,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4423,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2068"
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4385,
											"end": 4423,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13459,
											"end": 13461,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13441,
											"end": 13462,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13498,
											"end": 13500,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 13478,
											"end": 13496,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13478,
											"end": 13496,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13478,
											"end": 13496,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13471,
											"end": 13501,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13569,
											"name": "PUSH",
											"source": 13,
											"value": "544D50563132413A204E6F6E6578697374656E7420746F6B656E2049442E0000"
										},
										{
											"begin": 13517,
											"end": 13535,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13517,
											"end": 13535,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13517,
											"end": 13535,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13510,
											"end": 13570,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13587,
											"end": 13605,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13587,
											"end": 13605,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 13257,
											"end": 13611,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4323,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4531,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2071"
										},
										{
											"begin": 4494,
											"end": 4501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4531,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 5043,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 4490,
											"end": 5043,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4652,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2059"
										},
										{
											"begin": 4581,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4593,
											"end": 4619,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2071"
										},
										{
											"begin": 2952,
											"end": 2959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4581,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4572,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4572,
											"end": 4620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4572,
											"end": 4578,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4572,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4572,
											"end": 4620,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4572,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4572,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4572,
											"end": 4652,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4572,
											"end": 4652,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13818,
											"end": 13820,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13800,
											"end": 13821,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13857,
											"end": 13859,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13830,
											"end": 13860,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13896,
											"end": 13930,
											"name": "PUSH",
											"source": 13,
											"value": "544D50563132413A20416D6F756E74206973206C6172676572207468616E2074"
										},
										{
											"begin": 13876,
											"end": 13894,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13876,
											"end": 13894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13876,
											"end": 13894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13869,
											"end": 13931,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BA30B629BAB838363C97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13947,
											"end": 13965,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13947,
											"end": 13965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13947,
											"end": 13965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13940,
											"end": 13981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13998,
											"end": 14017,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13998,
											"end": 14017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 13616,
											"end": 14023,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 4547,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 4749,
											"end": 4751,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4760,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 4743,
											"end": 4773,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4490,
											"end": 5043,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 4490,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4882,
											"end": 4911,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2056"
										},
										{
											"begin": 4838,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4850,
											"end": 4877,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "2068"
										},
										{
											"begin": 2952,
											"end": 2959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2890,
											"end": 3001,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1292,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "150111E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 5358,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5465,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5453,
											"end": 5465,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 5421,
											"end": 5489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5453,
											"end": 5465,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5467,
											"end": 5488,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 5421,
											"end": 5489,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5489,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 5421,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5311,
											"end": 5496,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 3993,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4017,
											"end": 4044,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9580,
											"end": 9582,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9619,
											"end": 9621,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9592,
											"end": 9622,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "988A9C8EA890BE9A92A69A82A8869"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9638,
											"end": 9656,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9638,
											"end": 9656,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9631,
											"end": 9676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9693,
											"end": 9711,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9693,
											"end": 9711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 9378,
											"end": 9717,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4317,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4317,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4373,
											"end": 4374,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4376,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4380,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4380,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4382,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4384,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4384,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4322,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4319,
											"end": 4322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 4415,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1292,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5674,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5690,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5697,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1689,
											"end": 1790,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1689,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1292,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1753,
											"end": 1783,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 761,
											"end": 781,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1837,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "PUSH",
											"source": 8,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1906,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1734,
											"end": 1776,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2102,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2092,
											"end": 2148,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2130,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2147,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2148,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2092,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9924,
											"end": 9926,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9963,
											"end": 9965,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 9966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1393D517D055551213D492569151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 10019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 9722,
											"end": 10060,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2084,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2207,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2244,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14202,
											"end": 14227,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14202,
											"end": 14227,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14202,
											"end": 14227,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14260,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14236,
											"end": 14270,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14236,
											"end": 14270,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14236,
											"end": 14270,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2285,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "PUSH",
											"source": 8,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2308,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2340,
											"end": 2354,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2354,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2413,
											"end": 2455,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2455,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2562,
											"name": "PUSH",
											"source": 8,
											"value": "F23A6E61"
										},
										{
											"begin": 2515,
											"end": 2562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2490,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2490,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2413,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2413,
											"end": 2562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2562,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2394,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2394,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2394,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2394,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2340,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2319,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2611,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1939,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1292,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1261,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2027,
											"end": 2049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2049,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15075,
											"end": 15077,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15057,
											"end": 15078,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15114,
											"end": 15116,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15087,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15153,
											"end": 15187,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15126,
											"end": 15188,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15204,
											"end": 15222,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15204,
											"end": 15222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15204,
											"end": 15222,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15197,
											"end": 15233,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15250,
											"end": 15269,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 15250,
											"end": 15269,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 14873,
											"end": 15275,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2019,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2121,
											"end": 2129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5682,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5137,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5289,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14202,
											"end": 14227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14202,
											"end": 14227,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14202,
											"end": 14227,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14260,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14236,
											"end": 14270,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14236,
											"end": 14270,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14236,
											"end": 14270,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "PUSH",
											"source": 8,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5373,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5405,
											"end": 5419,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5419,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5419,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5424,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5520,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5520,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5633,
											"name": "PUSH",
											"source": 8,
											"value": "F23A6E61"
										},
										{
											"begin": 5586,
											"end": 5633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5521,
											"end": 5531,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5521,
											"end": 5531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5555,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5561,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5478,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5633,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5405,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5384,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5682,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 831,
											"end": 1127,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 831,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 903,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1056,
											"end": 1057,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1048,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1036,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1061,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1061,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1061,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16048,
											"end": 16050,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16030,
											"end": 16051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16087,
											"end": 16089,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 16067,
											"end": 16085,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16067,
											"end": 16085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16067,
											"end": 16085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16060,
											"end": 16090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11551217D514905394D1915497D19052531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16106,
											"end": 16124,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16106,
											"end": 16124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16106,
											"end": 16124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16099,
											"end": 16148,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16165,
											"end": 16183,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16165,
											"end": 16183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1081,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 15846,
											"end": 16189,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2478,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2291,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2471,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2471,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2471,
											"name": "PUSH",
											"source": 10,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2431,
											"end": 2471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2380,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2471,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2478,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "175"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "348"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "161"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "348"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1683,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 1211,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1297,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1306,
											"end": 1325,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1374,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1429,
											"end": 1433,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1485,
											"end": 1498,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1498,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1475,
											"end": 1504,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1468,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1468,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1446,
											"end": 1505,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1578,
											"end": 1581,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1574,
											"end": 1590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1563,
											"end": 1601,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1644,
											"end": 1659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 1669,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1627,
											"end": 1677,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1211,
											"end": 1683,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1683,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1688,
											"end": 1908,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1688,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1898,
											"end": 1900,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1875,
											"end": 1881,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 1857,
											"end": 1902,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1913,
											"end": 2040,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 1913,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1974,
											"end": 1984,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1965,
											"end": 1985,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2005,
											"end": 2009,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2010,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2034,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 3045,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2045,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2123,
											"end": 2129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2182,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2187,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2204,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2152,
											"end": 2204,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2190,
											"end": 2202,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2204,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2152,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2250,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2312,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2313,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2416,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2406,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2398,
											"end": 2400,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2390,
											"end": 2417,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2380,
											"end": 2435,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2429,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2435,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2380,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2470,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2482,
											"end": 2492,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 2515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2479,
											"end": 2515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 2540,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2624,
											"end": 2637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2646,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 2616,
											"end": 2647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2665,
											"end": 2711,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2734,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2662,
											"end": 2734,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2789,
											"end": 2791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2831,
											"end": 2838,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2828,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2815,
											"end": 2817,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2804,
											"end": 2839,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 2856,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2801,
											"end": 2856,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2850,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 2856,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2801,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 2914,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2905,
											"end": 2909,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2895,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 2915,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2959,
											"end": 2960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2924,
											"end": 2961,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3039,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3039,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2045,
											"end": 3045,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3050,
											"end": 3236,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3050,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3160,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3165,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3180,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3421,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3241,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3324,
											"end": 3356,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3415,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3392,
											"end": 3415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3241,
											"end": 3421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3241,
											"end": 3421,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3489,
											"end": 3497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3538,
											"end": 3544,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3530,
											"end": 3557,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3572,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3569,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3614,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3626,
											"end": 3656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3656,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3667,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 3710,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3694,
											"end": 3711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3711,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 3763,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3747,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3742,
											"end": 3756,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3726,
											"end": 3764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3770,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3787,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3720,
											"end": 3787,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3787,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3720,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3857,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3865,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3916,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3906,
											"end": 3910,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3894,
											"end": 3911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3890,
											"end": 3917,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3880,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3880,
											"end": 3935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3933,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3880,
											"end": 3935,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3880,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3954,
											"end": 3974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 3974,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4071,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4118,
											"end": 4121,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4115,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4100,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4090,
											"end": 4109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4122,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4139,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4080,
											"end": 4139,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4125,
											"end": 4137,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4310,
											"end": 4316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4340,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4342,
											"end": 4348,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4358,
											"end": 4364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4422,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4398,
											"end": 4405,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4417,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4390,
											"end": 4423,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4436,
											"end": 4437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4426,
											"end": 4438,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4488,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4539,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 4507,
											"end": 4545,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4507,
											"end": 4545,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4507,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4598,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4660,
											"end": 4662,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4663,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4715,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4777,
											"end": 4784,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 4768,
											"end": 4774,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4757,
											"end": 4766,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4715,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4715,
											"end": 4785,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4715,
											"end": 4785,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4715,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4812,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4812,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4689,
											"end": 4785,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4905,
											"end": 4941,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4905,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4905,
											"end": 4941,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4935,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4939,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4905,
											"end": 4941,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4905,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 5029,
											"end": 5037,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4976,
											"end": 5048,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4976,
											"end": 5048,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4976,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5075,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5075,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 5048,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5155,
											"end": 5158,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5140,
											"end": 5159,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5160,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5160,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5172,
											"end": 5188,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5188,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5188,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5205,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5169,
											"end": 5205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5201,
											"end": 5202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5191,
											"end": 5203,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5205,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5169,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5279,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 5266,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5240,
											"end": 5300,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5240,
											"end": 5300,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5240,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP13",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5327,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 5360,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5365,
											"end": 5687,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5365,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5456,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5458,
											"end": 5464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5513,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5490,
											"end": 5497,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5486,
											"end": 5509,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5514,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5517,
											"end": 5529,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5569,
											"end": 5578,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5550,
											"end": 5579,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5550,
											"end": 5579,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5550,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5579,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5628,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5629,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5629,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5630,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5630,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5677,
											"end": 5679,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5681,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5681,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5365,
											"end": 5687,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5365,
											"end": 5687,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5900,
											"end": 6673,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 5900,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6022,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6052,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6085,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6097,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6102,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6067,
											"end": 6119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6119,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6067,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 6164,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6142,
											"end": 6165,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6202,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6228,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6245,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6211,
											"end": 6245,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6241,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6239,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6243,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6245,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6211,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 6342,
											"end": 6349,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6339,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6318,
											"end": 6340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 6280,
											"end": 6350,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6280,
											"end": 6350,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 6280,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6377,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6254,
											"end": 6350,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6429,
											"end": 6461,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6429,
											"end": 6461,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6489,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6489,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6489,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6506,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 6470,
											"end": 6506,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6504,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6506,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 6470,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6605,
											"end": 6612,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6592,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6603,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 6541,
											"end": 6613,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6541,
											"end": 6613,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6541,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5900,
											"end": 6673,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5900,
											"end": 6673,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 5900,
											"end": 6673,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5900,
											"end": 6673,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6632,
											"end": 6640,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 6673,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6678,
											"end": 7310,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 6678,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6849,
											"end": 6851,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6901,
											"end": 6922,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6922,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6971,
											"end": 6984,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6971,
											"end": 6984,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7015,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7015,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7015,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6849,
											"end": 6851,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7087,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7087,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7087,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7046,
											"end": 7048,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7031,
											"end": 7049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7031,
											"end": 7049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7031,
											"end": 7049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7135,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7126,
											"end": 7127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7123,
											"end": 7136,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7203,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7203,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7259,
											"end": 7274,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7259,
											"end": 7274,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7259,
											"end": 7274,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7259,
											"end": 7274,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7151,
											"end": 7152,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7144,
											"end": 7153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7115,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7301,
											"end": 7304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7304,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 6678,
											"end": 7310,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6678,
											"end": 7310,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7380,
											"end": 7386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 7438,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7427,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7416,
											"end": 7439,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7412,
											"end": 7444,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7409,
											"end": 7461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7409,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7409,
											"end": 7461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7409,
											"end": 7461,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7409,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7499,
											"end": 7508,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7480,
											"end": 7509,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7480,
											"end": 7509,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7480,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7531,
											"end": 7563,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7606,
											"end": 7611,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7612,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7592,
											"end": 7613,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7590,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7614,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7572,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7572,
											"end": 7632,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7629,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7618,
											"end": 7630,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7572,
											"end": 7632,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7572,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7662,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7796,
											"end": 7798,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7793,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7775,
											"end": 7782,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7771,
											"end": 7794,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7799,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7764,
											"end": 7816,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7764,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 7764,
											"end": 7816,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7812,
											"end": 7813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7810,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7802,
											"end": 7814,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7764,
											"end": 7816,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 7764,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7835,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7854,
											"end": 7863,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7835,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7835,
											"end": 7864,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7835,
											"end": 7864,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7835,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7864,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7864,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7883,
											"end": 7921,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7883,
											"end": 7921,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 7883,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7873,
											"end": 7921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7873,
											"end": 7921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7927,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8046,
											"end": 8052,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8078,
											"end": 8084,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8134,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 8119,
											"end": 8128,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8106,
											"end": 8129,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8102,
											"end": 8135,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8099,
											"end": 8152,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8099,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8099,
											"end": 8152,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8138,
											"end": 8150,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8099,
											"end": 8152,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8099,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8190,
											"end": 8199,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 8171,
											"end": 8200,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8171,
											"end": 8200,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8171,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8200,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8200,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8219,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8253,
											"end": 8255,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8242,
											"end": 8251,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8219,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 8219,
											"end": 8257,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8219,
											"end": 8257,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8219,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8209,
											"end": 8257,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8209,
											"end": 8257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8304,
											"end": 8306,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8307,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8276,
											"end": 8308,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8308,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8355,
											"end": 8357,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8344,
											"end": 8353,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8359,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8317,
											"end": 8359,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8317,
											"end": 8359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8410,
											"end": 8413,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8399,
											"end": 8408,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8395,
											"end": 8414,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8430,
											"end": 8436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8457,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8424,
											"end": 8474,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8424,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 8424,
											"end": 8474,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8472,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8424,
											"end": 8474,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 8424,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8509,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8559,
											"end": 8566,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8550,
											"end": 8556,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 8548,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8509,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 8509,
											"end": 8567,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8509,
											"end": 8567,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8509,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8594,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8594,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7932,
											"end": 8627,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8632,
											"end": 9012,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8632,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8711,
											"end": 8712,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8707,
											"end": 8719,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 8719,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 8719,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 8719,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8766,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8766,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8775,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8775,
											"end": 8836,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8829,
											"end": 8833,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 8821,
											"end": 8827,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8817,
											"end": 8834,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8775,
											"end": 8836,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8775,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8882,
											"end": 8884,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8871,
											"end": 8885,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8848,
											"end": 8886,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 9006,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8845,
											"end": 9006,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8938,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8923,
											"end": 8926,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8919,
											"end": 8939,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8909,
											"end": 8940,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 8967,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8953,
											"end": 8968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8988,
											"end": 8989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 8996,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 9006,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8845,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 9006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 9012,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 9012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 9012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 9012,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9017,
											"end": 9373,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 9017,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9221,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9222,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9222,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9238,
											"end": 9256,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9238,
											"end": 9256,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9238,
											"end": 9256,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9231,
											"end": 9261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 9331,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9292,
											"end": 9294,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9277,
											"end": 9295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9332,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9017,
											"end": 9373,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10065,
											"end": 10192,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 10065,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10126,
											"end": 10136,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10117,
											"end": 10137,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10107,
											"end": 10138,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10157,
											"end": 10161,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 10154,
											"end": 10155,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 10185,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10186,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10324,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 10197,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10258,
											"end": 10268,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10253,
											"end": 10256,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10249,
											"end": 10269,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10246,
											"end": 10247,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10270,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10289,
											"end": 10293,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 10286,
											"end": 10287,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10279,
											"end": 10294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10313,
											"end": 10317,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10310,
											"end": 10311,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10318,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10454,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 10329,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10373,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10397,
											"end": 10398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10395,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10399,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10388,
											"end": 10422,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10388,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10388,
											"end": 10422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10439,
											"end": 10448,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10454,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10459,
											"end": 10587,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 10459,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10499,
											"end": 10502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10526,
											"end": 10532,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10524,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10520,
											"end": 10533,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10556,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10517,
											"end": 10556,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10581,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10572,
											"end": 10581,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10459,
											"end": 10587,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10592,
											"end": 10946,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 10592,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10699,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10699,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 10665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10711,
											"end": 10742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10742,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10708,
											"end": 10759,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10708,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10708,
											"end": 10759,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10752,
											"end": 10753,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10757,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10708,
											"end": 10759,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10708,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10791,
											"end": 10797,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10788,
											"end": 10789,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 10784,
											"end": 10798,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10843,
											"end": 10851,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10836,
											"end": 10841,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10829,
											"end": 10833,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10827,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10820,
											"end": 10834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10807,
											"end": 10852,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10893,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10875,
											"end": 10893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10895,
											"end": 10899,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10871,
											"end": 10900,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10909,
											"end": 10922,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10909,
											"end": 10922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10909,
											"end": 10922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10871,
											"end": 10900,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10871,
											"end": 10900,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10592,
											"end": 10946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10592,
											"end": 10946,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10951,
											"end": 11470,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 10951,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11230,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11210,
											"end": 11231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 11323,
											"end": 11325,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11308,
											"end": 11326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11300,
											"end": 11306,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11292,
											"end": 11298,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11254,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 11254,
											"end": 11327,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11254,
											"end": 11327,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 11254,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11375,
											"end": 11384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11367,
											"end": 11373,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11363,
											"end": 11385,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11360,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11343,
											"end": 11361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11336,
											"end": 11386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11403,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 11457,
											"end": 11463,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11449,
											"end": 11455,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11441,
											"end": 11447,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11403,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 11403,
											"end": 11464,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11403,
											"end": 11464,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 11403,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11395,
											"end": 11464,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 10951,
											"end": 11470,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10951,
											"end": 11470,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11475,
											"end": 11741,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 11475,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11558,
											"end": 11561,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11551,
											"end": 11570,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11615,
											"end": 11621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11608,
											"end": 11613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11605,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11596,
											"end": 11599,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11622,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11667,
											"end": 11668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11642,
											"end": 11658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11642,
											"end": 11658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11642,
											"end": 11658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11660,
											"end": 11664,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11638,
											"end": 11665,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11638,
											"end": 11665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11638,
											"end": 11665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11669,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11669,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11669,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11702,
											"end": 11717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11702,
											"end": 11717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11702,
											"end": 11717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11698,
											"end": 11727,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11689,
											"end": 11728,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11689,
											"end": 11728,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11689,
											"end": 11728,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11685,
											"end": 11735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11685,
											"end": 11735,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11475,
											"end": 11741,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11746,
											"end": 12653,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 11746,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12188,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12173,
											"end": 12188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12173,
											"end": 12188,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12155,
											"end": 12189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12155,
											"end": 12189,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12220,
											"end": 12222,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12198,
											"end": 12241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12135,
											"end": 12138,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12272,
											"end": 12274,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12098,
											"end": 12102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12102,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12304,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 12304,
											"end": 12378,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12358,
											"end": 12377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12358,
											"end": 12377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12350,
											"end": 12356,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12348,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 12304,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 12304,
											"end": 12378,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12304,
											"end": 12378,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 12304,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12426,
											"end": 12435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12424,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12436,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12409,
											"end": 12411,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12398,
											"end": 12407,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12394,
											"end": 12412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12387,
											"end": 12437,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12506,
											"end": 12512,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12498,
											"end": 12504,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 12460,
											"end": 12521,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12460,
											"end": 12521,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 12460,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12446,
											"end": 12521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12446,
											"end": 12521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12562,
											"end": 12568,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12558,
											"end": 12580,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12541,
											"end": 12550,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12537,
											"end": 12556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12598,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 12640,
											"end": 12646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12632,
											"end": 12638,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12624,
											"end": 12630,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12598,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 12598,
											"end": 12647,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12598,
											"end": 12647,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 12598,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12590,
											"end": 12647,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 12653,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11746,
											"end": 12653,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12658,
											"end": 12907,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 12658,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12733,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12780,
											"end": 12782,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12759,
											"end": 12766,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12755,
											"end": 12778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12751,
											"end": 12783,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12748,
											"end": 12800,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12748,
											"end": 12800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 12748,
											"end": 12800,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12794,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12786,
											"end": 12798,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12748,
											"end": 12800,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 12748,
											"end": 12800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12828,
											"end": 12837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12822,
											"end": 12838,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 12871,
											"end": 12876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 12847,
											"end": 12877,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12912,
											"end": 13252,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 12912,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13116,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13096,
											"end": 13117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13096,
											"end": 13117,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13096,
											"end": 13117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13153,
											"end": 13155,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 13133,
											"end": 13151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13133,
											"end": 13151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13133,
											"end": 13151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13126,
											"end": 13156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155394D0519157D49150D25412515395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13187,
											"end": 13189,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13172,
											"end": 13190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13172,
											"end": 13190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13243,
											"end": 13245,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13252,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14281,
											"end": 14868,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 14281,
											"end": 14868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14588,
											"end": 14603,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14588,
											"end": 14603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14588,
											"end": 14603,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14570,
											"end": 14604,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14570,
											"end": 14604,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14655,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14655,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14635,
											"end": 14637,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14613,
											"end": 14656,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14687,
											"end": 14689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14665,
											"end": 14699,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14665,
											"end": 14699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14665,
											"end": 14699,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14730,
											"end": 14732,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14715,
											"end": 14733,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14715,
											"end": 14733,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14708,
											"end": 14742,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14708,
											"end": 14742,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14708,
											"end": 14742,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14553,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 14773,
											"end": 14776,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 14758,
											"end": 14777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14758,
											"end": 14777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14751,
											"end": 14783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14513,
											"end": 14517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14513,
											"end": 14517,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 14800,
											"end": 14862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14842,
											"end": 14861,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14842,
											"end": 14861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14840,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14826,
											"end": 14832,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 14800,
											"end": 14862,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14800,
											"end": 14862,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 14800,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14792,
											"end": 14862,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 14281,
											"end": 14868,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14281,
											"end": 14868,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15280,
											"end": 15841,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 15280,
											"end": 15841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15577,
											"end": 15592,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15577,
											"end": 15592,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15577,
											"end": 15592,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15559,
											"end": 15593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15559,
											"end": 15593,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15629,
											"end": 15644,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15629,
											"end": 15644,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15624,
											"end": 15626,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15609,
											"end": 15627,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15609,
											"end": 15627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15602,
											"end": 15645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15676,
											"end": 15678,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15654,
											"end": 15688,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15654,
											"end": 15688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15654,
											"end": 15688,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15719,
											"end": 15721,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15704,
											"end": 15722,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15722,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15697,
											"end": 15731,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15697,
											"end": 15731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15697,
											"end": 15731,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15539,
											"end": 15542,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 15762,
											"end": 15765,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15747,
											"end": 15766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15747,
											"end": 15766,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15740,
											"end": 15772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15740,
											"end": 15772,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15740,
											"end": 15772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15502,
											"end": 15506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15506,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15789,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 15789,
											"end": 15835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15815,
											"end": 15834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15815,
											"end": 15834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15807,
											"end": 15813,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15789,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 15789,
											"end": 15835,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										}
									]
								},
								"13979DB04D5EAAC7DBA88B615B122267C4942F2D42BAC3828DE122531EC347E": "697066733a2f2f516d51504845686e6a7452476f326d6875475670556855717a70715a4d373733626169435274364159566e38796b",
								"81E3E779D26B52F3B70CF1F316856BF926A1E9C7FA506456D5D886DF98517A32": "697066733a2f2f516d6346335572575076796e3935515731427539325a6a365576465a39534a475538466d70465846643665786548"
							}
						},
						"methodIdentifiers": {
							"TestMintPassBlackMinted(address)": "0b22f540",
							"TestMintPassBlueMinted(address)": "9fa3cda1",
							"Test_Mint_Pass_Black()": "cbf99084",
							"Test_Mint_Pass_BlackMaxSupply()": "f48deaaa",
							"Test_Mint_Pass_BlackScholarshipTotal()": "dec125ba",
							"Test_Mint_Pass_BlackTokenId()": "9e3cf643",
							"Test_Mint_Pass_Blue()": "cc2851c6",
							"Test_Mint_Pass_BlueMaxSupply()": "45114990",
							"Test_Mint_Pass_BlueScholarshipTotal()": "df52fa84",
							"Test_Mint_Pass_BlueTokenId()": "71d05aec",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintScholarship(address)": "16473cf7",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerMint(address,uint256,uint256)": "388b9fe0",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setTokenURI(string,uint256)": "09a3beef",
							"setVault(address)": "6817031b",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply(uint256)": "bd85b039",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c",
							"vaultAddress()": "430bf08a",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_TestMintPassBlackTokenUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_TestMintPassBlueTokenUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoEthBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"TestMintPassBlackMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"TestMintPassBlueMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_Black\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_BlackMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_BlackScholarshipTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_BlackTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_Blue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_BlueMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_BlueScholarshipTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Test_Mint_Pass_BlueTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintScholarship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newTokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mintScholarship(address)\":{\"params\":{\"to\":\"address to mint it to.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerMint(address,uint256,uint256)\":{\"params\":{\"amount\":\"the amount that the owner wants to mint.\",\"to\":\"address to mint it to.\",\"tokenId\":\"which token ID 1 for black 2 for general\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTokenURI(string,uint256)\":{\"params\":{\"_newTokenURI\":\"this is the new token uri\",\"tokenId\":\"this is the token ID that will be set\"}},\"setVault(address)\":{\"params\":{\"_vaultAddress\":\"is the new vaultAddress\"}},\"totalSupply(uint256)\":{\"params\":{\"id\":\"is the ID, either generalTokenId or blackTokenId\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"params\":{\"tokenId\":\"which token ID to return 1 or 2.\"}}},\"title\":\"TestMintPassv12A\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mintScholarship(address)\":{\"notice\":\"function for owner to mint (LC)\"},\"ownerMint(address,uint256,uint256)\":{\"notice\":\"function for owner to mint the token, just in case it's needed, mintScholarship() will be used to mint all the scholarships\"},\"setTokenURI(string,uint256)\":{\"notice\":\"function to change the tokenURI\"},\"setVault(address)\":{\"notice\":\"changing vault address\"},\"totalSupply(uint256)\":{\"notice\":\"totalSupply of a token ID\"},\"uri(uint256)\":{\"notice\":\"returns the token URI\"},\"withdraw()\":{\"notice\":\"Withdraw all ETH from the contract to the vault address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test Mint Pass v12A.sol\":\"TestMintPassv12A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/ERC1155.sol\":{\"keccak256\":\"0x0ed909c57d26645a267388dcec3ba5b8ce7510afb9ed9561da45b0d386f90ab8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b61980aba128f354f0dbdb8ccf7fa5b56ab680ecb45ba988c113c3e7885e9418\",\"dweb:/ipfs/QmUBnfQ6Wg5MjoEpjem3zFeZFWiwKXuL6oufxmTyk22sNx\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x66ff87e92b16b128d2971cc4a459666e00faad67e95e69a4f3860fb45b09504b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ff210c813294070976680c1405cec00c710b8c040fad34e29e0164b6e8f0a18\",\"dweb:/ipfs/QmVyP53zS2gfjn97Q7rPn2bPa6jn1Vgq96ZBzrLzXk14yo\"]},\"contracts/SafeTransferLib.sol\":{\"keccak256\":\"0x970dffa8267c7c5c11b102a248ee2ee1cba8518b0b45253254c08115fd8c4497\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4f8cbda583f0ddbb509d99dd752cc4d90d8591dc08ec250bae3ae899c9816d3c\",\"dweb:/ipfs/QmcGSCg9hhtF5qgGGhQenvV21fRNEhE93HNLW3RNJxUJdR\"]},\"contracts/Test Mint Pass v12A.sol\":{\"keccak256\":\"0xa5e08ad59fde93a4740a7067ead4b0de485b61e402f1c90660b2bc9716a10385\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a0bdb95cc29810617350d099c558c0503cfd33b9d9027663a040f8b688fbf50e\",\"dweb:/ipfs/QmUyxLW9hueJvR5XGTzgNPePZRDqxvVPMZuKmujZKTrN4J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 816,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 822,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1842,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "_owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2049,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2051,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2053,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "vaultAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 2081,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2085,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "tokenURI",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2089,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "TestMintPassBlueMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2093,
								"contract": "contracts/Test Mint Pass v12A.sol:TestMintPassv12A",
								"label": "TestMintPassBlackMinted",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"mintScholarship(address)": {
								"notice": "function for owner to mint (LC)"
							},
							"ownerMint(address,uint256,uint256)": {
								"notice": "function for owner to mint the token, just in case it's needed, mintScholarship() will be used to mint all the scholarships"
							},
							"setTokenURI(string,uint256)": {
								"notice": "function to change the tokenURI"
							},
							"setVault(address)": {
								"notice": "changing vault address"
							},
							"totalSupply(uint256)": {
								"notice": "totalSupply of a token ID"
							},
							"uri(uint256)": {
								"notice": "returns the token URI"
							},
							"withdraw()": {
								"notice": "Withdraw all ETH from the contract to the vault address."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							454
						],
						"ERC165": [
							755
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							767
						],
						"Strings": [
							731
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 455,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 732,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 756,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								755,
								767,
								392,
								454
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 754,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 731,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$731_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 730,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 731,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$731_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 730,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4873:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4883:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4853:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4844:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4844:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4779:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:0"
									},
									"scope": 319,
									"src": "4770:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5253:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5263:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5263:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4921:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5224:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5158:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5215:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:0"
									},
									"scope": 319,
									"src": "5149:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5864:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "5882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "5893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5893:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5882:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5907:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5874:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5968:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5968:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5302:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5796:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5855:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5864:0:0"
									},
									"scope": 319,
									"src": "5787:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6708:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6718:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6007:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:0"
									},
									"scope": 319,
									"src": "6640:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "6948:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6966:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "6958:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6986:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7021:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7014:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7014:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7039:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7014:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7014:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7086:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7058:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6756:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6884:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6920:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6912:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:0"
									},
									"scope": 319,
									"src": "6875:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7312:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7322:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7351:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7365:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7372:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7365:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7365:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7386:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7365:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7365:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7365:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7432:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "7447:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7420:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7415:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7128:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7263:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:0:0"
									},
									"scope": 319,
									"src": "7244:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7671:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7699:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7681:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7709:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7723:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "7730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7723:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7723:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7723:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7755:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7723:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7723:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "7791:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7797:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "7806:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7806:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7779:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "7774:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7483:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7611:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7671:0:0"
									},
									"scope": 319,
									"src": "7602:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6032:0",
							"usedErrors": []
						}
					],
					"src": "108:7731:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 432,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 416,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 433,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							454
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 440,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 439,
												"id": 442,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 454,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 449,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 448,
												"id": 451,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 454,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							528
						]
					},
					"id": 529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:4",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 528,
							"linearizedBaseContracts": [
								528
							],
							"name": "Counters",
							"nameLocation": "432:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 460,
									"members": [
										{
											"constant": false,
											"id": 459,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 460,
											"src": "786:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 458,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:4",
									"nodeType": "StructDefinition",
									"scope": 528,
									"src": "447:374:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "901:38:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 468,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "918:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 459,
													"src": "918:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 467,
												"id": 470,
												"nodeType": "Return",
												"src": "911:21:4"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "844:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "844:7:4"
													},
													"referencedDeclaration": 460,
													"src": "844:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "892:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:4"
									},
									"scope": 528,
									"src": "827:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "998:70:4",
										"statements": [
											{
												"id": 484,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:4",
												"statements": [
													{
														"expression": {
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 478,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "1032:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 459,
																"src": "1032:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 483,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:4"
													}
												]
											}
										]
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "964:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "964:7:4"
													},
													"referencedDeclaration": 460,
													"src": "964:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:4"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:4"
									},
									"scope": 528,
									"src": "945:123:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "1127:176:4",
										"statements": [
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "1137:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 492,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"expression": {
														"id": 494,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1153:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 459,
													"src": "1153:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "1185:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:4"
											},
											{
												"id": 512,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:4",
												"statements": [
													{
														"expression": {
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 504,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1260:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 459,
																"src": "1260:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "1277:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 511,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:4"
													}
												]
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1093:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "1093:7:4"
													},
													"referencedDeclaration": 460,
													"src": "1093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:4"
									},
									"scope": 528,
									"src": "1074:229:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "1358:35:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 520,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "1368:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:4"
											}
										]
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1324:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 515,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "1324:7:4"
													},
													"referencedDeclaration": 460,
													"src": "1324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$460_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:4"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:4"
									},
									"scope": 528,
									"src": "1309:84:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 529,
							"src": "424:971:4",
							"usedErrors": []
						}
					],
					"src": "87:1309:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							731
						]
					},
					"id": 732,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 531,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 731,
							"linearizedBaseContracts": [
								731
							],
							"name": "Strings",
							"nameLocation": "154:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 534,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 731,
									"src": "168:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 532,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 533,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "399:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 542,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "601:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"nodeType": "IfStatement",
												"src": "597:51:5",
												"trueBody": {
													"id": 547,
													"nodeType": "Block",
													"src": "613:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 541,
															"id": 546,
															"nodeType": "Return",
															"src": "627:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "657:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"id": 551,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 537,
													"src": "672:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:5"
											},
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "687:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:5"
											},
											{
												"body": {
													"id": 566,
													"nodeType": "Block",
													"src": "729:57:5",
													"statements": [
														{
															"expression": {
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:5",
																"subExpression": {
																	"id": 559,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "743:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 561,
															"nodeType": "ExpressionStatement",
															"src": "743:8:5"
														},
														{
															"expression": {
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 562,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "765:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 565,
															"nodeType": "ExpressionStatement",
															"src": "765:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "718:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "WhileStatement",
												"src": "711:75:5"
											},
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "795:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 568,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [
														{
															"id": 572,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "827:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 570,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:5"
											},
											{
												"body": {
													"id": 605,
													"nodeType": "Block",
													"src": "863:131:5",
													"statements": [
														{
															"expression": {
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 578,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "877:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "877:11:5"
														},
														{
															"expression": {
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 582,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "902:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 584,
																	"indexExpression": {
																		"id": 583,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "909:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 594,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 592,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 537,
																									"src": "945:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 593,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 591,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 590,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 595,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 587,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 585,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "902:56:5"
														},
														{
															"expression": {
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "972:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 604,
															"nodeType": "ExpressionStatement",
															"src": "972:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "851:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "WhileStatement",
												"src": "844:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 609,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "1017:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 607,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 541,
												"id": 611,
												"nodeType": "Return",
												"src": "1003:21:5"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "346:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:5"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "384:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:5"
									},
									"scope": 731,
									"src": "328:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "1210:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "1224:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 627,
												"nodeType": "IfStatement",
												"src": "1220:54:5",
												"trueBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "1236:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 620,
															"id": 625,
															"nodeType": "Return",
															"src": "1250:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "1283:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"id": 630,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 616,
													"src": "1298:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:5"
											},
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "1313:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 632,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"hexValue": "30",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:5"
											},
											{
												"body": {
													"id": 646,
													"nodeType": "Block",
													"src": "1359:57:5",
													"statements": [
														{
															"expression": {
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:5",
																"subExpression": {
																	"id": 639,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "1373:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:5"
														},
														{
															"expression": {
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 642,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "1395:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 645,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 636,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "1348:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"nodeType": "WhileStatement",
												"src": "1341:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "1444:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 650,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "1451:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 648,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															654,
															730
														],
														"referencedDeclaration": 730,
														"src": "1432:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 620,
												"id": 652,
												"nodeType": "Return",
												"src": "1425:33:5"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1195:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:5"
									},
									"scope": 731,
									"src": "1136:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "1678:351:5",
										"statements": [
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "1688:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 664,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 669,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "1724:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 666,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:5"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 675,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1745:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 677,
														"indexExpression": {
															"hexValue": "30",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:5"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 681,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1770:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 683,
														"indexExpression": {
															"hexValue": "31",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:5"
											},
											{
												"body": {
													"id": 715,
													"nodeType": "Block",
													"src": "1840:87:5",
													"statements": [
														{
															"expression": {
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 701,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "1854:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 703,
																	"indexExpression": {
																		"id": 702,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "1861:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 704,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "1866:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 708,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 705,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 657,
																			"src": "1879:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:5"
														},
														{
															"expression": {
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "1905:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 714,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 695,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "1828:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"initializationExpression": {
													"assignments": [
														688
													],
													"declarations": [
														{
															"constant": false,
															"id": 688,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 716,
															"src": "1800:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 687,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 694,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 690,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "1816:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:5",
														"subExpression": {
															"id": 698,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "1837:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 700,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 718,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "1944:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 726,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "2015:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 724,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 663,
												"id": 728,
												"nodeType": "Return",
												"src": "2001:21:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1609:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1624:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:5"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1663:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:5"
									},
									"scope": 731,
									"src": "1588:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 732,
							"src": "146:1885:5",
							"usedErrors": []
						}
					],
					"src": "86:1946:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							755
						],
						"IERC165": [
							767
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 733,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 734,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 768,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 736,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "754:7:6"
									},
									"id": 737,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 735,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								767
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										766
									],
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 746,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 748,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$767_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$767_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 747,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$767",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 745,
												"id": 752,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 742,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 739,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 755,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 756,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 760,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 767,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 768,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/ERC1155.sol",
					"exportedSymbols": {
						"ERC1155": [
							1402
						],
						"ERC1155TokenReceiver": [
							1446
						]
					},
					"id": 1447,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 770,
								"nodeType": "StructuredDocumentation",
								"src": "68:169:8",
								"text": "@notice Minimalist and gas efficient standard ERC1155 implementation.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)"
							},
							"fullyImplemented": false,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "ERC1155",
							"nameLocation": "255:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 782,
									"name": "TransferSingle",
									"nameLocation": "454:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "494:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "478:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "528:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "512:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "558:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "542:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "578:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "570:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "598:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "590:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:142:8"
									},
									"src": "448:163:8"
								},
								{
									"anonymous": false,
									"id": 796,
									"name": "TransferBatch",
									"nameLocation": "623:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "662:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "646:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "696:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "680:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "726:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "710:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "748:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 789,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "738:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 790,
													"nodeType": "ArrayTypeName",
													"src": "738:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"indexed": false,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "771:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "761:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 792,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "761:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 793,
													"nodeType": "ArrayTypeName",
													"src": "761:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:148:8"
									},
									"src": "617:168:8"
								},
								{
									"anonymous": false,
									"id": 804,
									"name": "ApprovalForAll",
									"nameLocation": "797:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "828:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "812:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "851:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "835:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "866:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "861:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:64:8"
									},
									"src": "791:85:8"
								},
								{
									"anonymous": false,
									"id": 810,
									"name": "URI",
									"nameLocation": "888:3:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "899:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "892:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "892:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "922:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "906:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:34:8"
									},
									"src": "882:44:8"
								},
								{
									"constant": false,
									"functionSelector": "00fdd58e",
									"id": 816,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "1171:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "1116:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 815,
										"keyType": {
											"id": 811,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1124:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1116:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 814,
											"keyType": {
												"id": 812,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1143:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1135:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 813,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1154:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e985e9c5",
									"id": 822,
									"mutability": "mutable",
									"name": "isApprovedForAll",
									"nameLocation": "1239:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "1187:68:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 821,
										"keyType": {
											"id": 817,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1195:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1187:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 820,
											"keyType": {
												"id": 818,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1214:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1206:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 819,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1225:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"functionSelector": "0e89341c",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1454:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1466:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1458:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:12:8"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1499:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 826,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1499:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:15:8"
									},
									"scope": 1402,
									"src": "1445:69:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "1778:128:8",
										"statements": [
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 836,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1788:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 840,
															"indexExpression": {
																"expression": {
																	"id": 837,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1805:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1805:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1788:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 841,
														"indexExpression": {
															"id": 839,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "1817:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1788:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 842,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "1829:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1788:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "1788:49:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1868:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1868:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "1880:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "1890:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 845,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "1853:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1853:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "EmitStatement",
												"src": "1848:51:8"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1712:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1738:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1730:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1753:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1748:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1748:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:33:8"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1778:0:8"
									},
									"scope": 1402,
									"src": "1703:203:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "2074:537:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 867,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2092:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2092:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 869,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "2106:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2092:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 871,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "2114:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 873,
																	"indexExpression": {
																		"id": 872,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "2131:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2114:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 876,
																"indexExpression": {
																	"expression": {
																		"id": 874,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2137:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2137:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2114:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2092:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f545f415554484f52495a4544",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2150:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															},
															"value": "NOT_AUTHORIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2084:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2084:83:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "2084:83:8"
											},
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 881,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "2178:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 884,
															"indexExpression": {
																"id": 882,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "2188:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2178:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 885,
														"indexExpression": {
															"id": 883,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "2194:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2178:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 886,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "2201:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2178:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "2178:29:8"
											},
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 889,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "2217:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 892,
															"indexExpression": {
																"id": 890,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "2227:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2217:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 893,
														"indexExpression": {
															"id": 891,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "2231:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2217:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 894,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "2238:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2217:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "2217:27:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 898,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2275:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2275:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "2287:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "2293:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "2297:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 903,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "2301:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "2260:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "EmitStatement",
												"src": "2255:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 907,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "2340:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "2340:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2340:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2358:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2340:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 922,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2456:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2456:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 924,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 855,
																			"src": "2468:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 925,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "2474:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 926,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "2478:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 927,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "2486:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 919,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 857,
																					"src": "2434:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 918,
																				"name": "ERC1155TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1446,
																				"src": "2413:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																					"typeString": "type(contract ERC1155TokenReceiver)"
																				}
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2413:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1446",
																				"typeString": "contract ERC1155TokenReceiver"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC1155Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1423,
																		"src": "2413:42:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2413:78:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 929,
																			"name": "ERC1155TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "2515:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																				"typeString": "type(contract ERC1155TokenReceiver)"
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC1155Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1423,
																		"src": "2515:38:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC1155TokenReceiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2515:47:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "2413:149:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2340:222:8",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 912,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "2378:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2392:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2384:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 913,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2384:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2384:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2378:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2576:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2319:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:285:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "2319:285:8"
											}
										]
									},
									"functionSelector": "f242432a",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1921:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1947:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1947:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1977:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1969:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1997:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1989:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2017:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2009:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2048:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2033:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2033:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:121:8"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:8"
									},
									"scope": 1402,
									"src": "1912:699:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "2808:1018:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 954,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "2826:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2826:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 956,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2840:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2840:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2826:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c454e4754485f4d49534d41544348",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2856:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															},
															"value": "LENGTH_MISMATCH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2818:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2818:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2818:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 963,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2893:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2893:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "2907:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2893:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 967,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "2915:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 969,
																	"indexExpression": {
																		"id": 968,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "2932:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2915:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 972,
																"indexExpression": {
																	"expression": {
																		"id": 970,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2938:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2938:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2915:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2893:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f545f415554484f52495a4544",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2951:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															},
															"value": "NOT_AUTHORIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															}
														],
														"id": 962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:83:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "2885:83:8"
											},
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "3058:2:8",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "3050:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3050:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"nodeType": "VariableDeclarationStatement",
												"src": "3050:10:8"
											},
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3078:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "3070:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3070:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"nodeType": "VariableDeclarationStatement",
												"src": "3070:14:8"
											},
											{
												"body": {
													"id": 1023,
													"nodeType": "Block",
													"src": "3133:314:8",
													"statements": [
														{
															"expression": {
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 991,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "3147:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 992,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "3152:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 994,
																	"indexExpression": {
																		"id": 993,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "3156:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3152:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3147:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "3147:11:8"
														},
														{
															"expression": {
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 997,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "3172:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 998,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "3181:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1000,
																	"indexExpression": {
																		"id": 999,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "3189:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3181:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3172:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "3172:19:8"
														},
														{
															"expression": {
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1003,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "3206:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1006,
																		"indexExpression": {
																			"id": 1004,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "3216:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3206:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1007,
																	"indexExpression": {
																		"id": 1005,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "3222:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3206:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1008,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "3229:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3206:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1010,
															"nodeType": "ExpressionStatement",
															"src": "3206:29:8"
														},
														{
															"expression": {
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1011,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "3249:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1014,
																		"indexExpression": {
																			"id": 1012,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "3259:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3249:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1015,
																	"indexExpression": {
																		"id": 1013,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "3263:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3249:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1016,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "3270:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3249:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1018,
															"nodeType": "ExpressionStatement",
															"src": "3249:27:8"
														},
														{
															"id": 1022,
															"nodeType": "UncheckedBlock",
															"src": "3391:46:8",
															"statements": [
																{
																	"expression": {
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "3419:3:8",
																		"subExpression": {
																			"id": 1019,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "3421:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1021,
																	"nodeType": "ExpressionStatement",
																	"src": "3419:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "3115:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 988,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3119:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3119:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3115:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"initializationExpression": {
													"assignments": [
														984
													],
													"declarations": [
														{
															"constant": false,
															"id": 984,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3108:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1024,
															"src": "3100:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 983,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3100:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 986,
													"initialValue": {
														"hexValue": "30",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3112:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3100:13:8"
												},
												"nodeType": "ForStatement",
												"src": "3095:352:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1026,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3476:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3476:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3494:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3498:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														{
															"id": 1031,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "3503:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1025,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3462:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "EmitStatement",
												"src": "3457:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1035,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "3543:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "3543:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3543:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3561:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3543:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1050,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3664:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3664:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1052,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "3676:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1053,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 945,
																			"src": "3682:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		{
																			"id": 1054,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "3687:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		{
																			"id": 1055,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "3696:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1047,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 942,
																					"src": "3637:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1046,
																				"name": "ERC1155TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1446,
																				"src": "3616:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																					"typeString": "type(contract ERC1155TokenReceiver)"
																				}
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3616:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1446",
																				"typeString": "contract ERC1155TokenReceiver"
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC1155BatchReceived",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1445,
																		"src": "3616:47:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3616:85:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1057,
																			"name": "ERC1155TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "3725:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																				"typeString": "type(contract ERC1155TokenReceiver)"
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC1155BatchReceived",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1445,
																		"src": "3725:43:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC1155TokenReceiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "3725:52:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "3616:161:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "3543:234:8",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1040,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "3581:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3595:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3587:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1041,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3587:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3587:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3581:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3791:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3522:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:297:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "3522:297:8"
											}
										]
									},
									"functionSelector": "2eb2c2d6",
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "2626:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2665:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2657:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2679:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2718:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2699:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 943,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2699:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 944,
													"nodeType": "ArrayTypeName",
													"src": "2699:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2750:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2731:26:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 946,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2731:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 947,
													"nodeType": "ArrayTypeName",
													"src": "2731:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2782:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2767:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2767:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:145:8"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2808:0:8"
									},
									"scope": 1402,
									"src": "2617:1209:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "3999:416:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1079,
																	"name": "owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "4017:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4017:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1081,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "4034:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4034:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4017:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c454e4754485f4d49534d41544348",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															},
															"value": "LENGTH_MISMATCH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4009:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4009:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "4009:55:8"
											},
											{
												"expression": {
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1087,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "4075:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1091,
																	"name": "owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "4100:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4100:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4086:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1088,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4090:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1089,
																"nodeType": "ArrayTypeName",
																"src": "4090:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4086:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4075:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "4075:39:8"
											},
											{
												"id": 1123,
												"nodeType": "UncheckedBlock",
												"src": "4256:153:8",
												"statements": [
													{
														"body": {
															"id": 1121,
															"nodeType": "Block",
															"src": "4324:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1107,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "4342:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1109,
																			"indexExpression": {
																				"id": 1108,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1097,
																				"src": "4351:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "4342:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1110,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "4356:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(uint256 => uint256))"
																					}
																				},
																				"id": 1114,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1111,
																						"name": "owners",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1069,
																						"src": "4366:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 1113,
																					"indexExpression": {
																						"id": 1112,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1097,
																						"src": "4373:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4366:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4356:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1118,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1115,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1072,
																					"src": "4377:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 1117,
																				"indexExpression": {
																					"id": 1116,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "4381:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4377:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4356:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4342:42:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1120,
																	"nodeType": "ExpressionStatement",
																	"src": "4342:42:8"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "4300:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1101,
																	"name": "owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "4304:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4304:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4300:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1122,
														"initializationExpression": {
															"assignments": [
																1097
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1097,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "4293:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1122,
																	"src": "4285:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4285:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1099,
															"initialValue": {
																"hexValue": "30",
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4297:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4285:13:8"
														},
														"loopExpression": {
															"expression": {
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "4319:3:8",
																"subExpression": {
																	"id": 1104,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "4321:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1106,
															"nodeType": "ExpressionStatement",
															"src": "4319:3:8"
														},
														"nodeType": "ForStatement",
														"src": "4280:119:8"
													}
												]
											}
										]
									},
									"functionSelector": "4e1273f4",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "3841:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "owners",
												"nameLocation": "3875:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "3856:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1067,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3856:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1068,
													"nodeType": "ArrayTypeName",
													"src": "3856:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3902:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "3883:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1070,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3883:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1071,
													"nodeType": "ArrayTypeName",
													"src": "3883:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3855:51:8"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "balances",
												"nameLocation": "3985:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "3968:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1074,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1075,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:27:8"
									},
									"scope": 1402,
									"src": "3832:583:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "4685:258:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1132,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "4714:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4729:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "4714:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1135,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "4789:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30786439623637613236",
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4804:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3652614694_by_1",
																	"typeString": "int_const 3652614694"
																},
																"value": "0xd9b67a26"
															},
															"src": "4789:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4714:100:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1139,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4865:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783065383933343163",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4880:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_243872796_by_1",
																"typeString": "int_const 243872796"
															},
															"value": "0x0e89341c"
														},
														"src": "4865:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4714:176:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1143,
												"nodeType": "Return",
												"src": "4695:195:8"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4612:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4637:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "4630:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1126,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4630:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:20:8"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "4679:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4679:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4678:6:8"
									},
									"scope": 1402,
									"src": "4603:340:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "5266:416:8",
										"statements": [
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1156,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "5276:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1159,
															"indexExpression": {
																"id": 1157,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "5286:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5276:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1160,
														"indexExpression": {
															"id": 1158,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "5290:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5276:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1161,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "5297:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5276:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "5276:27:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5334:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5334:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5354:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5346:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5346:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5346:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "5358:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "5362:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1173,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "5366:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1164,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "5319:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5319:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "EmitStatement",
												"src": "5314:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1177,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "5405:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "5405:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5405:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5423:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5405:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1192,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5521:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5521:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5541:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5533:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1194,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5533:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5533:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1198,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "5545:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1199,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "5549:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1200,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "5557:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1189,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "5499:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1188,
																				"name": "ERC1155TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1446,
																				"src": "5478:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																					"typeString": "type(contract ERC1155TokenReceiver)"
																				}
																			},
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5478:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1446",
																				"typeString": "contract ERC1155TokenReceiver"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC1155Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1423,
																		"src": "5478:42:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5478:84:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1202,
																			"name": "ERC1155TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "5586:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																				"typeString": "type(contract ERC1155TokenReceiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC1155Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1423,
																		"src": "5586:38:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC1155TokenReceiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "5586:47:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "5478:155:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "5405:228:8",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1182,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "5443:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5457:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5449:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1183,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5449:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5449:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5443:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5647:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 1176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5384:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:291:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "5384:291:8"
											}
										]
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5146:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5169:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "5161:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5189:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "5181:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5181:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5209:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "5201:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5238:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "5225:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5225:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5151:97:8"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:8"
									},
									"scope": 1402,
									"src": "5137:545:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "5842:782:8",
										"statements": [
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "idsLength",
														"nameLocation": "5860:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "5852:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5852:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1228,
												"initialValue": {
													"expression": {
														"id": 1226,
														"name": "ids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "5872:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5872:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1230,
																"name": "idsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "5918:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1231,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "5931:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5931:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5918:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c454e4754485f4d49534d41544348",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5947:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															},
															"value": "LENGTH_MISMATCH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5910:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5910:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "5910:55:8"
											},
											{
												"body": {
													"id": 1260,
													"nodeType": "Block",
													"src": "6013:220:8",
													"statements": [
														{
															"expression": {
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1244,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "6027:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1249,
																		"indexExpression": {
																			"id": 1245,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "6037:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6027:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1250,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1246,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1216,
																			"src": "6041:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1248,
																		"indexExpression": {
																			"id": 1247,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "6045:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6041:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6027:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1251,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "6052:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1253,
																	"indexExpression": {
																		"id": 1252,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "6060:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6052:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6027:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "6027:35:8"
														},
														{
															"id": 1259,
															"nodeType": "UncheckedBlock",
															"src": "6177:46:8",
															"statements": [
																{
																	"expression": {
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "6205:3:8",
																		"subExpression": {
																			"id": 1256,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "6207:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1258,
																	"nodeType": "ExpressionStatement",
																	"src": "6205:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1241,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "5996:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1242,
														"name": "idsLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "6000:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5996:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"initializationExpression": {
													"assignments": [
														1238
													],
													"declarations": [
														{
															"constant": false,
															"id": 1238,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5989:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1261,
															"src": "5981:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1237,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5981:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1240,
													"initialValue": {
														"hexValue": "30",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5993:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5981:13:8"
												},
												"nodeType": "ForStatement",
												"src": "5976:257:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6262:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6262:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6282:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6274:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6274:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6274:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "6286:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "6290:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1271,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "6295:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1262,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "6248:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6248:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "EmitStatement",
												"src": "6243:60:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1275,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "6335:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "6335:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6335:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6353:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6335:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1290,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6456:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6456:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6476:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6468:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1292,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6468:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6468:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1296,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1216,
																			"src": "6480:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		{
																			"id": 1297,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "6485:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		{
																			"id": 1298,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1221,
																			"src": "6494:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1287,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "6429:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1286,
																				"name": "ERC1155TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1446,
																				"src": "6408:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																					"typeString": "type(contract ERC1155TokenReceiver)"
																				}
																			},
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6408:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1446",
																				"typeString": "contract ERC1155TokenReceiver"
																			}
																		},
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC1155BatchReceived",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1445,
																		"src": "6408:47:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6408:91:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1300,
																			"name": "ERC1155TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "6523:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																				"typeString": "type(contract ERC1155TokenReceiver)"
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC1155BatchReceived",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1445,
																		"src": "6523:43:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC1155TokenReceiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6523:52:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "6408:167:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "6335:240:8",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1280,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "6373:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6387:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6379:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1281,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6379:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6379:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6373:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6589:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6314:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:303:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "6314:303:8"
											}
										]
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_batchMint",
									"nameLocation": "5697:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5725:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "5717:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5754:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "5737:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1214,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5737:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1215,
													"nodeType": "ArrayTypeName",
													"src": "5737:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "5784:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "5767:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1217,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5767:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1218,
													"nodeType": "ArrayTypeName",
													"src": "5767:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5814:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "5801:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5801:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5707:117:8"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5842:0:8"
									},
									"scope": 1402,
									"src": "5688:936:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "6759:472:8",
										"statements": [
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "idsLength",
														"nameLocation": "6777:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "6769:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1320,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6769:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"expression": {
														"id": 1322,
														"name": "ids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "6789:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6789:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6769:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1326,
																"name": "idsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "6835:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1327,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "6848:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6848:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6835:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c454e4754485f4d49534d41544348",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6864:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															},
															"value": "LENGTH_MISMATCH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
																"typeString": "literal_string \"LENGTH_MISMATCH\""
															}
														],
														"id": 1325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6827:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6827:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "6827:55:8"
											},
											{
												"body": {
													"id": 1356,
													"nodeType": "Block",
													"src": "6930:222:8",
													"statements": [
														{
															"expression": {
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1340,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "6944:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1345,
																		"indexExpression": {
																			"id": 1341,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "6954:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6944:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1346,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1342,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1314,
																			"src": "6960:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1344,
																		"indexExpression": {
																			"id": 1343,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "6964:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6960:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6944:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1347,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "6971:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1349,
																	"indexExpression": {
																		"id": 1348,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "6979:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6971:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6944:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "6944:37:8"
														},
														{
															"id": 1355,
															"nodeType": "UncheckedBlock",
															"src": "7096:46:8",
															"statements": [
																{
																	"expression": {
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "7124:3:8",
																		"subExpression": {
																			"id": 1352,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "7126:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1354,
																	"nodeType": "ExpressionStatement",
																	"src": "7124:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1337,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "6913:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1338,
														"name": "idsLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "6917:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6913:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1357,
												"initializationExpression": {
													"assignments": [
														1334
													],
													"declarations": [
														{
															"constant": false,
															"id": 1334,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6906:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1357,
															"src": "6898:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1333,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6898:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1336,
													"initialValue": {
														"hexValue": "30",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6910:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6898:13:8"
												},
												"nodeType": "ForStatement",
												"src": "6893:259:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7181:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7181:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "7193:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7207:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7199:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1362,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7199:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1366,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "7211:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1367,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "7216:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1358,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "7167:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7167:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "EmitStatement",
												"src": "7162:62:8"
											}
										]
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_batchBurn",
									"nameLocation": "6639:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6667:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "6659:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6698:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "6681:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1312,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6681:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1313,
													"nodeType": "ArrayTypeName",
													"src": "6681:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6728:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "6711:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1315,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6711:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1316,
													"nodeType": "ArrayTypeName",
													"src": "6711:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6649:92:8"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6759:0:8"
									},
									"scope": 1402,
									"src": "6630:601:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "7341:118:8",
										"statements": [
											{
												"expression": {
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1380,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "7351:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1383,
															"indexExpression": {
																"id": 1381,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "7361:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7351:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1384,
														"indexExpression": {
															"id": 1382,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "7367:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7351:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1385,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "7374:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7351:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "7351:29:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1389,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7411:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7411:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "7423:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7437:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7429:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7429:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7429:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "7441:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "7445:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1388,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7396:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "EmitStatement",
												"src": "7391:61:8"
											}
										]
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7246:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7269:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7261:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7291:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7283:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7283:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7311:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7303:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7303:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7251:72:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7341:0:8"
									},
									"scope": 1402,
									"src": "7237:222:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1447,
							"src": "237:7224:8",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC1155TokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1403,
								"nodeType": "StructuredDocumentation",
								"src": "7463:181:8",
								"text": "@notice A generic interface for a contract which properly accepts ERC1155 tokens.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)"
							},
							"fullyImplemented": true,
							"id": 1446,
							"linearizedBaseContracts": [
								1446
							],
							"name": "ERC1155TokenReceiver",
							"nameLocation": "7662:20:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "7848:71:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1418,
															"name": "ERC1155TokenReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "7865:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																"typeString": "type(contract ERC1155TokenReceiver)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1423,
														"src": "7865:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function ERC1155TokenReceiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "7865:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1421,
												"nodeType": "Return",
												"src": "7858:54:8"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "7698:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7725:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7742:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7742:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7759:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7759:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7776:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7776:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7715:98:8"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7840:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7840:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7839:8:8"
									},
									"scope": 1446,
									"src": "7689:230:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "8111:76:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1440,
															"name": "ERC1155TokenReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "8128:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1446_$",
																"typeString": "type(contract ERC1155TokenReceiver)"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1445,
														"src": "8128:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function ERC1155TokenReceiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "8128:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1443,
												"nodeType": "Return",
												"src": "8121:59:8"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "7934:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "7966:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7966:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "7983:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "8000:18:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1428,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8000:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1429,
													"nodeType": "ArrayTypeName",
													"src": "8000:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "8028:18:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1431,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8028:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1432,
													"nodeType": "ArrayTypeName",
													"src": "8028:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "8056:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8056:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7956:120:8"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "8103:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "8103:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8102:8:8"
									},
									"scope": 1446,
									"src": "7925:262:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1447,
							"src": "7644:545:8",
							"usedErrors": []
						}
					],
					"src": "42:8148:8"
				},
				"id": 8
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1834
						]
					},
					"id": 1835,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1448,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1449,
								"nodeType": "StructuredDocumentation",
								"src": "68:403:9",
								"text": "@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."
							},
							"fullyImplemented": true,
							"id": 1834,
							"linearizedBaseContracts": [
								1834
							],
							"name": "ERC20",
							"nameLocation": "489:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1457,
									"name": "Transfer",
									"nameLocation": "686:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "711:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "695:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "733:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "717:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "745:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "737:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:58:9"
									},
									"src": "680:73:9"
								},
								{
									"anonymous": false,
									"id": 1465,
									"name": "Approval",
									"nameLocation": "765:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "790:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "774:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "813:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "797:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "830:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "822:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:64:9"
									},
									"src": "759:79:9"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1467,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1042:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1028:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1466,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1028:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 1469,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "1067:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1053:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1468,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1053:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 1471,
									"mutability": "immutable",
									"name": "decimals",
									"nameLocation": "1103:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1080:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1470,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1080:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 1473,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "1316:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1301:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1472,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1301:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 1477,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "1369:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1334:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1476,
										"keyType": {
											"id": 1474,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1342:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1334:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1475,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1353:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 1483,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "1440:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1385:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1482,
										"keyType": {
											"id": 1478,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1393:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1385:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1481,
											"keyType": {
												"id": 1479,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1412:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1404:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1480,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1423:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1485,
									"mutability": "immutable",
									"name": "INITIAL_CHAIN_ID",
									"nameLocation": "1667:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1640:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1484,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1640:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1487,
									"mutability": "immutable",
									"name": "INITIAL_DOMAIN_SEPARATOR",
									"nameLocation": "1717:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1690:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1486,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 1491,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "1783:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1834,
									"src": "1748:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1490,
										"keyType": {
											"id": 1488,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1756:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1748:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1489,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1767:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "2081:189:9",
										"statements": [
											{
												"expression": {
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1500,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "2091:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1501,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "2098:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2091:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "2091:12:9"
											},
											{
												"expression": {
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1504,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "2113:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1505,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2122:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2113:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "2113:16:9"
											},
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1508,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "2139:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1509,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2150:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2139:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "2139:20:9"
											},
											{
												"expression": {
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1512,
														"name": "INITIAL_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "2170:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1513,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2189:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "2189:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2170:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "2170:32:9"
											},
											{
												"expression": {
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1517,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "2212:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1518,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "2239:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2239:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2212:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "2212:51:9"
											}
										]
									},
									"id": 1523,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2013:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1999:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1999:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2042:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2028:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "2065:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2059:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1496,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2059:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:91:9"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:9"
									},
									"scope": 1834,
									"src": "1978:292:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "2538:131:9",
										"statements": [
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1532,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "2548:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1536,
															"indexExpression": {
																"expression": {
																	"id": 1533,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2558:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2548:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1537,
														"indexExpression": {
															"id": 1535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "2570:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2548:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1538,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "2581:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2548:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "2548:39:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1542,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2612:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2612:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1544,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "2624:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "2633:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1541,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "2603:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2603:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "EmitStatement",
												"src": "2598:42:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2658:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1531,
												"id": 1549,
												"nodeType": "Return",
												"src": "2651:11:9"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2467:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2483:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "2475:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2500:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "2492:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:33:9"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "2532:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2532:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2531:6:9"
									},
									"scope": 1834,
									"src": "2458:211:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "2751:297:9",
										"statements": [
											{
												"expression": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1560,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "2761:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1563,
														"indexExpression": {
															"expression": {
																"id": 1561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2771:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2771:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2761:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1564,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "2786:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2761:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "2761:31:9"
											},
											{
												"id": 1573,
												"nodeType": "UncheckedBlock",
												"src": "2914:58:9",
												"statements": [
													{
														"expression": {
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1567,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "2938:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1569,
																"indexExpression": {
																	"id": 1568,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "2948:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "2938:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1570,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "2955:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2938:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1572,
														"nodeType": "ExpressionStatement",
														"src": "2938:23:9"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2996:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2996:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1577,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "3008:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1578,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "3012:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1574,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "2987:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2987:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1580,
												"nodeType": "EmitStatement",
												"src": "2982:37:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3037:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1559,
												"id": 1582,
												"nodeType": "Return",
												"src": "3030:11:9"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2684:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2693:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2705:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:28:9"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2745:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2745:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2744:6:9"
									},
									"scope": 1834,
									"src": "2675:373:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1644,
										"nodeType": "Block",
										"src": "3178:468:9",
										"statements": [
											{
												"assignments": [
													1596
												],
												"declarations": [
													{
														"constant": false,
														"id": 1596,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "3196:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "3188:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3188:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1597,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3206:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1599,
														"indexExpression": {
															"id": 1598,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "3216:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3206:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1602,
													"indexExpression": {
														"expression": {
															"id": 1600,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3222:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3222:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3206:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3188:45:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1604,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "3284:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3300:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1606,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3300:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1605,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3295:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3295:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3295:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3284:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1622,
												"nodeType": "IfStatement",
												"src": "3280:80:9",
												"trueBody": {
													"expression": {
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1611,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "3314:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1615,
																"indexExpression": {
																	"id": 1612,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "3324:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3314:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1616,
															"indexExpression": {
																"expression": {
																	"id": 1613,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3330:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3330:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "3314:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1617,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3344:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1618,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "3354:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3344:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3314:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1621,
													"nodeType": "ExpressionStatement",
													"src": "3314:46:9"
												}
											},
											{
												"expression": {
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1623,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "3371:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1625,
														"indexExpression": {
															"id": 1624,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "3381:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3371:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1626,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "3390:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3371:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "3371:25:9"
											},
											{
												"id": 1635,
												"nodeType": "UncheckedBlock",
												"src": "3518:58:9",
												"statements": [
													{
														"expression": {
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1629,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "3542:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1631,
																"indexExpression": {
																	"id": 1630,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "3552:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3542:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1632,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "3559:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3542:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1634,
														"nodeType": "ExpressionStatement",
														"src": "3542:23:9"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "3600:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "3606:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "3610:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1636,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "3591:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3591:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "EmitStatement",
												"src": "3586:31:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3635:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1594,
												"id": 1643,
												"nodeType": "Return",
												"src": "3628:11:9"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3063:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3093:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3085:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3085:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3115:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3107:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3135:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3127:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:72:9"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3172:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3172:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:6:9"
									},
									"scope": 1834,
									"src": "3054:592:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "4024:1294:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1663,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "4042:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1664,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4054:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4054:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4042:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5045524d49545f444541444c494e455f45585049524544",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4071:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															},
															"value": "PERMIT_DEADLINE_EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															}
														],
														"id": 1662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4034:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "4034:63:9"
											},
											{
												"id": 1724,
												"nodeType": "UncheckedBlock",
												"src": "4238:1027:9",
												"statements": [
													{
														"assignments": [
															1671
														],
														"declarations": [
															{
																"constant": false,
																"id": 1671,
																"mutability": "mutable",
																"name": "recoveredAddress",
																"nameLocation": "4270:16:9",
																"nodeType": "VariableDeclaration",
																"scope": 1724,
																"src": "4262:24:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1670,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4262:7:9",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1701,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "1901",
																					"id": 1676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4389:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					"value": "\u0019\u0001"
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1677,
																						"name": "DOMAIN_SEPARATOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1747,
																						"src": "4425:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																							"typeString": "function () view returns (bytes32)"
																						}
																					},
																					"id": 1678,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4425:18:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
																											"id": 1683,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4599:84:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											},
																											"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											}
																										],
																										"id": 1682,
																										"name": "keccak256",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967288,
																										"src": "4552:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																											"typeString": "function (bytes memory) pure returns (bytes32)"
																										}
																									},
																									"id": 1684,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4552:165:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 1685,
																									"name": "owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1647,
																									"src": "4751:5:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1686,
																									"name": "spender",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1649,
																									"src": "4790:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1687,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1651,
																									"src": "4831:5:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 1691,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "++",
																									"prefix": false,
																									"src": "4870:15:9",
																									"subExpression": {
																										"baseExpression": {
																											"id": 1688,
																											"name": "nonces",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1491,
																											"src": "4870:6:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																												"typeString": "mapping(address => uint256)"
																											}
																										},
																										"id": 1690,
																										"indexExpression": {
																											"id": 1689,
																											"name": "owner",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1647,
																											"src": "4877:5:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "4870:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 1692,
																									"name": "deadline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1653,
																									"src": "4919:8:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 1680,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967295,
																									"src": "4508:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 1681,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "encode",
																								"nodeType": "MemberAccess",
																								"src": "4508:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 1693,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4508:449:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 1679,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "4469:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 1694,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4469:514:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 1674,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4347:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4347:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4347:658:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1673,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4316:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4316:707:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1697,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "5041:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1698,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "5060:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1699,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "5079:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1672,
																"name": "ecrecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967290,
																"src": "4289:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4289:805:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4262:832:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1703,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "5117:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1706,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5145:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5137:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1704,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5137:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5137:10:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5117:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1709,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "5151:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1710,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1647,
																			"src": "5171:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5151:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5117:59:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "494e56414c49445f5349474e4552",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5178:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	},
																	"value": "INVALID_SIGNER"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	}
																],
																"id": 1702,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5109:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5109:86:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1715,
														"nodeType": "ExpressionStatement",
														"src": "5109:86:9"
													},
													{
														"expression": {
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1716,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "5210:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1719,
																	"indexExpression": {
																		"id": 1717,
																		"name": "recoveredAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "5220:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5210:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1720,
																"indexExpression": {
																	"id": 1718,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "5238:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5210:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1721,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "5249:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5210:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1723,
														"nodeType": "ExpressionStatement",
														"src": "5210:44:9"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1726,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "5289:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1727,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "5296:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "5305:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1725,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "5280:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "EmitStatement",
												"src": "5275:36:9"
											}
										]
									},
									"functionSelector": "d505accf",
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3844:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3868:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3860:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3891:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3883:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3883:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3916:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3908:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3939:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3931:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3963:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3957:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1654,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3957:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3982:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3974:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3974:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4001:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3993:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:158:9"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4024:0:9"
									},
									"scope": 1834,
									"src": "3835:1483:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "5390:111:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1737,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5407:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5407:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1739,
															"name": "INITIAL_CHAIN_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "5424:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5407:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1742,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "5470:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5470:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5407:87:9",
													"trueExpression": {
														"id": 1741,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "5443:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1736,
												"id": 1745,
												"nodeType": "Return",
												"src": "5400:94:9"
											}
										]
									},
									"functionSelector": "3644e515",
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5333:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5349:2:9"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5381:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5380:9:9"
									},
									"scope": 1834,
									"src": "5324:177:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "5581:372:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																			"id": 1756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5679:84:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			},
																			"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			}
																		],
																		"id": 1755,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5669:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5669:95:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1761,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "5802:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5796:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1759,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "5796:5:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5796:11:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 1758,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5786:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5786:22:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5840:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			}
																		],
																		"id": 1764,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5830:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5830:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1767,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5866:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "5866:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1771,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5909:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$1834",
																				"typeString": "contract ERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ERC20_$1834",
																				"typeString": "contract ERC20"
																			}
																		],
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5901:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1769,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5901:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5901:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1753,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5637:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5637:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5637:295:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1752,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5610:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:336:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1751,
												"id": 1775,
												"nodeType": "Return",
												"src": "5591:355:9"
											}
										]
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeDomainSeparator",
									"nameLocation": "5516:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5538:2:9"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "5572:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1749,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:9:9"
									},
									"scope": 1834,
									"src": "5507:446:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "6207:265:9",
										"statements": [
											{
												"expression": {
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1784,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "6217:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1785,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "6232:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6217:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "6217:21:9"
											},
											{
												"id": 1794,
												"nodeType": "UncheckedBlock",
												"src": "6360:58:9",
												"statements": [
													{
														"expression": {
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1788,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "6384:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1790,
																"indexExpression": {
																	"id": 1789,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "6394:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6384:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1791,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "6401:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6384:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1793,
														"nodeType": "ExpressionStatement",
														"src": "6384:23:9"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6450:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6442:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1796,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6442:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6442:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1800,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "6454:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1801,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "6458:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1795,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "6433:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6433:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "EmitStatement",
												"src": "6428:37:9"
											}
										]
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6156:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6170:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "6162:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6162:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6182:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "6174:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6161:28:9"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6207:0:9"
									},
									"scope": 1834,
									"src": "6147:325:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "6540:266:9",
										"statements": [
											{
												"expression": {
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1812,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "6550:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1814,
														"indexExpression": {
															"id": 1813,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "6560:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6550:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1815,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "6569:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6550:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1817,
												"nodeType": "ExpressionStatement",
												"src": "6550:25:9"
											},
											{
												"id": 1822,
												"nodeType": "UncheckedBlock",
												"src": "6694:56:9",
												"statements": [
													{
														"expression": {
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1818,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "6718:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1819,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "6733:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6718:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1821,
														"nodeType": "ExpressionStatement",
														"src": "6718:21:9"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1824,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "6774:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6788:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6780:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1825,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6780:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1829,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "6792:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1823,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "6765:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "EmitStatement",
												"src": "6760:39:9"
											}
										]
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6487:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6501:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "6493:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6515:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "6507:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6492:30:9"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6540:0:9"
									},
									"scope": 1834,
									"src": "6478:328:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1835,
							"src": "471:6337:9",
							"usedErrors": []
						}
					],
					"src": "42:6767:9"
				},
				"id": 9
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							454
						],
						"Ownable": [
							1939
						]
					},
					"id": 1940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1940,
							"sourceUnit": 455,
							"src": "112:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1839,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "689:7:10"
									},
									"id": 1840,
									"nodeType": "InheritanceSpecifier",
									"src": "689:7:10"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1838,
								"nodeType": "StructuredDocumentation",
								"src": "165:494:10",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1939,
							"linearizedBaseContracts": [
								1939,
								454
							],
							"name": "Ownable",
							"nameLocation": "678:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1842,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "719:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1939,
									"src": "703:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1841,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1848,
									"name": "OwnershipTransferred",
									"nameLocation": "738:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "775:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "759:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "806:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "790:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:57:10"
									},
									"src": "732:84:10"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "932:49:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1853,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "961:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1852,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "942:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "942:32:10"
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "822:91:10",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1858,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:2:10"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:10"
									},
									"scope": 1939,
									"src": "918:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1866,
										"nodeType": "Block",
										"src": "1112:30:10",
										"statements": [
											{
												"expression": {
													"id": 1864,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1842,
													"src": "1129:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1863,
												"id": 1865,
												"nodeType": "Return",
												"src": "1122:13:10"
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "987:65:10",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1066:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:2:10"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "1103:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:9:10"
									},
									"scope": 1939,
									"src": "1057:85:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "1251:96:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1871,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "1269:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1269:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1873,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "1280:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1280:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1269:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1294:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1261:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1261:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "1261:68:10"
											},
											{
												"id": 1879,
												"nodeType": "PlaceholderStatement",
												"src": "1339:1:10"
											}
										]
									},
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "1148:77:10",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1881,
									"name": "onlyOwner",
									"nameLocation": "1239:9:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1248:2:10"
									},
									"src": "1230:117:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "1743:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1780:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1772:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1772:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1772:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1887,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "1753:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1753:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "1753:30:10"
											}
										]
									},
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "1353:331:10",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1885,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1884,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1881,
												"src": "1733:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1733:9:10"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1698:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:2:10"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:0:10"
									},
									"scope": 1939,
									"src": "1689:101:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "2009:128:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "2027:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2047:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2039:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1905,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2039:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2039:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2027:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2051:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2019:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "2019:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1914,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "2121:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1913,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "2102:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2102:28:10"
											}
										]
									},
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "1796:138:10",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1901,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1900,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1881,
												"src": "1999:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1999:9:10"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1948:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1974:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1966:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:18:10"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2009:0:10"
									},
									"scope": 1939,
									"src": "1939:198:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "2354:124:10",
										"statements": [
											{
												"assignments": [
													1925
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2372:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "2364:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1924,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2364:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1927,
												"initialValue": {
													"id": 1926,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1842,
													"src": "2383:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2364:25:10"
											},
											{
												"expression": {
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1928,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "2399:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1929,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "2408:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2399:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "2399:17:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1933,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2452:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1934,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "2462:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1932,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "2431:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2431:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "EmitStatement",
												"src": "2426:45:10"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "2143:143:10",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2300:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2327:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2319:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:18:10"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:0:10"
									},
									"scope": 1939,
									"src": "2291:187:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1940,
							"src": "660:1820:10",
							"usedErrors": []
						}
					],
					"src": "87:2394:10"
				},
				"id": 10
			},
			"contracts/SafeTransferLib.sol": {
				"ast": {
					"absolutePath": "contracts/SafeTransferLib.sol",
					"exportedSymbols": {
						"ERC20": [
							1834
						],
						"SafeTransferLib": [
							2031
						]
					},
					"id": 2032,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1941,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:11"
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2032,
							"sourceUnit": 1835,
							"src": "68:21:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeTransferLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1943,
								"nodeType": "StructuredDocumentation",
								"src": "91:471:11",
								"text": "@notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\n @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\n @dev Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller."
							},
							"fullyImplemented": true,
							"id": 2031,
							"linearizedBaseContracts": [
								2031
							],
							"name": "SafeTransferLib",
							"nameLocation": "571:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1951,
									"name": "Debug",
									"nameLocation": "599:5:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"indexed": false,
												"mutability": "mutable",
												"name": "one",
												"nameLocation": "610:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "605:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "605:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"indexed": false,
												"mutability": "mutable",
												"name": "two",
												"nameLocation": "620:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "615:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"indexed": false,
												"mutability": "mutable",
												"name": "retsize",
												"nameLocation": "633:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "625:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:37:11"
									},
									"src": "593:49:11"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "893:234:11",
										"statements": [
											{
												"assignments": [
													1959
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "908:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "903:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1958,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "903:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"nodeType": "VariableDeclarationStatement",
												"src": "903:12:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "935:136:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1015:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1031:5:11"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "1038:2:11"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "1042:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1050:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1053:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1056:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1026:35:11"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "1015:7:11"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1955,
														"isOffset": false,
														"isSlot": false,
														"src": "1042:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1959,
														"isOffset": false,
														"isSlot": false,
														"src": "1015:7:11",
														"valueSize": 1
													},
													{
														"declaration": 1953,
														"isOffset": false,
														"isSlot": false,
														"src": "1038:2:11",
														"valueSize": 1
													}
												],
												"id": 1961,
												"nodeType": "InlineAssembly",
												"src": "926:145:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1963,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "1089:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4554485f5452414e534645525f4641494c4544",
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1098:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															},
															"value": "ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															}
														],
														"id": 1962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1081:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "1081:39:11"
											}
										]
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "840:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "864:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "856:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "876:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "868:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:28:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:11"
									},
									"scope": 2031,
									"src": "831:296:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "1445:1445:11",
										"statements": [
											{
												"assignments": [
													1981
												],
												"declarations": [
													{
														"constant": false,
														"id": 1981,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1460:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "1455:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1980,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1455:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"nodeType": "VariableDeclarationStatement",
												"src": "1455:12:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1487:1346:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1551:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1582:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1576:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:11:11"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "1555:17:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "1705:17:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1724:66:11",
																		"type": "",
																		"value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1698:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1698:93:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "1815:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1834:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1811:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1811:25:11"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "1838:4:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1804:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1804:39:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "1898:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:2:11",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1894:26:11"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "1922:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1887:38:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "1978:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1997:2:11",
																				"type": "",
																				"value": "68"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1974:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1974:26:11"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "2002:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1967:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:42:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1967:42:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2056:767:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2283:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2277:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2277:8:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2287:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "2274:2:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2274:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "2294:14:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2294:16:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2312:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "2291:2:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2291:24:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2270:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2270:46:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "2325:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2325:16:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2318:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2318:24:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2267:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2267:76:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "2762:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2762:5:11"
																			},
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "2769:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2776:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "2779:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2798:3:11",
																				"type": "",
																				"value": "100"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2803:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2806:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "2757:4:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:52:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2067:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2067:756:11"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "2056:7:11"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1977,
														"isOffset": false,
														"isSlot": false,
														"src": "2002:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1973,
														"isOffset": false,
														"isSlot": false,
														"src": "1838:4:11",
														"valueSize": 1
													},
													{
														"declaration": 1981,
														"isOffset": false,
														"isSlot": false,
														"src": "2056:7:11",
														"valueSize": 1
													},
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": false,
														"src": "1922:2:11",
														"valueSize": 1
													},
													{
														"declaration": 1971,
														"isOffset": false,
														"isSlot": false,
														"src": "2769:5:11",
														"valueSize": 1
													}
												],
												"id": 1983,
												"nodeType": "InlineAssembly",
												"src": "1478:1355:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1985,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "2851:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f46524f4d5f4641494c4544",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2860:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															},
															"value": "TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2843:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "2843:40:11"
											}
										]
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1326:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1358:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "1352:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1834",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1970,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1969,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1834,
														"src": "1352:5:11"
													},
													"referencedDeclaration": 1834,
													"src": "1352:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1834",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1381:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "1373:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1403:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "1395:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1423:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "1415:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:93:11"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:11"
									},
									"scope": 2031,
									"src": "1317:1573:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2009,
										"nodeType": "Block",
										"src": "2998:1354:11",
										"statements": [
											{
												"assignments": [
													2001
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3013:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2009,
														"src": "3008:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2000,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3008:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2002,
												"nodeType": "VariableDeclarationStatement",
												"src": "3008:12:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3040:1260:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3104:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3135:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3129:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:11:11"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "3108:17:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "3258:17:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3277:66:11",
																		"type": "",
																		"value": "0xa9059cbb00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3251:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3251:93:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "3368:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3387:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3364:25:11"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "3391:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3357:37:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "3447:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3466:2:11",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:26:11"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "3471:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3436:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3436:42:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3436:42:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3525:765:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3752:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3746:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3746:8:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3756:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "3743:2:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3743:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "3763:14:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3763:16:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3781:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "3760:2:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3760:24:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3739:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3739:46:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "3794:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3794:16:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3787:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3787:24:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3736:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:76:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "4230:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4230:5:11"
																			},
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "4237:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4244:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "4247:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4266:2:11",
																				"type": "",
																				"value": "68"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4270:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "4225:4:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4225:51:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3536:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3536:754:11"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "3525:7:11"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1997,
														"isOffset": false,
														"isSlot": false,
														"src": "3471:6:11",
														"valueSize": 1
													},
													{
														"declaration": 2001,
														"isOffset": false,
														"isSlot": false,
														"src": "3525:7:11",
														"valueSize": 1
													},
													{
														"declaration": 1995,
														"isOffset": false,
														"isSlot": false,
														"src": "3391:2:11",
														"valueSize": 1
													},
													{
														"declaration": 1993,
														"isOffset": false,
														"isSlot": false,
														"src": "4237:5:11",
														"valueSize": 1
													}
												],
												"id": 2003,
												"nodeType": "InlineAssembly",
												"src": "3031:1269:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2005,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "4318:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f4641494c4544",
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4327:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															},
															"value": "TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															}
														],
														"id": 2004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4310:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4310:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "4310:35:11"
											}
										]
									},
									"id": 2010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "2905:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2933:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "2927:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1834",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1991,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1834,
														"src": "2927:5:11"
													},
													"referencedDeclaration": 1834,
													"src": "2927:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1834",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2956:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "2948:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2948:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2976:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "2968:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2917:71:11"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2998:0:11"
									},
									"scope": 2031,
									"src": "2896:1456:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "4459:1353:11",
										"statements": [
											{
												"assignments": [
													2021
												],
												"declarations": [
													{
														"constant": false,
														"id": 2021,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4474:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "4469:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2020,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4469:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"nodeType": "VariableDeclarationStatement",
												"src": "4469:12:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4501:1260:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4565:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4596:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4590:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:11:11"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "4569:17:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "4719:17:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4738:66:11",
																		"type": "",
																		"value": "0x095ea7b300000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:93:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "4829:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4848:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4825:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4825:25:11"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "4852:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4818:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4818:37:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "4908:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4927:2:11",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4904:26:11"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "4932:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:42:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4897:42:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4986:765:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5213:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5207:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5207:8:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5217:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "5204:2:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5204:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "5224:14:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5224:16:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5242:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "5221:2:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5221:24:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5200:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5200:46:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "5255:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5255:16:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5248:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5248:24:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5197:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5197:76:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "5691:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5691:5:11"
																			},
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "5698:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5705:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "5708:17:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5727:2:11",
																				"type": "",
																				"value": "68"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5731:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5734:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "5686:4:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:51:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4997:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:754:11"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "4986:7:11"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2017,
														"isOffset": false,
														"isSlot": false,
														"src": "4932:6:11",
														"valueSize": 1
													},
													{
														"declaration": 2021,
														"isOffset": false,
														"isSlot": false,
														"src": "4986:7:11",
														"valueSize": 1
													},
													{
														"declaration": 2015,
														"isOffset": false,
														"isSlot": false,
														"src": "4852:2:11",
														"valueSize": 1
													},
													{
														"declaration": 2013,
														"isOffset": false,
														"isSlot": false,
														"src": "5698:5:11",
														"valueSize": 1
													}
												],
												"id": 2023,
												"nodeType": "InlineAssembly",
												"src": "4492:1269:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2025,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "5779:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415050524f56455f4641494c4544",
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5788:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															},
															"value": "APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															}
														],
														"id": 2024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5771:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5771:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "5771:34:11"
											}
										]
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "4367:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4394:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "4388:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1834",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 2012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2011,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1834,
														"src": "4388:5:11"
													},
													"referencedDeclaration": 1834,
													"src": "4388:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1834",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4417:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "4409:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4437:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "4429:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:71:11"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:11"
									},
									"scope": 2031,
									"src": "4358:1454:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2032,
							"src": "563:5251:11",
							"usedErrors": []
						}
					],
					"src": "42:5773:11"
				},
				"id": 11
			},
			"contracts/Test Mint Pass v12A.sol": {
				"ast": {
					"absolutePath": "contracts/Test Mint Pass v12A.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							454
						],
						"Counters": [
							528
						],
						"ERC1155": [
							1402
						],
						"ERC1155TokenReceiver": [
							1446
						],
						"ERC165": [
							755
						],
						"ERC20": [
							1834
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							767
						],
						"NoEthBalance": [
							2035
						],
						"Ownable": [
							1939
						],
						"ReentrancyGuard": [
							432
						],
						"SafeTransferLib": [
							2031
						],
						"Strings": [
							731
						],
						"TestMintPassv12A": [
							2316
						]
					},
					"id": 2317,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2033,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:12"
						},
						{
							"id": 2035,
							"name": "NoEthBalance",
							"nameLocation": "74:12:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 2034,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "86:2:12"
							},
							"src": "68:21:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2036,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 320,
							"src": "91:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 2037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 1447,
							"src": "150:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 1940,
							"src": "174:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 732,
							"src": "198:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 529,
							"src": "250:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 433,
							"src": "303:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeTransferLib.sol",
							"file": "./SafeTransferLib.sol",
							"id": 2042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 2032,
							"src": "366:31:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2044,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1402,
										"src": "531:7:12"
									},
									"id": 2045,
									"nodeType": "InheritanceSpecifier",
									"src": "531:7:12"
								},
								{
									"baseName": {
										"id": 2046,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1939,
										"src": "540:7:12"
									},
									"id": 2047,
									"nodeType": "InheritanceSpecifier",
									"src": "540:7:12"
								}
							],
							"canonicalName": "TestMintPassv12A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2043,
								"nodeType": "StructuredDocumentation",
								"src": "460:41:12",
								"text": "@title TestMintPassv12A\n @author "
							},
							"fullyImplemented": true,
							"id": 2316,
							"linearizedBaseContracts": [
								2316,
								1939,
								454,
								1402
							],
							"name": "TestMintPassv12A",
							"nameLocation": "511:16:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 2049,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "751:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "737:18:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2048,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "737:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 2051,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "775:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "761:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2050,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "761:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "430bf08a",
									"id": 2053,
									"mutability": "mutable",
									"name": "vaultAddress",
									"nameLocation": "802:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "787:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2052,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "787:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f48deaaa",
									"id": 2056,
									"mutability": "immutable",
									"name": "Test_Mint_Pass_BlackMaxSupply",
									"nameLocation": "1024:29:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "999:60:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2054,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "999:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313636",
										"id": 2055,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1056:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_166_by_1",
											"typeString": "int_const 166"
										},
										"value": "166"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45114990",
									"id": 2059,
									"mutability": "immutable",
									"name": "Test_Mint_Pass_BlueMaxSupply",
									"nameLocation": "1090:28:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1065:59:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2057,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1065:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333330",
										"id": 2058,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1121:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_330_by_1",
											"typeString": "int_const 330"
										},
										"value": "330"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dec125ba",
									"id": 2062,
									"mutability": "immutable",
									"name": "Test_Mint_Pass_BlackScholarshipTotal",
									"nameLocation": "1155:36:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1130:66:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2060,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1130:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3137",
										"id": 2061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1194:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "17"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df52fa84",
									"id": 2065,
									"mutability": "immutable",
									"name": "Test_Mint_Pass_BlueScholarshipTotal",
									"nameLocation": "1227:35:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1202:65:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2063,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1202:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3333",
										"id": 2064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1265:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "33"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e3cf643",
									"id": 2068,
									"mutability": "immutable",
									"name": "Test_Mint_Pass_BlackTokenId",
									"nameLocation": "1299:27:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1274:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2066,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1274:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2067,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1329:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "71d05aec",
									"id": 2071,
									"mutability": "immutable",
									"name": "Test_Mint_Pass_BlueTokenId",
									"nameLocation": "1361:26:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1336:55:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2069,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1336:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2070,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cbf99084",
									"id": 2074,
									"mutability": "constant",
									"name": "Test_Mint_Pass_Black",
									"nameLocation": "1421:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1397:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2072,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1397:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1444:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cc2851c6",
									"id": 2077,
									"mutability": "constant",
									"name": "Test_Mint_Pass_Blue",
									"nameLocation": "1475:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1451:47:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2075,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1451:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1497:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2081,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1716:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1680:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2080,
										"keyType": {
											"id": 2078,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1688:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1680:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 2079,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1699:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c87b56dd",
									"id": 2085,
									"mutability": "mutable",
									"name": "tokenURI",
									"nameLocation": "1768:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1734:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2084,
										"keyType": {
											"id": 2082,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1742:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1734:26:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 2083,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1753:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9fa3cda1",
									"id": 2089,
									"mutability": "mutable",
									"name": "TestMintPassBlueMinted",
									"nameLocation": "1817:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1782:57:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2088,
										"keyType": {
											"id": 2086,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1790:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1782:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2087,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1801:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b22f540",
									"id": 2093,
									"mutability": "mutable",
									"name": "TestMintPassBlackMinted",
									"nameLocation": "1880:23:12",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "1845:58:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2092,
										"keyType": {
											"id": 2090,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1853:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1845:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2091,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1864:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "2297:478:12",
										"statements": [
											{
												"expression": {
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2106,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "2307:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54657374204d696e7420506173732076313241",
														"id": 2107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2315:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_04d9efb331124c6aff5691afdd8ed473897a1c60d8f5c893d1905c78c967e66f",
															"typeString": "literal_string \"Test Mint Pass v12A\""
														},
														"value": "Test Mint Pass v12A"
													},
													"src": "2307:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "2307:29:12"
											},
											{
												"expression": {
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2110,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "2346:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "262331303034373b544d5056313049",
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2356:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_0fc36c275aeb2b4f1012dfa75c6db5f5bcf0698a5d9fe08a93fd6764425ccdb1",
															"typeString": "literal_string \"&#10047;TMPV10I\""
														},
														"value": "&#10047;TMPV10I"
													},
													"src": "2346:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "2346:27:12"
											},
											{
												"expression": {
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2114,
														"name": "_vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "2523:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307843383342654261343733446436426431383930353139456530454565326143344661353833364235",
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2539:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xC83BeBa473Dd6Bd1890519Ee0EEe2aC4Fa5836B5"
													},
													"src": "2523:58:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "2523:58:12"
											},
											{
												"expression": {
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2118,
														"name": "_TestMintPassBlueTokenUri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "2591:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "697066733a2f2f516d6346335572575076796e3935515731427539325a6a365576465a39534a475538466d70465846643665786548",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2619:55:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_81e3e779d26b52f3b70cf1f316856bf926a1e9c7fa506456d5d886df98517a32",
															"typeString": "literal_string \"ipfs://QmcF3UrWPvyn95QW1Bu92Zj6UvFZ9SJGU8FmpFXFd6exeH\""
														},
														"value": "ipfs://QmcF3UrWPvyn95QW1Bu92Zj6UvFZ9SJGU8FmpFXFd6exeH"
													},
													"src": "2591:83:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "2591:83:12"
											},
											{
												"expression": {
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2122,
														"name": "_TestMintPassBlackTokenUri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "2684:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "697066733a2f2f516d51504845686e6a7452476f326d6875475670556855717a70715a4d373733626169435274364159566e38796b",
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2713:55:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_013979db04d5eaac7dba88b615b122267c4942f2d42bac3828de122531ec347e",
															"typeString": "literal_string \"ipfs://QmQPHEhnjtRGo2mhuGVpUhUqzpqZM773baiCRt6AYVn8yk\""
														},
														"value": "ipfs://QmQPHEhnjtRGo2mhuGVpUhUqzpqZM773baiCRt6AYVn8yk"
													},
													"src": "2684:84:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "2684:84:12"
											}
										]
									},
									"id": 2127,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2124:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "2110:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2110:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2153:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "2139:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2096,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2139:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "_vaultAddress",
												"nameLocation": "2178:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "2170:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "_TestMintPassBlackTokenUri",
												"nameLocation": "2215:26:12",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "2201:40:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2201:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "_TestMintPassBlueTokenUri",
												"nameLocation": "2265:25:12",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "2251:39:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2251:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:196:12"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:12"
									},
									"scope": 2316,
									"src": "2089:686:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "2961:40:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2135,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "2978:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2137,
													"indexExpression": {
														"id": 2136,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "2991:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2978:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2134,
												"id": 2138,
												"nodeType": "Return",
												"src": "2971:23:12"
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "2781:104:12",
										"text": "@notice totalSupply of a token ID\n @param id is the ID, either generalTokenId or blackTokenId"
									},
									"functionSelector": "bd85b039",
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2899:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2919:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2911:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:12:12"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2952:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:9:12"
									},
									"scope": 2316,
									"src": "2890:111:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "3451:49:12",
										"statements": [
											{
												"expression": {
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2150,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "3461:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2152,
														"indexExpression": {
															"id": 2151,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "3470:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3461:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2153,
														"name": "_newTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "3481:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3461:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "3461:32:12"
											}
										]
									},
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "3193:158:12",
										"text": "@notice function to change the tokenURI\n @param _newTokenURI this is the new token uri\n @param tokenId this is the token ID that will be set"
									},
									"functionSelector": "09a3beef",
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2147,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1881,
												"src": "3437:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3437:9:12"
										}
									],
									"name": "setTokenURI",
									"nameLocation": "3365:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "_newTokenURI",
												"nameLocation": "3391:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3377:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3377:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3413:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3405:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3405:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:45:12"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3451:0:12"
									},
									"scope": 2316,
									"src": "3356:144:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "3649:231:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2166,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "3687:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2167,
															"name": "Test_Mint_Pass_BlackTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "3691:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2168,
															"name": "Test_Mint_Pass_BlackScholarshipTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "3720:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3758:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2165,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3681:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3681:80:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2171,
												"nodeType": "ExpressionStatement",
												"src": "3681:80:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2173,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "3801:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2174,
															"name": "Test_Mint_Pass_BlueTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "3805:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2175,
															"name": "Test_Mint_Pass_BlueScholarshipTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "3833:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3870:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2172,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3795:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3795:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "3795:78:12"
											}
										]
									},
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "3506:84:12",
										"text": "@notice function for owner to mint (LC)\n @param to address to mint it to."
									},
									"functionSelector": "16473cf7",
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2162,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1881,
												"src": "3639:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3639:9:12"
										}
									],
									"name": "mintScholarship",
									"nameLocation": "3604:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3628:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "3620:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3620:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:12:12"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3649:0:12"
									},
									"scope": 2316,
									"src": "3595:285:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "4313:736:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2193,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "4344:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2194,
																	"name": "Test_Mint_Pass_BlueTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "4355:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4344:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2196,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "4385:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2197,
																	"name": "Test_Mint_Pass_BlackTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "4396:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4385:38:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4344:79:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "544d50563132413a204e6f6e6578697374656e7420746f6b656e2049442e",
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4437:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b792b41c51bd0535eac8e7752c9be2a75fb5bec17b7104673496b74710fd9cf0",
																"typeString": "literal_string \"TMPV12A: Nonexistent token ID.\""
															},
															"value": "TMPV12A: Nonexistent token ID."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b792b41c51bd0535eac8e7752c9be2a75fb5bec17b7104673496b74710fd9cf0",
																"typeString": "literal_string \"TMPV12A: Nonexistent token ID.\""
															}
														],
														"id": 2192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4323:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4323:156:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "4323:156:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2203,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2187,
														"src": "4494:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2204,
														"name": "Test_Mint_Pass_BlueTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "4505:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4494:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2243,
													"nodeType": "Block",
													"src": "4790:253:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2226,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2185,
																				"src": "4829:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2228,
																						"name": "Test_Mint_Pass_BlackTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2068,
																						"src": "4850:27:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2227,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2140,
																					"src": "4838:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256) view returns (uint256)"
																					}
																				},
																				"id": 2229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4838:40:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4829:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2231,
																			"name": "Test_Mint_Pass_BlackMaxSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "4882:29:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4829:82:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "544d50563132413a20416d6f756e74206973206c6172676572207468616e20746f74616c537570706c792e",
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4929:45:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_617cf2dffc4df0477a0f1acce806f689cfc6e415d9acac53e9f7bdbcde9c93be",
																			"typeString": "literal_string \"TMPV12A: Amount is larger than totalSupply.\""
																		},
																		"value": "TMPV12A: Amount is larger than totalSupply."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_617cf2dffc4df0477a0f1acce806f689cfc6e415d9acac53e9f7bdbcde9c93be",
																			"typeString": "literal_string \"TMPV12A: Amount is larger than totalSupply.\""
																		}
																	],
																	"id": 2225,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4804:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4804:184:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2235,
															"nodeType": "ExpressionStatement",
															"src": "4804:184:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2237,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "5008:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2238,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "5012:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2239,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "5021:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5029:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 2236,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "5002:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory)"
																	}
																},
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5002:30:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2242,
															"nodeType": "ExpressionStatement",
															"src": "5002:30:12"
														}
													]
												},
												"id": 2244,
												"nodeType": "IfStatement",
												"src": "4490:553:12",
												"trueBody": {
													"id": 2224,
													"nodeType": "Block",
													"src": "4533:251:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2207,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2185,
																				"src": "4572:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2209,
																						"name": "Test_Mint_Pass_BlueTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2071,
																						"src": "4593:26:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2208,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2140,
																					"src": "4581:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256) view returns (uint256)"
																					}
																				},
																				"id": 2210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4581:39:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4572:48:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2212,
																			"name": "Test_Mint_Pass_BlueMaxSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2059,
																			"src": "4624:28:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4572:80:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "544d50563132413a20416d6f756e74206973206c6172676572207468616e20746f74616c537570706c792e",
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4670:45:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_617cf2dffc4df0477a0f1acce806f689cfc6e415d9acac53e9f7bdbcde9c93be",
																			"typeString": "literal_string \"TMPV12A: Amount is larger than totalSupply.\""
																		},
																		"value": "TMPV12A: Amount is larger than totalSupply."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_617cf2dffc4df0477a0f1acce806f689cfc6e415d9acac53e9f7bdbcde9c93be",
																			"typeString": "literal_string \"TMPV12A: Amount is larger than totalSupply.\""
																		}
																	],
																	"id": 2206,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4547:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4547:182:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2216,
															"nodeType": "ExpressionStatement",
															"src": "4547:182:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2218,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "4749:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2219,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "4753:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2220,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "4762:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4770:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 2217,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "4743:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory)"
																	}
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4743:30:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2223,
															"nodeType": "ExpressionStatement",
															"src": "4743:30:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "3886:311:12",
										"text": "@notice function for owner to mint the token,\n just in case it's needed, mintScholarship() will be used to mint all the scholarships\n @param to address to mint it to.\n @param amount the amount that the owner wants to mint.\n @param tokenId which token ID 1 for black 2 for general"
									},
									"functionSelector": "388b9fe0",
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2189,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1881,
												"src": "4303:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4303:9:12"
										}
									],
									"name": "ownerMint",
									"nameLocation": "4211:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4238:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "4230:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4258:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "4250:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4282:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "4274:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:75:12"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4313:0:12"
									},
									"scope": 2316,
									"src": "4202:847:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "5348:148:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2254,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5370:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TestMintPassv12A_$2316",
																		"typeString": "contract TestMintPassv12A"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TestMintPassv12A_$2316",
																		"typeString": "contract TestMintPassv12A"
																	}
																],
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5362:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2252,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5362:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5362:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "5362:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5387:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5362:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2262,
												"nodeType": "IfStatement",
												"src": "5358:53:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2259,
															"name": "NoEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "5397:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5397:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2261,
													"nodeType": "RevertStatement",
													"src": "5390:21:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2266,
															"name": "vaultAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "5453:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2269,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5475:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TestMintPassv12A_$2316",
																			"typeString": "contract TestMintPassv12A"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TestMintPassv12A_$2316",
																			"typeString": "contract TestMintPassv12A"
																		}
																	],
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5467:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2267,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5467:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5467:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5467:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2263,
															"name": "SafeTransferLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "5421:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$2031_$",
																"typeString": "type(library SafeTransferLib)"
															}
														},
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1968,
														"src": "5421:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "5421:68:12"
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "5238:68:12",
										"text": "@notice Withdraw all ETH from the contract to the vault address."
									},
									"functionSelector": "3ccfd60b",
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2249,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1881,
												"src": "5338:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5338:9:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "5320:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5328:2:12"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5348:0:12"
									},
									"scope": 2316,
									"src": "5311:185:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "5652:45:12",
										"statements": [
											{
												"expression": {
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2283,
														"name": "vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "5662:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2284,
														"name": "_vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2278,
														"src": "5677:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5662:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2286,
												"nodeType": "ExpressionStatement",
												"src": "5662:28:12"
											}
										]
									},
									"documentation": {
										"id": 2276,
										"nodeType": "StructuredDocumentation",
										"src": "5502:87:12",
										"text": "@notice changing vault address\n @param _vaultAddress is the new vaultAddress"
									},
									"functionSelector": "6817031b",
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2280,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1881,
												"src": "5642:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5642:9:12"
										}
									],
									"name": "setVault",
									"nameLocation": "5603:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "_vaultAddress",
												"nameLocation": "5620:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "5612:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5612:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5611:23:12"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5652:0:12"
									},
									"scope": 2316,
									"src": "5594:103:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "5924:127:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 2299,
																		"name": "tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "5944:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 2301,
																	"indexExpression": {
																		"id": 2300,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2291,
																		"src": "5953:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5944:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5938:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2297,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "5938:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5938:24:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 2303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5938:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5973:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5938:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2309,
												"nodeType": "IfStatement",
												"src": "5934:76:12",
												"trueBody": {
													"id": 2308,
													"nodeType": "Block",
													"src": "5976:34:12",
													"statements": [
														{
															"expression": {
																"hexValue": "",
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5997:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"functionReturnParameters": 2296,
															"id": 2307,
															"nodeType": "Return",
															"src": "5990:9:12"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2310,
														"name": "tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "6027:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2312,
													"indexExpression": {
														"id": 2311,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "6036:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6027:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2296,
												"id": 2313,
												"nodeType": "Return",
												"src": "6020:24:12"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "5703:89:12",
										"text": "@notice returns the token URI\n @param tokenId which token ID to return 1 or 2."
									},
									"functionSelector": "0e89341c",
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "5806:3:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5879:8:12"
									},
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5818:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "5810:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5810:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5809:17:12"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "5905:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5905:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5904:15:12"
									},
									"scope": 2316,
									"src": "5797:254:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2317,
							"src": "502:5553:12",
							"usedErrors": [
								2035
							]
						}
					],
					"src": "42:6014:12"
				},
				"id": 12
			}
		}
	}
}